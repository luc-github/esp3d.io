var relearn_search_index = [
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e Notifications",
    "content": "Pushover is paid service\nConsidering you have pushover account (even just trial) and you already installed pushover client on you phone/PC:\n1 - Go to https://pushover.net/ and connect with email and password\n2 - Once connected you will be able to get the token 1, the user token\n3 - You also need to generate an application token, which is the token 2\n4 - The token 2 generation: 5 - Save the generate token 1 and token 2 in ESP3D, and set PUSHOVER as notification supplier\n[ESP610]type=PUSHOVER T1=xxxxxxxxxxxxxxxxxx T2=yyyyyyyyyyyyyyyyy\n6 - type [ESP610] to verify (T1 and T2 won’t be displayed)\n7 - Try to send message:\n[ESP600]Hi there, test from ESP3D",
    "description": "Pushover is paid service\nConsidering you have pushover account (even just trial) and you already installed pushover client on you phone/PC:\n1 - Go to https://pushover.net/ and connect with email and password\n2 - Once connected you will be able to get the token 1, the user token\n3 - You also need to generate an application token, which is the token 2\n4 - The token 2 generation: 5 - Save the generate token 1 and token 2 in ESP3D, and set PUSHOVER as notification supplier",
    "tags": [],
    "title": " Pushover Notification",
    "uri": "/esp3d-tft/v1.x/documentation/notifications/pushover/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Documentation \u003e Notifications",
    "content": "Pushover is paid service\nConsidering you have pushover account (even just trial) and you already installed pushover client on you phone/PC:\n1 - Go to https://pushover.net/ and connect with email and password\n2 - Once connected you will be able to get the token 1, the user token\n3 - You also need to generate an application token, which is the token 2\n4 - The token 2 generation: 5 - Save the generate token 1 and token 2 in ESP3D, and set PUSHOVER as notification supplier\n[ESP610]type=PUSHOVER T1=xxxxxxxxxxxxxxxxxx T2=yyyyyyyyyyyyyyyyy\n6 - type [ESP610] to verify (T1 and T2 won’t be displayed)\n7 - Try to send message:\n[ESP600]Hi there, test from ESP3D",
    "description": "Pushover is paid service\nConsidering you have pushover account (even just trial) and you already installed pushover client on you phone/PC:\n1 - Go to https://pushover.net/ and connect with email and password\n2 - Once connected you will be able to get the token 1, the user token\n3 - You also need to generate an application token, which is the token 2\n4 - The token 2 generation: 5 - Save the generate token 1 and token 2 in ESP3D, and set PUSHOVER as notification supplier",
    "tags": [],
    "title": " Pushover Notification",
    "uri": "/esp3d/v2.x/documentation/notifications/pushover/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e Notifications",
    "content": "Pushover is paid service\nConsidering you have pushover account (even just trial) and you already installed pushover client on you phone/PC:\n1 - Go to https://pushover.net/ and connect with email and password\n2 - Once connected you will be able to get the token 1, the user token\n3 - You also need to generate an application token, which is the token 2\n4 - The token 2 generation: 5 - Save the generate token 1 and token 2 in ESP3D, and set PUSHOVER as notification supplier\n[ESP610]type=PUSHOVER T1=xxxxxxxxxxxxxxxxxx T2=yyyyyyyyyyyyyyyyy\n6 - type [ESP610] to verify (T1 and T2 won’t be displayed)\n7 - Try to send message:\n[ESP600]Hi there, test from ESP3D",
    "description": "Pushover is paid service\nConsidering you have pushover account (even just trial) and you already installed pushover client on you phone/PC:\n1 - Go to https://pushover.net/ and connect with email and password\n2 - Once connected you will be able to get the token 1, the user token\n3 - You also need to generate an application token, which is the token 2\n4 - The token 2 generation: 5 - Save the generate token 1 and token 2 in ESP3D, and set PUSHOVER as notification supplier",
    "tags": [],
    "title": " Pushover Notification",
    "uri": "/esp3d/v3.x/documentation/notifications/pushover/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e Notifications",
    "content": "Pushover is paid service\nConsidering you have pushover account (even just trial) and you already installed pushover client on you phone/PC:\n1 - Go to https://pushover.net/ and connect with email and password\n2 - Once connected you will be able to get the token 1, the user token\n3 - You also need to generate an application token, which is the token 2\n4 - The token 2 generation: 5 - Save the generate token 1 and token 2 in ESP3D, and set PUSHOVER as notification supplier\n[ESP610]type=PUSHOVER T1=xxxxxxxxxxxxxxxxxx T2=yyyyyyyyyyyyyyyyy\n6 - type [ESP610] to verify (T1 and T2 won’t be displayed)\n7 - Try to send message:\n[ESP600]Hi there, test from ESP3D",
    "description": "Pushover is paid service\nConsidering you have pushover account (even just trial) and you already installed pushover client on you phone/PC:\n1 - Go to https://pushover.net/ and connect with email and password\n2 - Once connected you will be able to get the token 1, the user token\n3 - You also need to generate an application token, which is the token 2\n4 - The token 2 generation: 5 - Save the generate token 1 and token 2 in ESP3D, and set PUSHOVER as notification supplier",
    "tags": [],
    "title": " Pushover Notification",
    "uri": "/esp3dlib/v3.x/documentation/notifications/pushover/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "Anet boards up to v1.5 Step 1 You will have to unsolder the resistors R52 and R53 – they are zero ohm resistors, and serve no other purpose than connecting the atmega chip directly to the onboard USB to UART converter (the CH340 chip). Do it VERY careful – you don’t want to damage your board. If you don’t feel confident – don’t do it.\nStep 2 Prepare the printer’s motherboard. It requires a simple modification, that does not interfere with it’s operation afterwards – just solder 3 pin x 2 row male header on J8, and add 2 jumpers (or jumper wires) as shown on the picture:\nStep 3 Connect the ESP to J3 repsecting pinout\nPinout ESP J3 Tx Rx Rx Tx GND GND VCC 3.3V CH_PD 3.3V Anet boards v1.7 Unlike older boards this board does not require you to remove any resistors.\nYou will have to solder two wires from number 9 and number 10 its recommender to connect these to pin 1 and 2 of J3 connector.\nBoard pins voltage 5V Board firmware Marlin Board configuration note None, it use same serial as USB port so don’t use both together ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "Anet boards up to v1.5 and 1.7",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/anet_a8/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e TFT",
    "content": "\rTFT 35 E3Socket available\nTFT 70Socket available",
    "description": "TFT 35 E3Socket available\nTFT 70Socket available",
    "tags": [],
    "title": "Bigtreetech TFT",
    "uri": "/esp3d/v3.x/hardware/system_boards/tft/bigtreetech/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8285 boards",
    "content": "From blkbox\nSpecs ESP8285 with 1MB flash memory, ceramic antenna Note\rBecause flash is only 1MB, OTA/Web Update are not possible",
    "description": "blkboxme ESP8285 module",
    "tags": [],
    "title": "blkboxme",
    "uri": "/esp3d/v2.x/hardware/esp8285/blkbox/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8285 boards",
    "content": "From blkbox\nSpecs ESP8285 with 1MB flash memory, ceramic antenna Note\rBecause flash is only 1MB, OTA/Web Update are not possible",
    "description": "blkboxme ESP8285 module",
    "tags": [],
    "title": "blkboxme",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8285/blkbox/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, ceramic antenna, 30 pins ",
    "description": "Dev Kit V1",
    "tags": [],
    "title": "Dev Kit V1",
    "uri": "/esp3d/v2.x/hardware/esp32/devkit_v1/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, ceramic antenna, 30 pins ",
    "description": "Dev Kit V1",
    "tags": [],
    "title": "Dev Kit V1",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/devkit_v1/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-S3 boards",
    "content": "Documentation\nSpecs ESP32-S3 with 16MB flash memory, 8MB PSRAM, ceramic antenna, RGB led, Octal SPI, OTG port ",
    "description": "DevKitC-1 v1.0",
    "tags": [],
    "title": "DevKitC-1 v1.0",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-s3/devkitc-1-v1/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-S3 boards",
    "content": "Documentation\nSpecs ESP32-S3 with 8MB flash memory, ceramic antenna, RGB led, Quad SPI, OTG port ",
    "description": "DevKitM-1 v1.0",
    "tags": [],
    "title": "DevKitM-1 v1.0",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-s3/devkitm-1-v1/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e Extra tools",
    "content": "ESP3D support several discovery protocol that may need extra software to work according your operating system.\nSSDP (Simple Service Discovery Protocol) mDNS (multicast DNS)) ",
    "description": "ESP3D support several discovery protocol that may need extra software to work according your operating system.\nSSDP (Simple Service Discovery Protocol) mDNS (multicast DNS)) ",
    "tags": [],
    "title": "Discovery tools",
    "uri": "/tools/discovery/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware",
    "content": "\rESP8285 boards\rblkboxme\rItead8285\rESP8266 boards\rESP01 512K\rESP01 1M Generic\rESP01S 1M\rESP07\rESP12 e/f\rBigtreetech Cloud\rFYSETC-SD-WIFI\rBigtreetech WiFi module\rDiymore\rWemos D1 mini\rWemos D1 mini Pro\rMKS WiFi Module V1.0 (8 pins)\rMKS WiFi Module V1.1 (16 pins)\rNodemcu V0.8\rNodemcu V1.0\rSOnOff\rWiFI backpack\rAzteeg X5 mini WIFI\rESP32 boards\rDev Kit V1\rDev Kit C V4\rTTGO/LILYGO V7 mini\rWemos D1 R32\rTTGO T8\rLolin D32 Pro\rHeltec Dev board\rTTGO T Display\rTTGO T96 Oled\rBigtreetech ESP32E module\rBigtreetech ESP32U module\rESP32-Cam\rOlimex ESP32-Gateway\rOlimex ESP32-POE\rWT32-ETH1\rESP32-Pico boards\rFYSETC SD-WIFI-PRO\rESP32-C3 boards\rESP-C3-32S-Kit\rLILYGO T-01C3\rESP-C3-Super-Mini\rESP32-S2 boards\rLILYGO T8 ESP32-S2 V1.1\rESP32-S2-Saola-1\rWemos S2 mini\rESP32-S3 boards\rDevKitC-1 v1.0\rDevKitM-1 v1.0\rFreenove ESP32 S3\rUICPAL ESP32 S3\rT-SIMCAM\rSeeed Studio XIAO ESP32S3 Sense",
    "description": "ESP8285 boards\rblkboxme\rItead8285\rESP8266 boards\rESP01 512K\rESP01 1M Generic\rESP01S 1M\rESP07\rESP12 e/f\rBigtreetech Cloud\rFYSETC-SD-WIFI\rBigtreetech WiFi module\rDiymore\rWemos D1 mini\rWemos D1 mini Pro\rMKS WiFi Module V1.0 (8 pins)\rMKS WiFi Module V1.1 (16 pins)\rNodemcu V0.8\rNodemcu V1.0\rSOnOff\rWiFI backpack\rAzteeg X5 mini WIFI\rESP32 boards\rDev Kit V1\rDev Kit C V4\rTTGO/LILYGO V7 mini\rWemos D1 R32\rTTGO T8\rLolin D32 Pro\rHeltec Dev board\rTTGO T Display\rTTGO T96 Oled\rBigtreetech ESP32E module\rBigtreetech ESP32U module\rESP32-Cam\rOlimex ESP32-Gateway\rOlimex ESP32-POE\rWT32-ETH1\rESP32-Pico boards\rFYSETC SD-WIFI-PRO\rESP32-C3 boards\rESP-C3-32S-Kit\rLILYGO T-01C3\rESP-C3-Super-Mini\rESP32-S2 boards\rLILYGO T8 ESP32-S2 V1.",
    "tags": [],
    "title": "ESP boards",
    "uri": "/esp3d/v3.x/hardware/esp_boards/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-C3 boards",
    "content": "Specifications\nSpecs ESP32-C3 (single-core) with 2MB flash memory, ceramic antenna, rgb led ",
    "description": "ESP-C3-32S-Kit",
    "tags": [],
    "title": "ESP-C3-32S-Kit",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-c3/esp-c3-32s/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "\rSpecs ESP8266 in ESP01 format with 512KB flash memory, ceramic antenna Note\rBecause flash is only 512KB, the board is not supported",
    "description": "ESP01 512K Blue",
    "tags": [],
    "title": "ESP01 512K",
    "uri": "/esp3d/v2.x/hardware/esp8266/esp01-512k/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "\rSpecs ESP8266 in ESP01 format with 512KB flash memory, ceramic antenna Note\rBecause flash is only 512KB, the board is not supported",
    "description": "ESP01 512K Blue",
    "tags": [],
    "title": "ESP01 512K",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/esp01-512k/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem",
    "content": "What is ESP3D ? ESP3D is a firmware for ESP8266 and ESP32 boards from espressif, This firmware allows not only to have a cheap bridge between Wifi and serial, but also to have a web UI to configure wifi, to monitor 3D printer/CNC and even control it, and to make things easy, UI is fully customizable without reflashing FW.\nFirmware support different target firmwares according version.\nThe firmware use arduino framework and platformio system\nWarning\rThis is for esp8266, esp8285, esp32 boards as daughters boards connected to your main board only. For esp32 board as main board for your 3D Printer please use ESP3DLib\nThere is one production version and one development version, others versions are no more maintained.\nCybersecurity concerns If you plan to have access to you ESP from outside of your private network than you need to apply some basic security rules to avoid anybody to be able to access your ESP.\nDisclaimer : this is for reference - you are responsible of your board and internet network, we are not responsible for any damage to any of your network appliances.\nRecommendations Following steps must be done before your ESP is visible from public internet:\nActivate authentication in comfiguration file before flashing Change default user and password (this can be done with commands or webui) Is also strongly recommended to:\nUse strong passwords Use unique passwords, not same as for other accounts Change password regularly Configure box to redirect a different port than 80 to the port 80 of ESP Use DMZ feature of your box Additional tips Remember the web server is not https, this means the server will never be fully secure. In particular, avoid to connect to your printer from any public network you do not own. Stick to your 4G network or other safe places to avoid MITM attack ",
    "description": "What is ESP3D ? ESP3D is a firmware for ESP8266 and ESP32 boards from espressif, This firmware allows not only to have a cheap bridge between Wifi and serial, but also to have a web UI to configure wifi, to monitor 3D printer/CNC and even control it, and to make things easy, UI is fully customizable without reflashing FW.\nFirmware support different target firmwares according version.\nThe firmware use arduino framework and platformio system",
    "tags": [],
    "title": "ESP3D",
    "uri": "/esp3d/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation",
    "content": "Conventions 1 - Add space to separate parameters\n2 - If parameter has space add \\ in front of space to not be seen as separator\n3 - json, json=YES, json=TRUE, json=1 are paremeters to switch output to json\nBy default output is plain text, to get json formated output add json or json=yes after main parameters.\nThe json format is:\n{ cmd:\"\u003ccommand id\u003e\", //the id of requested command status:\"\u003cok/error\u003e\" //give if it is success or an failure data:\"\u003cresponse\u003e\" // response corresponding to answer in json format too }Commands Show commands help\n[ESP]\u003ccommand id\u003e json=\u003cno\u003e [ESP100]Set / Display Station SSID\n[ESP101]Set Station Password\n[ESP102]Set / Display Station IP mode\n[ESP103]Set / Display Station IP address\n[ESP104]Set station fallback mode state at boot\n[ESP105]Set / Display Access point SSID\n[ESP106]Set Access point password\n[ESP107]Set / Display Access point IP value\n[ESP108]Set / Display Access point channel value\n[ESP110]Set / Display radio state at boot\n[ESP111]Display current IP\n[ESP112]Set / Display Hostname\n[ESP114]Get/Set Boot radio state\n[ESP115]Get/Set immediate Network state\n[ESP120]Get/Set HTTP state\n[ESP121]Get/Set HTTP port\n[ESP130]Get/Set TELNET state\n[ESP131]Get/Set TELNET port\n[ESP140]Sync / Set / Get current time\n[ESP160]Get/Set WebSocket state\n[ESP170]Get/Set Camera commands/values\n[ESP171]Save frame to target path and filename\n[ESP200]Get/Set SD state\n[ESP202]Get/Set SD card Speed factor\n[ESP210]Get/Set Sensor Value / type\n[ESP214]Output to ESP3D screen status\n[ESP216]Do Snapshot of current screen\n[ESP220]Get ESP3D pins definition\n[ESP250]Play sound\n[ESP290]Delay/Pause command\n[ESP400]Get full ESP3D settings\n[ESP401]Set ESP3D settings\n[ESP402]Get/Set SD updater check at boot time\n[ESP410]List all AP detected around\n[ESP420]Get ESP3D current status\n[ESP444]Set ESP3D state\n[ESP450]List available ESP3D modules/ ESP3D related devices around\n[ESP460] Get/Set UI language\n[ESP500]Get authentication status\n[ESP510]Set/Get session timeout\n[ESP550]Set/Change admin password\n[ESP555]Set/Change user password\n[ESP600]Send Notification\n[ESP610]Set/Get Notification settings\n[ESP700]Process local file on /FS or /SD\n[ESP701]Query and Control ESP700 stream\n[ESP702]Define scripts used when stream is paused/aborted/resumed\n[ESP710]Format ESP Filesystem\n[ESP720]List files on /FS or defined repository\n[ESP730]Do some actions on ESP Filesystem: rmdir / remove / mkdir / exists / create\n[ESP740]List files on /SD or defined repository\n[ESP750]Do some actions on SD Card: rmdir / remove / mkdir / exists / create\n[ESP780]List Global Filesystem\n[ESP790]Do some actions on Global Filesystem: rmdir / remove / mkdir / exists / create\n[ESP800]Get ESP3D fw capabilities\n[ESP900]Get / Set state for main serial communication\n[ESP901]Set Serial baudrate for main serial communication\n[ESP902]Get/Set USB Serial baudrate\n[ESP950]Get / Set commands output",
    "description": "Syntax and parameters",
    "tags": [],
    "title": "ESP3D commands",
    "uri": "/esp3d-tft/v1.x/documentation/commands/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Documentation",
    "content": "Conventions Please note all commands are in format [ESPxx]. These first brackets [] are not optional.\nMost of the time givin no argument will return current configuration If authentication is on, somme commands will need admin password. They are recognised by the optional argument pwd=\u003cadmin password\u003e in command line.\nCommands Get/change STA SSID\n[ESP100] \u003cSSID\u003e pwd=\u003cadmin password\u003e\nChange STA Password\n[ESP101] \u003cPassword\u003e pwd=\u003cadmin password\u003e\nGet/change Hostname\n[ESP102] \u003chostname\u003e pwd=\u003cadmin password\u003e\nGet/change Wifi mode (STA/AP)\n[ESP103] \u003cmode\u003e pwd=\u003cadmin password\u003e\nGet/change STA IP mode (DHCP/STATIC)\n[ESP104] \u003cmode\u003e pwd=\u003cadmin password\u003e\nGet/change AP SSID\n[ESP105] \u003cSSID\u003e pwd=\u003cadmin password\u003e\nChange AP Password\n[ESP106] \u003cPassword\u003e pwd=\u003cadmin password\u003e\nGet/change AP IP mode (DHCP/STATIC)\n[ESP107] \u003cmode\u003e pwd=\u003cadmin password\u003e\nGet/change wifi state (on/off)\n[ESP110] \u003cstate\u003e pwd=\u003cadmin password\u003e\nGet current IP\n[ESP111]\nGet/Change hostname\n[ESP112] \u003chostname\u003e\nGet/Set pin value\n[ESP201] P\u003cpin\u003e V\u003cvalue\u003e PULLUP=\u003cYES/NO\u003e RAW=\u003cYES/NO\u003e ANALOG=\u003cNO/YES\u003e ANALOG_RANGE=[255/1024] CLEARCHANNELS=\u003cNO/YES} pwd=\u003cadmin password\u003e\nif no V get P value\nif V 0/1 set INPUT_PULLUP value, but for GPIO16 INPUT_PULLDOWN_16 GPIO1 and GPIO3 cannot be used as they are used for serial\nif PULLUP=YES set input pull up, if not set input\nif RAW=YES do not set pinmode just read value\nOutput to oled column C and line L\n[ESP210] C=\u003ccol\u003e L=\u003cline\u003e T=\u003cText\u003e\nOutput to oled line 1\n[ESP211] \u003cText\u003e\nOutput to oled line 2\n[ESP212] \u003cText\u003e\nOutput to oled line 3\n[ESP213] \u003cText\u003e\nOutput to oled line 4\n[ESP214] \u003cText\u003e\nDelay\n[ESP290] \u003cdelayMs\u003e pwd=\u003cadmin password\u003e\nGet EEPROM mapping version\n[ESP300]\nGet full EEPROM settings content but do not give any passwords can filter if only need wifi or printer [ESP400] \u003cnetwork/printer\u003e\nSet EEPROM setting\n[ESP401] P=\u003cposition\u003e T={B | I | S | A} V=\u003cvalue\u003e pwd=\u003cuser/admin password\u003e\nT type: B(byte), I(integer/long), S(string), A(IP address / mask)\nP position: address in EEPROM\nDescription: Positions: EP_WIFI_MODE 0 //1 byte = flag EP_STA_SSID 1 //33 bytes 32+1 = string ; warning does not support multibyte char like chinese EP_STA_PASSWORD 34 //65 bytes 64 +1 = string ;warning does not support multibyte char like chinese EP_STA_IP_MODE 99 //1 byte = flag EP_STA_IP_VALUE 100 //4 bytes xxx.xxx.xxx.xxx EP_STA_MASK_VALUE 104 //4 bytes xxx.xxx.xxx.xxx EP_STA_GATEWAY_VALUE 108 //4 bytes xxx.xxx.xxx.xxx EP_BAUD_RATE 112 //4 bytes = int EP_STA_PHY_MODE 116 //1 byte = flag EP_SLEEP_MODE 117 //1 byte = flag EP_CHANNEL 118 //1 byte = flag EP_AUTH_TYPE 119 //1 byte = flag EP_SSID_VISIBLE 120 //1 byte = flag EP_WEB_PORT 121 //4 bytes = int EP_DATA_PORT 125 //4 bytes = int EP_OUTPUT_FLAG 129 //1 bytes = flag EP_HOSTNAME 130 //33 bytes 32+1 = string ; warning does not support multibyte char like chinese EP_DHT_INTERVAL 164 //4 bytes = int EP_FREE_INT2 168 //4 bytes = int EP_FREE_INT3 172 //4 bytes = int EP_ADMIN_PWD 176 //21 bytes 20+1 = string ; warning does not support multibyte char like chinese EP_USER_PWD 197 //21 bytes 20+1 = string ; warning does not support multibyte char like chinese EP_AP_SSID 218 //33 bytes 32+1 = string ; warning does not support multibyte char like chinese EP_AP_PASSWORD 251 //65 bytes 64 +1 = string ;warning does not support multibyte char like chinese EP_AP_IP_VALUE 316 //4 bytes xxx.xxx.xxx.xxx EP_AP_MASK_VALUE 320 //4 bytes xxx.xxx.xxx.xxx EP_AP_GATEWAY_VALUE 324 //4 bytes xxx.xxx.xxx.xxx EP_AP_IP_MODE 329 //1 byte = flag EP_AP_PHY_MODE 330 //1 byte = flag EP_FREE_STRING1 331 //129 bytes 128+1 = string ; warning does not support multibyte char like chinese EP_DHT_TYPE 460 //1 bytes = flag EP_TARGET_FW 461 //1 bytes = flag Get available AP list (limited to 30) [ESP410]\u003cplain\u003e\nOutput is JSON or plain text according parameter\nGet current settings of ESP3D\n[ESP420]\u003cplain\u003e\nOutput is JSON or plain text according parameter\nGet/Set ESP mode (RESET, SAFEMODE, CONFIG, RESTART)\n[ESP444] \u003cmode\u003e pwd=\u003cadmin password\u003e\nif authentication is on, need admin password for RESET, RESTART and SAFEMODE\nSend GCode with check sum caching right line numbering\n[ESP500] \u003cgcode\u003e\nSend line checksum\n[ESP501] \u003cline\u003e\nChange / Reset password\n[ESP550] \u003cpassword\u003e pwd=\u003cadmin password\u003e\nIf no password set it use default one\nChange / Reset user password\n[ESP555] \u003cpassword\u003e pwd=\u003cadmin/user password\u003e\nIf no password set it use default one\nSend notification [ESP600] \u003cmessage\u003e pwd=\u003cadmin password\u003e\nSet/Get notification settings (type can be NONE, PUSHOVER, EMAIL, LINE)\n[ESP610] type=\u003ctype\u003e T1=\u003ctoken1\u003e T2=\u003ctoken2\u003e TS=\u003cSettings\u003e pwd=\u003cadmin password\u003e Get will give type and settings only not the protected T1/T2\nRead SPIFFS file and send each line to serial\n[ESP700] \u003cfilename\u003e\nFormat SPIFFS\n[ESP710] FORMAT pwd=\u003cadmin password\u003e\nGet SPIFFS total size and used size\n[ESP720]\nGet fw version and basic information\n[ESP800]\nGet fw target\n[ESP801]\nGet state / Set Enable / Disable Serial Communication (state: {ENABLE, DISABLE)\n[ESP900] \u003cstate\u003e",
    "description": "Syntax and parameters",
    "tags": [],
    "title": "ESP3D commands",
    "uri": "/esp3d/v2.x/documentation/commands/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation",
    "content": "Conventions 1 - Add space to separate parameters\n2 - If parameter has space add \\ in front of space to not be seen as separator\n3 - json, json=YES, json=TRUE, json=1 are paremeters to switch output to json\nBy default output is plain text, to get json formated output add json or json=yes after main parameters.\nThe json format is:\n{ cmd:\"\u003ccommand id\u003e\", //the id of requested command status:\"\u003cok/error\u003e\" //give if it is success or an failure data:\"\u003cresponse\u003e\" // response corresponding to answer in json format too }Commands Show commands help\n[ESP]\u003ccommand id\u003e json=\u003cno\u003e [ESP100]Set / Display Station SSID\n[ESP101]Set Station Password\n[ESP102]Set / Display Station IP mode\n[ESP103]Set / Display Station IP address\n[ESP104]Set station fallback mode state at boot\n[ESP105]Set / Display Access point SSID\n[ESP106]Set Access point password\n[ESP107]Set / Display Access point IP value\n[ESP108]Set / Display Access point channel value\n[ESP110]Set / Display radio state at boot\n[ESP111]Display current IP\n[ESP112]Set / Display Hostname\n[ESP114]Get/Set Boot radio state\n[ESP115]Get/Set immediate Network state\n[ESP120]Get/Set HTTP state\n[ESP121]Get/Set HTTP port\n[ESP130]Get/Set TELNET state\n[ESP131]Get/Set TELNET port\n[ESP140]Sync / Set / Get current time\n[ESP150]Get/Set boot delay in ms / Verbose boot\n[ESP160]Get/Set WebSocket state\n[ESP161]Get/Set WebSocket port\n[ESP170]Get/Set Camera commands/values\n[ESP171]Save frame to target path and filename\n[ESP180]Get/Set Ftp state\n[ESP181]Get/Set Ftp ports\n[ESP190]Get/Set WebDav state\n[ESP191]Get/Set WebDav port\n[ESP200]Get/Set SD state\n[ESP201]Get/Set pin value\n[ESP202]Get/Set SD card Speed factor\n[ESP210]Get/Set Sensor Value / type\n[ESP212]Output to ESP3D screen status\n[ESP214]Output to ESP3D screen status\n[ESP215]Start a Touch Calibration\n[ESP220]Get ESP3D pins definition\n[ESP250]Play sound\n[ESP290]Delay/Pause command\n[ESP400]Get full ESP3D settings\n[ESP401]Set ESP3D settings\n[ESP402]Get/Set SD updater check at boot time\n[ESP410]List all AP detected around\n[ESP420]Get ESP3D current status\n[ESP444]Set ESP3D state\n[ESP450]List available ESP3D modules/ ESP3D related devices around\n[ESP500]Get authentication status\n[ESP510]Set/Get session timeout\n[ESP550]Set/Change admin password\n[ESP555]Set/Change user password\n[ESP600]Send Notification\n[ESP610]Set/Get Notification settings\n[ESP620]Send Notification using encodded URL\n[ESP700]Process local file on /FS or /SD\n[ESP701]Query and Control ESP700 stream\n[ESP710]Format ESP Filesystem\n[ESP715]Format SD Card\n[ESP720]List files on /FS or defined repository\n[ESP730]Do some actions on ESP Filesystem: rmdir / remove / mkdir / exists / create\n[ESP740]List files on /SD or defined repository\n[ESP750]Do some actions on SD Card: rmdir / remove / mkdir / exists / create\n[ESP780]List Global Filesystem\n[ESP790]Do some actions on Global Filesystem: rmdir / remove / mkdir / exists / create\n[ESP800]Get ESP3D fw capabilities\n[ESP900]Get / Set state for main serial communication\n[ESP901]Set Serial baudrate for main serial communication\n[ESP910]Get / Set state for buzzer\n[ESP930]Get / Set state for Serial Bridge\n[ESP931]Get / Set baudrate for Serial Bridge\n[ESP999]Set quiet boot",
    "description": "Syntax and parameters",
    "tags": [],
    "title": "ESP3D commands",
    "uri": "/esp3d/v3.x/documentation/commands/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X \u003e Documentation",
    "content": "Conventions Add space to separate parameters\nDisplay command list [ESP]\nSet/Get STA SSID [ESP100]\nSet STA Password [ESP101]\nSet/Get STA IP mode (DHCP/STATIC) [ESP102]\nSet/Get STA IP/Mask/GW [ESP103]IP= MSK= GW=\nSet/Get AP SSID [ESP105]\nChange AP Password [ESP106]\nSet/Get AP IP [ESP107]\nSet/Get AP channel [ESP108]\nSet/Get radio state which can be STA, AP, OFF [ESP110]\nGet current IP [ESP111]\nGet/Set hostname [ESP112]\nGet/Set HTTP state which can be ON, OFF [ESP120]\nGet/Set HTTP port [ESP121]\nGet SD Card Status [ESP200]\nGet full EEPROM settings content Note: it does not give any passwords\n[ESP400]\nSet EEPROM setting Using position in EEPROM, type: B(byte), I(integer/long), S(string), A(IP address / mask)\n[ESP401]P= T= V=\nDescription:\tPositions: HOSTNAME_ENTRY \"ESP_HOSTNAME\" STA_SSID_ENTRY \"STA_SSID\" STA_PWD_ENTRY \"STA_PWD\" STA_IP_ENTRY \"STA_IP\" STA_GW_ENTRY \"STA_GW\" STA_MK_ENTRY \"STA_MK\" ESP_RADIO_MODE \"WIFI_MODE\" AP_SSID_ENTRY \"AP_SSID\" AP_PWD_ENTRY \"AP_PWD\" AP_IP_ENTRY \"AP_IP\" AP_CHANNEL_ENTRY \"AP_CHANNEL\" HTTP_ENABLE_ENTRY \"HTTP_ON\" HTTP_PORT_ENTRY \"HTTP_PORT\" TELNET_ENABLE_ENTRY \"TELNET_ON\" TELNET_PORT_ENTRY \"TELNET_PORT\" STA_IP_MODE_ENTRY \"STA_IP_MODE\"Get available AP list (limited to 30) Output is JSON or plain text according parameter\n[ESP410]\nGet current settings of ESP3D Output is plain text\n[ESP420]\nSet ESP State cmd is RESTART / RESET\n[ESP444]\nChange admin password [ESP550]\nChange user password [ESP555]\nFormat ESP Filesystem [ESP710]FORMAT\nFW Informations [ESP800]",
    "description": "Syntax and parameters",
    "tags": [],
    "title": "ESP3D commands",
    "uri": "/esp3dlib/v1.x/documentation/commands/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation",
    "content": "Conventions 1 - Add space to separate parameters\n2 - If parameter has space add \\ in front of space to not be seen as separator\n3 - json, json=YES, json=TRUE, json=1 are paremeters to switch output to json\nBy default output is plain text, to get json formated output add json or json=yes after main parameters.\nThe json format is:\n{ cmd:\"\u003ccommand id\u003e\", //the id of requested command status:\"\u003cok/error\u003e\" //give if it is success or an failure data:\"\u003cresponse\u003e\" // response corresponding to answer in json format too }Commands Show commands help\n[ESP]\u003ccommand id\u003e json=\u003cno\u003e [ESP100]Set / Display Station SSID\n[ESP101]Set Station Password\n[ESP102]Set / Display Station IP mode\n[ESP103]Set / Display Station IP address\n[ESP104]Set station fallback mode state at boot\n[ESP105]Set / Display Access point SSID\n[ESP106]Set Access point password\n[ESP107]Set / Display Access point IP value\n[ESP108]Set / Display Access point channel value\n[ESP110]Set / Display radio state at boot\n[ESP111]Display current IP\n[ESP112]Set / Display Hostname\n[ESP114]Get/Set Boot radio state\n[ESP115]Get/Set immediate Network state\n[ESP120]Get/Set HTTP state\n[ESP121]Get/Set HTTP port\n[ESP130]Get/Set TELNET state\n[ESP131]Get/Set TELNET port\n[ESP140]Sync / Set / Get current time\n[ESP150]Get/Set boot delay in ms / Verbose boot\n[ESP160]Get/Set WebSocket state\n[ESP161]Get/Set WebSocket port\n[ESP170]Get/Set Camera commands/values\n[ESP171]Save frame to target path and filename\n[ESP180]Get/Set Ftp state\n[ESP181]Get/Set Ftp ports\n[ESP190]Get/Set WebDav state\n[ESP191]Get/Set WebDav port\n[ESP200]Get/Set SD state\n[ESP201]Get/Set pin value\n[ESP202]Get/Set SD card Speed factor\n[ESP210]Get/Set Sensor Value / type\n[ESP214]Output to ESP3D screen status\n[ESP215]Start a Touch Calibration\n[ESP220]Get ESP3D pins definition\n[ESP250]Play sound\n[ESP290]Delay/Pause command\n[ESP400]Get full ESP3D settings\n[ESP401]Set ESP3D settings\n[ESP402]Get/Set SD updater check at boot time\n[ESP410]List all AP detected around\n[ESP420]Get ESP3D current status\n[ESP444]Set ESP3D state\n[ESP450]List available ESP3D modules/ ESP3D related devices around\n[ESP500]Get authentication status\n[ESP510]Set/Get session timeout\n[ESP550]Set/Change admin password\n[ESP555]Set/Change user password\n[ESP600]Send Notification\n[ESP610]Set/Get Notification settings\n[ESP620]Send Notification using encodded URL\n[ESP700]Process local file on /FS or /SD\n[ESP701]Query and Control ESP700 stream\n[ESP710]Format ESP Filesystem\n[ESP715]Format SD Card\n[ESP720]List files on /FS or defined repository\n[ESP730]Do some actions on ESP Filesystem: rmdir / remove / mkdir / exists / create\n[ESP740]List files on /SD or defined repository\n[ESP750]Do some actions on SD Card: rmdir / remove / mkdir / exists / create\n[ESP780]List Global Filesystem\n[ESP790]Do some actions on Global Filesystem: rmdir / remove / mkdir / exists / create\n[ESP800]Get ESP3D fw capabilities\n[ESP900]Get / Set state for main serial communication\n[ESP901]Set Serial baudrate for main serial communication\n[ESP910]Get / Set state for buzzer\n[ESP930]Get / Set state for Serial Bridge\n[ESP931]Get / Set baudrate for Serial Bridge\n[ESP999]Set quiet boot",
    "description": "Syntax and parameters",
    "tags": [],
    "title": "ESP3D commands",
    "uri": "/esp3dlib/v3.x/documentation/commands/index.html"
  },
  {
    "breadcrumb": "",
    "content": "What is ESP3D Ecosystem ? ESP3D Ecosystem is a collection of projects based on espressif boards like esp8266 and esp32. The purpose is to provide WiFi feature to users of 3D printer, CNC, Sand Table and plotter.\nDepending of the configuration and the hardware the solution will be different but the goal is to provide a set of feature equivalent accross devices.\nCheck on the menu the current projects, each one has a different implementation for same purpose.\nWhat project to use ? Based on hardware %%{init:{\"theme\":\"default\"}}%%\rgraph LR;\rA{\u003cstrong\u003eHardware?\u003c/strong\u003e} --\u003e|ESP8266| B[ESP3D]\rA --\u003e|ESP32| C{\u003cstrong\u003eIs main board ?\u003c/strong\u003e} C --\u003e|No| D{\u003cstrong\u003eHas Touchscreen ?\u003c/strong\u003e} C --\u003e|Yes| E[ESP3DLib]\rD --\u003e|Yes| F[ESP3D-TFT]\rD --\u003e|No| G[ESP3D]\rBased on connection %%{init:{\"theme\":\"default\"}}%%\rgraph LR;\rA{\u003cstrong\u003eConnection?\u003c/strong\u003e} --\u003e|Serial| B{\u003cstrong\u003eHas Touchscreen ?\u003c/strong\u003e} B --\u003e|No|H[ESP3D]\rB --\u003e|Yes|I[ESP3D-TFT]\rA --\u003e|USB| C{\u003cstrong\u003eIs ESP32-S3 ?\u003c/strong\u003e} C --\u003e|No| D[Sorry no support for this] C --\u003e|Yes| E{\u003cstrong\u003eHas Touchscreen ?\u003c/strong\u003e}\rE --\u003e|Yes| F[ESP3D-TFT]\rE --\u003e|No| G[Coming soon in ESP3D]\rBased on feature %%{init:{\"theme\":\"default\"}}%%\rgraph LR;\rA{\u003cstrong\u003eIs main board ?\u003c/strong\u003e} --\u003e|Yes| B{\u003cstrong\u003eHardware ?\u003c/strong\u003e} B --\u003e|ESP8266| C[Sorry no support for this]\rB --\u003e|ESP32| D[ESP3DLib]\rA --\u003e|No| E{\u003cstrong\u003eHardware ?\u003c/strong\u003e} E --\u003e|ESP8266| F[ESP3D]\rE --\u003e|ESP32| G{\u003cstrong\u003eHas Touchscreen ?\u003c/strong\u003e} G --\u003e|Yes| H[ESP3D-TFT]\rG --\u003e|No| I[ESP3D]",
    "description": "Web site of ESP3D ecosystem",
    "tags": [],
    "title": "ESP3D Ecosystem",
    "uri": "/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem",
    "content": "What is ESP3DLib ? ESP3DLib is a Marlin library for ESP32 boards using Marlin 2.x. that enable ESP3D features like WiFi and WebUI. Features depends on the version the ESP3DLib installed.\nMarlin use arduino framework and platformio system\nTested boards The list is here for 1.0, and here for 3.0\nPlease refer to Marlin documentation for more information on specific configurations for each boards.\nWarning\rThis is NOT for esp8266, esp8285, esp32 boards as daughters boards connected to your main board.\nThere is one production version and one development version.\nCybersecurity concerns If you plan to have access to you ESP from outside of your private network than you need to apply some basic security rules to avoid anybody to be able to access your ESP.\nDisclaimer : this is for reference - you are responsible of your board and internet network, we are not responsible for any damage to any of your network appliances.\nRecommendations Following steps must be done before your ESP is visible from public internet:\nActivate authentication in comfiguration file before flashing Change default user and password (this can be done with commands or webui) Is also strongly recommended to:\nUse strong passwords Use unique passwords, not same as for other accounts Change password regularly Configure box to redirect a different port than 80 to the port 80 of ESP Use DMZ feature of your box Additional tips Remember the web server is not https, this means the server will never be fully secure. In particular, avoid to connect to your printer from any public network you do not own. Stick to your 4G network or other safe places to avoid MITM attack ",
    "description": "What is ESP3DLib ? ESP3DLib is a Marlin library for ESP32 boards using Marlin 2.x. that enable ESP3D features like WiFi and WebUI. Features depends on the version the ESP3DLib installed.\nMarlin use arduino framework and platformio system\nTested boards The list is here for 1.0, and here for 3.0\nPlease refer to Marlin documentation for more information on specific configurations for each boards.\nWarning\rThis is NOT for esp8266, esp8285, esp32 boards as daughters boards connected to your main board.",
    "tags": [],
    "title": "ESP3DLib",
    "uri": "/esp3dlib/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware",
    "content": "\rblkboxmeblkboxme ESP8285 module\nItead8285Itead8285 module",
    "description": " ",
    "tags": [],
    "title": "ESP8285 boards",
    "uri": "/esp3d/v2.x/hardware/esp8285/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards",
    "content": "\rblkboxmeblkboxme ESP8285 module\nItead8285Itead8285 module",
    "description": " ",
    "tags": [],
    "title": "ESP8285 boards",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8285/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X",
    "content": "The V1.X features are :\nEmbedded maintenance page (terminal / local FS update / ESP3D Firmware update) WebUI 3.X support ESP32 / ESP32-S3 support Wifi Raw TCP / serial bridge support (light telnet) Websocket / serial bridge support Serial / Serial bridge support Bluetooth Serial bridge support (when BT supported) Serial commands configurations Authentication support (admin / user) WebDav support Local FS support: Little FS SD support(Direct connection) File format Native SPI Native SDIO USB (OTG) Hostsupport (need to use external power supply) Global FS under Webdav : SD + Local FS in same directory Buzzer support (Not yet) Pins control by commands (Not yet) Time synchronization support (manual / internet server) Notifications support WebUI TFT/OLED Email Line Telegram PushOver IFTTT Auto script support at start (Not yet) Host GCODE stream for macros hosted on local FS (Work in Progress) Update ESP3D configuration using ini file on SD ESP3D update using binary file on SD OTA support Update by WebUI ",
    "description": "The V1.X features are :\nEmbedded maintenance page (terminal / local FS update / ESP3D Firmware update) WebUI 3.X support ESP32 / ESP32-S3 support Wifi Raw TCP / serial bridge support (light telnet) Websocket / serial bridge support Serial / Serial bridge support Bluetooth Serial bridge support (when BT supported) Serial commands configurations Authentication support (admin / user) WebDav support Local FS support: Little FS SD support(Direct connection) File format Native SPI Native SDIO USB (OTG) Hostsupport (need to use external power supply) Global FS under Webdav : SD + Local FS in same directory Buzzer support (Not yet) Pins control by commands (Not yet) Time synchronization support (manual / internet server) Notifications support WebUI TFT/OLED Email Line Telegram PushOver IFTTT Auto script support at start (Not yet) Host GCODE stream for macros hosted on local FS (Work in Progress) Update ESP3D configuration using ini file on SD ESP3D update using binary file on SD OTA support Update by WebUI ",
    "tags": [],
    "title": "Features",
    "uri": "/esp3d-tft/v1.x/features/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 2.1.X",
    "content": "The V2.1.X features are :\nMultiple firmwares support: Repetier, Marlin, Smoothieware and GRBL. Multiple languages support Full WiFi configuration of ESP3D settings including web update Control and monitor your connected board and firmware in every aspect (position, temperature, print, SD card content, custom commands, etc…) Macro support to add custom commands in WebUI by adding buttons launching some GCODE files from SD or ESP IP Camera support. ",
    "description": "The V2.1.X features are :\nMultiple firmwares support: Repetier, Marlin, Smoothieware and GRBL. Multiple languages support Full WiFi configuration of ESP3D settings including web update Control and monitor your connected board and firmware in every aspect (position, temperature, print, SD card content, custom commands, etc…) Macro support to add custom commands in WebUI by adding buttons launching some GCODE files from SD or ESP IP Camera support. ",
    "tags": [],
    "title": "Features",
    "uri": "/esp3d-webui/v2.x/features/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X",
    "content": "The V3.X features are :\nGlobal Features Firmware update WebUI update List of enabled features /capabilities Wifi configuration Features configuration WebUI features configuration Haptic feedback Audio feedback Terminal commands Emmergency stop Pluggins support Themes support (CSS) Language packs support Macro commands Local FS listing / content management External pages/panel support PC / Tablet / phone UI IP Camera \u0026 ESP32 Camera display support Import / Export settings Restart board support Monolitic small footprint Single user management support (auto close if not latest connected) Authentication support (admin / user) Configuration wizard (TBD) Firmware supported (3DPrinter / CNC / SandTable): ESP3D V3.x: Marlin (1.x / 2.x) Smoothieware (1.x / 2.x) Repetier (1.x / 2.x) GRBL (1.1h) ESP3D-TFT ESP3DLib Marlin (2.x) - currently need custom version of Marlin : https://github.com/luc-github/Marlin/tree/ESP3DLibV3.0 grblHAL Makerbase TFT (/esp3d/v3.x/) Bigtreetech TFT (/esp3d/) Firmware NOT yet supported: Reprap Klipper 3D Printer Features Target firmware configuration Jog control / monitoring Temperatures control / monitoring Additionnal sensors support Chart support for temperatures / sensors Multiple extruder support Target Firmware SD listing / content management (if supported) TFT SD/USB listing / content management (if supported) Fan control / monitoring (if supported) Flow rate control / monitoring (if supported) Feed rate control / monitoring (if supported) Print control / monitoring More to come… CNC Features Target firmware configuration Jog control / monitoring Laser control Spindle control Status monitoring Probing control / monitoring Code streaming using ESP3D V3 More to come… Sand Table Features Target firmware configuration Jog control / monitoring Status monitoring More to come… ",
    "description": "The V3.X features are :\nGlobal Features Firmware update WebUI update List of enabled features /capabilities Wifi configuration Features configuration WebUI features configuration Haptic feedback Audio feedback Terminal commands Emmergency stop Pluggins support Themes support (CSS) Language packs support Macro commands Local FS listing / content management External pages/panel support PC / Tablet / phone UI IP Camera \u0026 ESP32 Camera display support Import / Export settings Restart board support Monolitic small footprint Single user management support (auto close if not latest connected) Authentication support (admin / user) Configuration wizard (TBD) Firmware supported (3DPrinter / CNC / SandTable): ESP3D V3.",
    "tags": [],
    "title": "Features",
    "uri": "/esp3d-webui/v3.x/features/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X",
    "content": "The V2.1.X features are :\nSupport for ESP8266, ESP8285 and standard ESP32 board with at least 1Mb of flash Serial/Wifi bridge using configurable port 8888 Reset settings using GPIO2 pin Complete configuration by web browser (Station or Access point) or by Serial/telnet commands Authentication (optional) for better security Update firmware by web browser for 4MB boards Captive portal in Access point mode which redirect all unknow call to main page mDNS, this feature is a discovery protocol, it need bonjour installed on computer, supported outof the box by OSX, on Windows and Linux need to be installed SSDP, this feature is a discovery protocol, supported on Windows out of the box Fail safe mode (Access point)is enabled if cannot connect to defined station at boot. Embedded FS uploader and updater Basic OLED screen support Notifications using Line / Pushover / Email DHT sensor support Direct pins control using ESP commands ",
    "description": "The V2.1.X features are :\nSupport for ESP8266, ESP8285 and standard ESP32 board with at least 1Mb of flash Serial/Wifi bridge using configurable port 8888 Reset settings using GPIO2 pin Complete configuration by web browser (Station or Access point) or by Serial/telnet commands Authentication (optional) for better security Update firmware by web browser for 4MB boards Captive portal in Access point mode which redirect all unknow call to main page mDNS, this feature is a discovery protocol, it need bonjour installed on computer, supported outof the box by OSX, on Windows and Linux need to be installed SSDP, this feature is a discovery protocol, supported on Windows out of the box Fail safe mode (Access point)is enabled if cannot connect to defined station at boot.",
    "tags": [],
    "title": "Features",
    "uri": "/esp3d/v2.x/features/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X",
    "content": "The V3.X features are :\nEmbedded maintenance page (terminal / local FS update / ESP3D Firmware update) WebUI support ESP8285 / ESP8266 / ESP32 / ESP32-S2 / ESP32-S3 / ESP32-C3 support Wifi / ethernet support Raw TCP / serial bridge support (light telnet) Boot delay configuration Websocket / serial bridge support Serial / Serial bridge support Bluetooth Serial bridge support (when BT supported) MKS Serial protocol support Serial commands configurations Authentication support (admin / user) FTP support (limited to 1 connection at once) WebDav support Local FS support: Little FS Fat (ESP32 only) SD support File format Native SPI Native SDIO (ESP32 only) SDFat 2.x Connection Direct connection e.g.: ESP32cam Sharing connection using hardware switch e.g.: Panucatt Wifi Backpack / Azteeg X5 WiFi MKS fast upload by serial NOT SUPPORTED ANYMORE M28/M29 File transfer protocol Serial file transfer using custom protocol (planned) USB support planned Global FS under FTP / Webdav : SD + Local FS in same directory Buzzer support Recovery pin support Pins control by commands ESP32 Camera support (only with PSRAM) Basic oled screen support I2C SSD1306 128x64 I2C SSDSH1106 132x64 Basic tft screen support SPI ST7789 135x240 SPI ST7789 240x240 Time synchronization support (manual / internet server) Lua interpreter support (Work in progress) Notifications support WebUI TFT/OLED Email Line Telegram PushOver IFTTT Home Assistant Sensors support DHT 11/22 Analog BMX280 Auto script support at start Basic Host GCODE stream for macros hosted on local FS (Work in Progress) Update ESP3D configuration using ini file on SD ESP3D update using binary file on SD OTA support Update by WebUI ",
    "description": "The V3.X features are :\nEmbedded maintenance page (terminal / local FS update / ESP3D Firmware update) WebUI support ESP8285 / ESP8266 / ESP32 / ESP32-S2 / ESP32-S3 / ESP32-C3 support Wifi / ethernet support Raw TCP / serial bridge support (light telnet) Boot delay configuration Websocket / serial bridge support Serial / Serial bridge support Bluetooth Serial bridge support (when BT supported) MKS Serial protocol support Serial commands configurations Authentication support (admin / user) FTP support (limited to 1 connection at once) WebDav support Local FS support: Little FS Fat (ESP32 only) SD support File format Native SPI Native SDIO (ESP32 only) SDFat 2.",
    "tags": [],
    "title": "Features",
    "uri": "/esp3d/v3.x/features/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X",
    "content": "The V1.X features are :\nComplete configuration by web browser (Station or Access point) or by Serial commands Authentication for sensitive pages Update firmware by web browser or OTA Captive portal in Access point mode which redirect all unknow call to main page mDNS which allows to key the name defined in web browser and connect only with bonjour installed on computer SSDP, this feature is a discovery protocol, supported on Windows out of the box Fail safe mode (Access point)is enabled if cannot connect to defined station at boot. Web UI support ",
    "description": "The V1.X features are :\nComplete configuration by web browser (Station or Access point) or by Serial commands Authentication for sensitive pages Update firmware by web browser or OTA Captive portal in Access point mode which redirect all unknow call to main page mDNS which allows to key the name defined in web browser and connect only with bonjour installed on computer SSDP, this feature is a discovery protocol, supported on Windows out of the box Fail safe mode (Access point)is enabled if cannot connect to defined station at boot.",
    "tags": [],
    "title": "Features",
    "uri": "/esp3dlib/v1.x/features/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X",
    "content": "The V3.X features are :\nEmbedded maintenance page (terminal / local FS update / ESP3D Firmware update) WebUI support ESP8285 / ESP8266 / ESP32 / ESP32-S2 / ESP32-S3 / ESP32-C3 support Wifi / ethernet support Raw TCP / serial bridge support (light telnet) Boot delay configuration Websocket / serial bridge support Serial / Serial bridge support Bluetooth Serial bridge support (when BT supported) MKS Serial protocol support Serial commands configurations Authentication support (admin / user) FTP support (limited to 1 connection at once) WebDav support Local FS support: Little FS Fat (ESP32 only) SD support File format Native SPI Native SDIO (ESP32 only) SDFat 1.x SDFat 2.x Connection Direct connection e.g.: ESP32cam Sharing connection using hardware switch e.g.: Panucatt Wifi Backpack / Azteeg X5 WiFi MKS fast upload by serial NOT SUPPORTED ANYMORE M28/M29 File transfer protocol Serial file transfer using custom protocol (planned) USB support planned Global FS under FTP / Webdav : SD + Local FS in same directory Buzzer support Recovery pin support Pins control by commands ESP32 Camera support (only with PSRAM) Basic oled screen support I2C SSD1306 128x64 I2C SSDSH1106 132x64 Basic tft screen support SPI ST7789 135x240 SPI ST7789 240x240 Time synchronization support (manual / internet server) Lua interpreter support (Work in progress) Notifications support WebUI TFT/OLED Email Line Telegram PushOver IFTTT Sensors support DHT 11/22 Analog BMX280 Auto script support at start Basic Host GCODE stream for macros hosted on local FS (Work in Progress) Update ESP3D configuration using ini file on SD ESP3D update using binary file on SD OTA support Update by WebUI ",
    "description": "The V3.X features are :\nEmbedded maintenance page (terminal / local FS update / ESP3D Firmware update) WebUI support ESP8285 / ESP8266 / ESP32 / ESP32-S2 / ESP32-S3 / ESP32-C3 support Wifi / ethernet support Raw TCP / serial bridge support (light telnet) Boot delay configuration Websocket / serial bridge support Serial / Serial bridge support Bluetooth Serial bridge support (when BT supported) MKS Serial protocol support Serial commands configurations Authentication support (admin / user) FTP support (limited to 1 connection at once) WebDav support Local FS support: Little FS Fat (ESP32 only) SD support File format Native SPI Native SDIO (ESP32 only) SDFat 1.",
    "tags": [],
    "title": "Features",
    "uri": "/esp3dlib/v3.x/features/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X",
    "content": "\rESP8285 boards\rblkboxme\rItead8285\rESP8266 boards\rESP01 512K\rESP01 1M Generic\rESP01S 1M\rESP07\rESP12 e/f\rBigtreetech Cloud\rFYSETC-SD-WIFI\rBigtreetech WiFi module\rDiymore\rWemos D1 mini\rWemos D1 mini Pro\rMKS WiFi Module V1.0 (8 pins)\rMKS WiFi Module V1.1 (16 pins)\rNodemcu V0.8\rNodemcu V1.0\rSOnOff\rESP32 boards\rDev Kit V1\rDev Kit C V4\rHeltec Dev board",
    "description": "\rESP8285 boards\rblkboxme\rItead8285\rESP8266 boards\rESP01 512K\rESP01 1M Generic\rESP01S 1M\rESP07\rESP12 e/f\rBigtreetech Cloud\rFYSETC-SD-WIFI\rBigtreetech WiFi module\rDiymore\rWemos D1 mini\rWemos D1 mini Pro\rMKS WiFi Module V1.0 (8 pins)\rMKS WiFi Module V1.1 (16 pins)\rNodemcu V0.8\rNodemcu V1.0\rSOnOff\rESP32 boards\rDev Kit V1\rDev Kit C V4\rHeltec Dev board",
    "tags": [],
    "title": "Hardware",
    "uri": "/esp3d/v2.x/hardware/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X",
    "content": "\rESP boards\rSystem boards",
    "description": "\rESP boards\rSystem boards",
    "tags": [],
    "title": "Hardware",
    "uri": "/esp3d/v3.x/hardware/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8285 boards",
    "content": "From Itead, also named PSF-A85\nSpecs ESP8285 with 1MB flash memory, ipex antenna connector Note\rBecause flash is only 1MB, OTA/Web Update are not possible",
    "description": "Itead8285 module",
    "tags": [],
    "title": "Itead8285",
    "uri": "/esp3d/v2.x/hardware/esp8285/itead8285/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8285 boards",
    "content": "From Itead, also named PSF-A85\nSpecs ESP8285 with 1MB flash memory, ipex antenna connector Note\rBecause flash is only 1MB, OTA/Web Update are not possible",
    "description": "Itead8285 module",
    "tags": [],
    "title": "Itead8285",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8285/itead8285/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-S2 boards",
    "content": "Github\nSpecs ESP32-S2 (single-core) with 4MB flash memory, ceramic antenna/ipex connector ",
    "description": "LILYGO T8 ESP32-S2 V1.1",
    "tags": [],
    "title": "LILYGO T8 ESP32-S2 V1.1",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-s2/lilygo-s2/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e TFT",
    "content": "\rTFT 32L V4.0Socket available\nTFT 35 V1.0Socket available\nTFT 70 V1.1Socket available",
    "description": "TFT 32L V4.0Socket available\nTFT 35 V1.0Socket available\nTFT 70 V1.1Socket available",
    "tags": [],
    "title": "Makerbase TFT",
    "uri": "/esp3d/v3.x/hardware/system_boards/tft/makerbase/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e API",
    "content": "Introduction The Goal of this document is to provide a high level overview of the project architecture. This document is a work in progress and will be updated as the project evolves.\nFiles and Directories The project is organized into the following directories:\ncmake: Contains the cmake files for the project and for each target components: Contains the main components of the project customization: Contains the customization files for the project to avoid to change in sources docs: Contains project documentation embedded: Contains the code for embedded maintenance web page of the firmware hardware: Contains the hardware specific files like drivers, partitions description, specific sdkconfig, hardware configuration files resources: Contains the graphical resources like logo for bootsplash, icons, etc main: Contains the main code of the project scripts: Contains the scripts used for the project like the fonts builder, the language pack builder, etc tools: Contains the tools used for the project to test features translations: Contains the language files for the firmware CMakelists.txt: The main CMake file for the project LICENSE: The license file for the project README.md: The main readme file for the project .gitignore: The git ignore file for the project .gitmodules: The git submodules file for the project .github: The github actions directory for the project cmake directory The cmake directory contains the cmake files for the project and for each target. The cmake files are organized into the following files and subdirectories:\ndev_tools.cmake: Contains the cmake file for the development tools (log level, benchmark, log color, etc), this file can be edited but only for debug purpose features.cmake: Contains the cmake file for the features of the project (wifi, webserver, etc) sanity_check.cmake: Contains the cmake file for the sanity check of the project targets.cmake: Complete the cmake file of the project according target board targets directory : contains the cmake file for each target board, the file is named as the target board name Each target file contains the following sections:\n# Ensure the board is enabled in CMakeLists.txt\rif(\u003cBOARD_NAME\u003e) #\u003cBOARD_NAME\u003e is enabled or not in CMakeLists.txt\r# Add board name (Mandatory)\rset(TFT_TARGET \"\u003cBOARD_NAME\u003e\")\r# Add the sdkconfig file path (Mandatory), it can be specific or based on one of the common sdkconfig set(SDKCONFIG ${CMAKE_SOURCE_DIR}/hardware/\u003cBOARD_NAME\u003e/sdkconfig)\r# Add Specific Components if any for the board (Mandatory)\rlist(APPEND EXTRA_COMPONENT_DIRS ${CMAKE_SOURCE_DIR}/hardware/\u003cBOARD_NAME\u003e/components)\r# Add specific usb driver for otg (Only if needed)\rlist(APPEND EXTRA_COMPONENT_DIRS ${CMAKE_SOURCE_DIR}/hardware/drivers_usb_otg)\r# Add specific video driver for i80 (Only if needed)\rlist(APPEND EXTRA_COMPONENT_DIRS ${CMAKE_SOURCE_DIR}/hardware/drivers_video_i80)\r# Add specific video driver for rgb (Only if needed)\rlist(APPEND EXTRA_COMPONENT_DIRS ${CMAKE_SOURCE_DIR}/hardware/rgb)\r# Add specific bsp path for board definition (Mandatory)\radd_compile_options(\"-I${CMAKE_SOURCE_DIR}/hardware/\u003cBOARD_NAME\u003e/components/bsp\")\r# Enable USB-OTG as serial alternative for communications (Only if needed)\radd_compile_options(-DESP3D_USB_SERIAL_FEATURE=1)\rendif()components directory The components directory contains the main components of the project. The components are organized into the following subdirectories:\nesp_litlefs: Contains the code for the LittleFS file system esp3d_log: Contains the code for the logging system lvgl: Contains the code for the LittlevGL graphics library mdns: Contains the code for the mDNS service SSDP_IDF: Contains the code for the SSDP service Note SSDP_IDF and esp_littlefs are actually defined as git submodules.\ncustomizations directory The customizations directory contains the customization files for the project. The customization files are organized into the following subdirectories:\nnotifications: Contains the customization strings for the notifications ssdp: Contains the customization strings for the SSDP service docs directory embedded directory The embedded directory contains the code for the embedded maintenance web page of the firmware. The code is organized into the following subdirectories:\nassets: Contains the assets for the embedded maintenance web page\nfavicon.ico: The favicon for the embedded maintenance web page header.txt: The header for the embedded maintenance web page footer.txt: The footer for the embedded maintenance web page config: Contains the configuration files for the test server and production page\nbuildassets.js: This script will convert the binaries assets into a C header file server.js: The test server for the embedded maintenance web page webpack.dev.js: The webpack configuration for the test server and test page webpack.prod.js: The webpack configuration for the production page dist: Contains the binary distribution file for the embedded maintenance web page\nserver: Is the directory that simulate the local flash system for the upload\nsrc: Contains the source code for the embedded maintenance web page\nindex.html: The main html file for the embedded maintenance web page index.js: The main javascript file for the embedded maintenance web page menu.js: The menu javascript file for the embedded maintenance web page style.css: The main css file for the embedded maintenance web page package.json: The package file for the embedded maintenance web page\nNotes.txt: The notes file for the embedded maintenance web page\n.gitignore: The git ignore file for the embedded maintenance web page\nhardware directory The hardware directory contains the hardware specific files like drivers, partitions description, specific sdkconfig, hardware configuration files. The hardware specific files are organized into one common subdirectory and one subdirectory for each supported hardware platform.\ncommon: Contains the common hardware specific files like partitions description, specific sdkconfig drivers_common: Contains the common drivers for all the boards drivers_video_i80: Contains the drivers for the i80 video drivers which cannot be in common drivers because of the specific sdkconfig drivers_video_rgb: Contains the drivers for the rgb video drivers which cannot be in common drivers because of the specific sdkconfig drivers_usb_otg: Contains the drivers for the usb otg which cannot be in common drivers because of the specific sdkconfig and hardware \u003cBOARD_NAME\u003e: Contains the hardware drivers, definitions, partitions and sdkconfig specific files for the \u003cBOARD_NAME\u003e board … Drivers Type Depend ESP32_2432S028R ESP32_3248S035C ESP32_3248S035R ESP32_ROTRICS_DEXARM35 ESP32_CUSTOM disp_backlight Display component esp3d_log driver X X X O O disp_spi esp3d_log driver O O O X O ili9341 SPI Display esp3d_log esp_lcd driver X O O O O ili9488 esp3d_log lvgl disp_spi O O O X O st7796 SPI Display esp3d_log esp_lcd driver O X X O O xpt2046 SPI Touch esp3d_log driver X O X X O gt911 esp3d_log i2c_bus O X O O O ft5x06 esp3d_log lvgl i2c_bus O O O O O i2c_bus esp3d_log driver O X O O O spi_bus SPI Bus esp3d_log driver X X X X O sw_spi Software SPI esp3d_log driver X O O O O Drivers Type Depend ESP32S3_4827S043C ESP32S3_8048S043C ESP32S3_8048S050C ESP32S3_8048S070C ESP32S3_BZM_TFT35_GT911 ESP32S3_HMI43V3 ESP32S3_ZX3D50CE02S_USRC_4832 ESP32S3_CUSTOM disp_backlight Display component esp3d_log driver X X X X X O O O st7796 i80 Display esp3d_log esp_lcd driver O O O O X O X O ili9485 RGB Display esp3d_log esp_lcd driver X O O O O O O O st7262 RGB Display esp3d_log esp_lcd driver O X X O O O O O ek9716 RGB Display esp3d_log lvgl esp_lcd driver O O O X O O O O rm68120 i80 Display esp3d_log lvgl esp_lcd driver O O O O O X O O ft5x06 i2c Touch esp3d_log lvgl i2c_bus O O O O O X X O gt911 i2c Touch esp3d_log i2c_bus X X X X X O O O tca9554 IO expander esp3d_log i2c_bus O O O O O X O O i2c_bus i2c Bus esp3d_log driver X X X X X X X O usb_serial OTG Host esp3d_log O O O O X X X X Bus drivers spi_bus driver The spi_bus driver is a SPI bus driver that is used to control the SPI bus. The spi_bus driver configuration is part of display driver configuration. in disp_def.h: // SPI (dedicated or shared) .spi_bus_config = { .spi_host_index = SPI2_HOST, .pin_miso = 12, /**\u003c MISO pin number */ .pin_mosi = 13, /**\u003c MOSI pin number */ .pin_clk = 14, /**\u003c CLK pin number */ .is_master = true, /**\u003c SPI master mode */ .max_transfer_sz = DISP_BUF_SIZE * 2, /**\u003c Maximum transfer size */ .dma_channel = 1, /**\u003c DMA channel */ .quadwp_io_num = -1, /**\u003c QuadWP pin number */ .quadhd_io_num = -1 /**\u003c QuadHD pin number */ }, sw_spi driver The sw_spi driver is a software SPI driver that is used to control the SPI bus. The sw_spi driver configuration is part of the driver configuration file which use it. eg: touch driver use it, so it can be part of the touch driver configuration.\ntouch_def.h:\n// SPI (BitBang) const sw_spi_config_t touch_spi_cfg = { .cs_pin = 33, // GPIO 33 .clk_pin = 25, // GPIO 25 .mosi_pin = 32, // GPIO 33 .miso_pin = 39, // GPIO 39 }; i2c_bus driver The i2c_bus driver is a I2C bus driver that is used to control the I2C bus. The i2c_bus driver configuration file is i2c_def.h. bsp.c:\n//define the I2C bus #define I2C_PORT_NUMBER 0 // I2C pins definition const i2c_config_t i2c_cfg = { .mode = I2C_MODE_MASTER, .scl_io_num = 20, // GPIO 20 .sda_io_num = 19, // GPIO 19 .scl_pullup_en = GPIO_PULLUP_ENABLE, .sda_pullup_en = GPIO_PULLUP_ENABLE, .master.clk_speed = 400*1000 }; tca9554 driver The tca9554 driver is a I2C GPIO expander driver that is used to control the TCA9554 GPIO expander. The tca9554 driver configuration file is tca9554_def.h. tca9554_def.h:\nconst tca9554_config_t tca9554_cfg = {.i2c_clk_speed = 400 * 1000, .i2c_addr = (uint8_t[]){0x3C, 0x24, 0}}; usb_serial driver The usb_serial driver is a USB serial driver that is used to control the OTG USB serial. The usb_serial driver configuration usb_serial_def.h. usb_serial_def.h:\n#define ESP3D_USB_SERIAL_BAUDRATE \"115200\" #define ESP3D_USB_SERIAL_DATA_BITS (8) #define ESP3D_USB_SERIAL_PARITY \\ (0) // 0: 1 stopbit, 1: 1.5 stopbits, 2: 2 stopbits #define ESP3D_USB_SERIAL_STOP_BITS \\ (0) // 0: None, 1: Odd, 2: Even, 3: Mark, 4: Space SPI Display drivers ili9341 driver The ili9341 driver is a SPI display driver that is used to control the ILI9341 display. The ili9341 driver configuration is part of display driver configuration. in disp_def.h:\n#define DISP_HOR_RES_MAX 320 #define DISP_VER_RES_MAX 240 #define DISP_USE_DOUBLE_BUFFER (true) #if WITH_PSRAM // 1/10 (24-line) buffer (15KB) in external PSRAM #define DISP_BUF_SIZE (DISP_HOR_RES_MAX * DISP_VER_RES_MAX / 10) #define DISP_BUF_MALLOC_TYPE MALLOC_CAP_SPIRAM #else // 1/20 (12-line) buffer (7.5KB) in internal DRAM #define DISP_BUF_SIZE (DISP_HOR_RES_MAX * 12) #define DISP_BUF_MALLOC_TYPE MALLOC_CAP_DMA #endif // WITH_PSRAM #define DISP_BUF_SIZE_BYTES (DISP_BUF_SIZE * 2) // Display configuration esp_spi_ili9341_config_t display_spi_ili9341_cfg = { .panel_dev_config = {.reset_gpio_num = 4, // GPIO 4 .rgb_ele_order = LCD_RGB_ELEMENT_ORDER_BGR, .data_endian = LCD_RGB_DATA_ENDIAN_BIG, .bits_per_pixel = 16, .flags = {.reset_active_high = 0}, .vendor_config = NULL}, .spi_bus_config = { .spi_host_index = SPI2_HOST, .pin_miso = 12, /**\u003c MISO pin number */ .pin_mosi = 13, /**\u003c MOSI pin number */ .pin_clk = 14, /**\u003c CLK pin number */ .is_master = true, /**\u003c SPI master mode */ .max_transfer_sz = DISP_BUF_SIZE * 2, /**\u003c Maximum transfer size */ .dma_channel = 1, /**\u003c DMA channel */ .quadwp_io_num = -1, /**\u003c QuadWP pin number */ .quadhd_io_num = -1 /**\u003c QuadHD pin number */ }, .disp_spi_cfg = {.dc_gpio_num = 2, /*!\u003c GPIO used to select the D/C line, set this to -1 if the D/C line is not used */ .cs_gpio_num = 15, /*!\u003c GPIO used for CS line */ .spi_mode = 0, /*!\u003c Traditional SPI mode (0~3) */ .pclk_hz = 40 * 1000 * 1000, /*!\u003c Frequency of pixel clock */ .trans_queue_depth = 10, /*!\u003c Size of internal transaction queue */ .on_color_trans_done = NULL, /*!\u003c Callback invoked when color data transfer has finished */ .user_ctx = NULL, /*!\u003c User private data, passed directly to on_color_trans_done's user_ctx */ .lcd_cmd_bits = 8, /*!\u003c Bit-width of LCD command */ .lcd_param_bits = 8, /*!\u003c Bit-width of LCD parameter */ .flags = { /*!\u003c Extra flags to fine-tune the SPI device */ .dc_low_on_data = 0, /*!\u003c If this flag is enabled, DC line = 0 means transfer data, DC line = 1 means transfer command; vice versa */ .octal_mode = 0, /*!\u003c transmit with octal mode (8 data lines), this mode is used to simulate Intel 8080 timing */ .quad_mode = 0, /*!\u003c transmit with quad mode (4 data lines), this mode is useful when transmitting LCD parameters (Only use one line for command) */ .sio_mode = 0, /*!\u003c Read and write through a single data line (MOSI) */ .lsb_first = 0, /*!\u003c transmit LSB bit first */ .cs_high_active = 0, /*!\u003c CS line is high active */ } }, .orientation = orientation_landscape, .hor_res = DISP_HOR_RES_MAX, .ver_res = DISP_VER_RES_MAX, }; st7796 spi driver The st7796 driver is a display driver that is used to control the ST7796 display. The st7796 driver configuration is part of display driver configuration. disp_def.h:\n#define DISP_HOR_RES_MAX 480 #define DISP_VER_RES_MAX 320 // Display interface #define DISP_USE_DOUBLE_BUFFER (true) #if WITH_PSRAM // 1/10 (32-line) buffer (30KB) in external PSRAM #define DISP_BUF_SIZE (DISP_HOR_RES_MAX * DISP_VER_RES_MAX / 10) #define DISP_BUF_MALLOC_TYPE MALLOC_CAP_SPIRAM #else // 1/40 (8-line) buffer (7.5KB) in internal DRAM #define DISP_BUF_SIZE (DISP_HOR_RES_MAX * 8) #define DISP_BUF_MALLOC_TYPE MALLOC_CAP_DMA #endif // WITH_PSRAM #define DISP_BUF_SIZE_BYTES (DISP_BUF_SIZE * 2) // LCD panel configuration esp_spi_st7262_config_t display_spi_st7262_cfg = { .panel_dev_config = {.reset_gpio_num = -1, .rgb_ele_order = LCD_RGB_ELEMENT_ORDER_BGR, .data_endian = LCD_RGB_DATA_ENDIAN_BIG, .bits_per_pixel = 16, .flags = {.reset_active_high = 0}, .vendor_config = NULL}, .spi_bus_config = // SPI (shared with Touch) { .spi_host_index = SPI2_HOST, .pin_miso = 12, /**\u003c MISO pin number */ .pin_mosi = 13, /**\u003c MOSI pin number */ .pin_clk = 14, /**\u003c CLK pin number */ .is_master = true, /**\u003c SPI master mode */ .max_transfer_sz = DISP_BUF_SIZE * 2, /**\u003c Maximum transfer size */ .dma_channel = 1, /**\u003c DMA channel */ .quadwp_io_num = -1, /**\u003c QuadWP pin number */ .quadhd_io_num = -1 /**\u003c QuadHD pin number */ }, .disp_spi_cfg = {.cs_gpio_num = 15, /*!\u003c GPIO used for CS line */ .dc_gpio_num = 2, /*!\u003c GPIO used to select the D/C line, set this to -1 if the D/C line is not used */ .spi_mode = 0, /*!\u003c Traditional SPI mode (0~3) */ .pclk_hz = 40 * 1000 * 1000, /*!\u003c Frequency of pixel clock */ .trans_queue_depth = 10, /*!\u003c Size of internal transaction queue */ .on_color_trans_done = NULL, /*!\u003c Callback invoked when color data transfer has finished */ .user_ctx = NULL, /*!\u003c User private data, passed directly to on_color_trans_done's user_ctx */ .lcd_cmd_bits = 8, /*!\u003c Bit-width of LCD command */ .lcd_param_bits = 8, /*!\u003c Bit-width of LCD parameter */ .flags = { /*!\u003c Extra flags to fine-tune the SPI device */ .dc_low_on_data = 0, /*!\u003c If this flag is enabled, DC line = 0 means transfer data, DC line = 1 means transfer command; vice versa */ .octal_mode = 0, /*!\u003c transmit with octal mode (8 data lines), this mode is used to simulate Intel 8080 timing */ .quad_mode = 0, /*!\u003c transmit with quad mode (4 data lines), this mode is useful when transmitting LCD parameters (Only use one line for command) */ .sio_mode = 0, /*!\u003c Read and write through a single data line (MOSI) */ .lsb_first = 0, /*!\u003c transmit LSB bit first */ .cs_high_active = 0, /*!\u003c CS line is high active */ }}, .orientation = orientation_landscape, .hor_res = DISP_HOR_RES_MAX, .ver_res = DISP_VER_RES_MAX, };RGB Display drivers st7262 driver The st7262 driver is a RGB display driver that is used to control the ST7262 display. The st7262 driver configuration is part of display driver configuration. in disp_def.h:\n#define DISP_HOR_RES_MAX 800 #define DISP_VER_RES_MAX 480 #define DISP_CLK_FREQ (14 * 1000 * 1000) #define DISP_AVOID_TEAR_EFFECT_WITH_SEM (true) #define DISP_USE_BOUNCE_BUFFER (false) #define DISP_USE_DOUBLE_BUFFER (true) #define DISP_NUM_FB (1) #define DISP_PATCH_FS_FREQ (6 * 1000 * 1000) // 6MHz #define DISP_PATCH_FS_DELAY (40) #if DISP_NUM_FB == 2 // Full frame buffer (255KB) in external PSRAM #define DISP_BUF_SIZE (DISP_HOR_RES_MAX * DISP_VER_RES_MAX) #else // 1/4 (68-line) buffer (63.75KB) in external PSRAM #define DISP_BUF_SIZE (DISP_HOR_RES_MAX * DISP_VER_RES_MAX / 4) #endif // WITH_PSRAM #define DISP_BUF_SIZE_BYTES (DISP_BUF_SIZE * 2) const esp_rgb_st7262_config_t disp_panel_cfg = { .panel_config = {.clk_src = LCD_CLK_SRC_DEFAULT, .timings = { .pclk_hz = DISP_CLK_FREQ, .h_res = DISP_HOR_RES_MAX, .v_res = DISP_VER_RES_MAX, .hsync_pulse_width = 4, .hsync_back_porch = 8, .hsync_front_porch = 8, .vsync_pulse_width = 4, .vsync_back_porch = 8, .vsync_front_porch = 8, .flags = { .hsync_idle_low = 0, .vsync_idle_low = 0, .de_idle_high = 0, .pclk_active_neg = true, .pclk_idle_high = 0, }, }, .data_width = 16, // RGB565 in parallel mode .bits_per_pixel = 0, .num_fbs = DISP_NUM_FB, #if DISP_USE_BOUNCE_BUFFER .bounce_buffer_size_px = DISP_BUF_SIZE, #else .bounce_buffer_size_px = 0, #endif .sram_trans_align = 0, .psram_trans_align = 64, .hsync_gpio_num = 39, // GPIO 39 .vsync_gpio_num = 41, // GPIO 41 .de_gpio_num = 40, // GPIO 40 .pclk_gpio_num = 42, // GPIO 42 .disp_gpio_num = -1, // EN pin not connected .data_gpio_nums = { 8, // D0 (B0) - GPIO 8 3, // D1 (B1) - GPIO 3 46, // D2 (B2) - GPIO 46 9, // D3 (B3) - GPIO 9 1, // D4 (B4) - GPIO 1 5, // D5 (G0) - GPIO 5 6, // D6 (G1) - GPIO 6 7, // D7 (G2) - GPIO 7 15, // D8 (G3) - GPIO 15 16, // D9 (G4) - GPIO 16 4, // D10 (G5) - GPIO 4 45, // D11 (R0) - GPIO 45 48, // D12 (R1) - GPIO 48 47, // D13 (R2) - GPIO 47 21, // D14 (R3) - GPIO 21 14, // D15 (R4) - GPIO 14 }, .flags = { .disp_active_low = (uint32_t)NULL, .refresh_on_demand = (uint32_t)NULL, .fb_in_psram = true, // Do not change this, as it is mandatory for RGB // parallel interface and octal PSRAM .double_fb = (uint32_t)NULL, .no_fb = (uint32_t)NULL, .bb_invalidate_cache = (uint32_t)NULL, }}, .orientation = orientation_landscape, .hor_res = DISP_HOR_RES_MAX, .ver_res = DISP_VER_RES_MAX, }; ek9716 driver The ek9716 driver is a RGB display driver that is used to control the EK9716 display. The ek9716 driver configuration is part of display driver configuration. in disp_def.h:\n#define DISP_HOR_RES_MAX 800 #define DISP_VER_RES_MAX 480 #define DISP_AVOID_TEAR_EFFECT_WITH_SEM (true) #define DISP_USE_BOUNCE_BUFFER (false) #define DISP_USE_DOUBLE_BUFFER (true) #define DISP_NUM_FB (1) #define DISP_CLK_FREQ (16 * 1000 * 1000) #define DISP_PATCH_FS_FREQ (6 * 1000 * 1000) // 6MHz #define DISP_PATCH_FS_DELAY (40) #if DISP_NUM_FB == 2 // Full frame buffer (255KB) in external PSRAM #define DISP_BUF_SIZE (DISP_HOR_RES_MAX * DISP_VER_RES_MAX) #else // 1/4 (68-line) buffer (63.75KB) in external PSRAM #define DISP_BUF_SIZE (DISP_HOR_RES_MAX * DISP_VER_RES_MAX / 4) #endif // WITH_PSRAM #define DISP_BUF_SIZE_BYTES (DISP_BUF_SIZE * 2) //Panel configuration const esp_rgb_ek9716_config_t disp_panel_cfg = { .panel_config = { .clk_src = LCD_CLK_SRC_DEFAULT, .timings = { .pclk_hz = DISP_CLK_FREQ , .h_res = DISP_HOR_RES_MAX, .v_res = DISP_VER_RES_MAX, .hsync_pulse_width = 30, .hsync_back_porch = 16, .hsync_front_porch = 210, .vsync_pulse_width = 13, .vsync_back_porch = 10, .vsync_front_porch = 22, .flags = { .hsync_idle_low = 0, .vsync_idle_low = 0, .de_idle_high = 0, .pclk_active_neg = true, .pclk_idle_high = 0, }, }, .data_width = 16, // RGB565 in parallel mode .bits_per_pixel = 0, .num_fbs = DISP_NUM_FB, #if DISP_USE_BOUNCE_BUFFER .bounce_buffer_size_px = DISP_BUF_SIZE, #else .bounce_buffer_size_px = 0, #endif .sram_trans_align = 0, .psram_trans_align = 64, .hsync_gpio_num = 39, // GPIO 39 .vsync_gpio_num = 40, // GPIO 40 .de_gpio_num = 41, // GPIO 41 .pclk_gpio_num = 42, // GPIO 42 .disp_gpio_num = -1, // EN pin not connected .data_gpio_nums = { 15, // D0 (B0) - GPIO 15 7, // D1 (B1) - GPIO 7 6, // D2 (B2) - GPIO 6 5, // D3 (B3) - GPIO 5 4, // D4 (B4) - GPIO 4 9, // D5 (G0) - GPIO 9 46, // D6 (G1) - GPIO 46 3, // D7 (G2) - GPIO 3 8, // D8 (G3) - GPIO 8 16, // D9 (G4) - GPIO 16 1, // D10 (G5) - GPIO 1 14, // D11 (R0) - GPIO 14 21, // D12 (R1) - GPIO 21 47, // D13 (R2) - GPIO 47 48, // D14 (R3) - GPIO 48 45, // D15 (R4) - GPIO 45 }, .flags = { .disp_active_low = (uint32_t)NULL, .refresh_on_demand = (uint32_t)NULL, .fb_in_psram = true, // Do not change this, as it is mandatory for RGB parallel interface and octal PSRAM .double_fb = (uint32_t)NULL, .no_fb = (uint32_t)NULL, .bb_invalidate_cache = (uint32_t)NULL, } }, .orientation = orientation_landscape, .hor_res = DISP_HOR_RES_MAX, .ver_res = DISP_VER_RES_MAX, };i80 Display drivers rm68120 driver The rm68120 driver is a display driver that is used to control the RM68120 display. The rm68120 driver configuration is part of display driver configuration. disp_def.h:\n#define DISP_HOR_RES_MAX (800) #define DISP_VER_RES_MAX (480) #define DISP_BUF_SIZE (DISP_HOR_RES_MAX * (DISP_VER_RES_MAX / 10)) #define DISP_USE_DOUBLE_BUFFER (true) const esp_i80_rm68120_config_t rm68120_cfg = { .bus_config = { .clk_src = LCD_CLK_SRC_DEFAULT, .dc_gpio_num = 38, // DISP_RS_PIN=GPIO38 .wr_gpio_num = 17, // DISP_WR_PIN=GPIO17 .data_gpio_nums = { 1, // DISP_D00_PIN = GPIO1 9, // DISP_D01_PIN = GPIO9 2, // DISP_D02_PIN = GPIO2 10, // DISP_D03_PIN = GPIO10 3, // DISP_D04_PIN = GPIO3 11, // DISP_D05_PIN = GPIO11 4, // DISP_D06_PIN = GPIO4 12, // DISP_D07_PIN = GPIO12 5, // DISP_D08_PIN = GPIO5 13, // DISP_D09_PIN = GPIO13 6, // DISP_D10_PIN = GPIO6 14, // DISP_D11_PIN = GPIO14 7, // DISP_D12_PIN = GPIO7 15, // DISP_D13_PIN = GPIO15 8, // DISP_D14_PIN = GPIO8 16, // DISP_D15_PIN = GPIO16 }, .bus_width = 16, // DISP_BITS_WIDTH .max_transfer_bytes = DISP_BUF_SIZE * sizeof(uint16_t), .psram_trans_align = 64, .sram_trans_align = 4, }, .io_config = { .cs_gpio_num = -1, .pclk_hz = (8 * 1000 * 1000), // could be 10 if no PSRAM memory= DISP_CLK_FREQ, .trans_queue_depth = 10, .dc_levels = { .dc_idle_level = 0, .dc_cmd_level = 0, .dc_dummy_level = 0, .dc_data_level = 1, }, .on_color_trans_done = NULL, // Callback invoked when color data // transfer has finished updated in bdsp.c .user_ctx = NULL, // User private data, passed directly to // on_color_trans_done’s user_ctx updated in bdsp.c .lcd_cmd_bits = 16, // DISP_CMD_BITS_WIDTH .lcd_param_bits = 16, // DISP_PARAM_BITS_WIDTH }, .panel_config = { .reset_gpio_num = 21, // DISP_RST_PIN = GPIO21 .rgb_ele_order = LCD_RGB_ELEMENT_ORDER_RGB, .data_endian = 0, /*!\u003c Set the data endian for color data larger than 1 byte */ .bits_per_pixel = 16, /*!\u003c Color depth, in bpp */ .flags = { .reset_active_high = 0, /*!\u003c Setting this if the panel reset is high level active */ }, .vendor_config = NULL, /*!\u003c Vendor specific configuration */ }, .orientation = orientation_landscape, .hor_res = DISP_HOR_RES_MAX, .ver_res = DISP_VER_RES_MAX, }; st7796 i80 driver The st7796 driver is a display driver that is used to control the ST7796 display. The st7796 driver configuration is part of display driver configuration. disp_def.h:\n#define DISP_HOR_RES_MAX (480) #define DISP_VER_RES_MAX (320) #define DISP_BUF_SIZE (DISP_HOR_RES_MAX * (DISP_VER_RES_MAX / 10)) const esp_i80_st7796_config_t st7796_cfg = { .bus_config = { .clk_src = LCD_CLK_SRC_DEFAULT, .dc_gpio_num = 0, // DISP_RS_PIN=0 .wr_gpio_num = 47, // DISP_WR_PIN=GPIO47 .data_gpio_nums = { 9, // DISP_D00_PIN = GPIO9 46, // DISP_D01_PIN = GPIO46 3, // DISP_D02_PIN = GPIO3 8, // DISP_D03_PIN = GPIO8 18, // DISP_D04_PIN = GPIO18 17, // DISP_D05_PIN = GPIO17 16, // DISP_D06_PIN = GPIO16 15, // DISP_D07_PIN = GPIO15 -1, // DISP_D08_PIN = N/C -1, // DISP_D09_PIN = N/C -1, // DISP_D10_PIN = N/C -1, // DISP_D11_PIN = N/C -1, // DISP_D12_PIN = N/C -1, // DISP_D13_PIN = N/C -1, // DISP_D14_PIN = N/C -1, // DISP_D15_PIN = N/C }, .bus_width = 8, // DISP_BITS_WIDTH .max_transfer_bytes = DISP_BUF_SIZE * sizeof(uint16_t), .psram_trans_align = 64, .sram_trans_align = 4, }, .io_config = { .cs_gpio_num = 48, //DISP_CS_PIN .pclk_hz = (8 * 1000 * 1000), // could be 10 if no PSRAM memory= DISP_CLK_FREQ, .trans_queue_depth = 10, .dc_levels = { .dc_idle_level = 0, .dc_cmd_level = 0, .dc_dummy_level = 0, .dc_data_level = 1, }, .on_color_trans_done = NULL, // Callback invoked when color data // transfer has finished updated in bdsp.c .user_ctx = NULL, // User private data, passed directly to // on_color_trans_done’s user_ctx updated in bdsp.c .lcd_cmd_bits = 8, // DISP_CMD_BITS_WIDTH .lcd_param_bits = 8, // DISP_PARAM_BITS_WIDTH }, .panel_config = { .reset_gpio_num = 4, // DISP_RST_PIN = GPIO4 - Same as touch .rgb_ele_order = LCD_RGB_ELEMENT_ORDER_BGR, .data_endian = 0, /*!\u003c Set the data endian for color data larger than 1 byte */ .bits_per_pixel = 16, /*!\u003c Color depth, in bpp */ .flags = { .reset_active_high = 0, /*!\u003c Setting this if the panel reset is high level active */ }, .vendor_config = NULL, /*!\u003c Vendor specific configuration */ }, .orientation = orientation_landscape, .hor_res = DISP_HOR_RES_MAX, .ver_res = DISP_VER_RES_MAX, }; ### Backlight drivers The `disp_backlight` driver is a display component that is used by the display drivers to control the backlight of the display. The `disp_backlight` driver configuration is part of display driver configuration. in disp_def.h: ```cpp // Default backlight level value in percentage #define DISP_BCKL_DEFAULT_DUTY 100 //% // Backlight configuration const disp_backlight_config_t disp_bcklt_cfg = { .pwm_control = false, // true: LEDC is used, false: GPIO is used .output_invert = false, // true: LEDC output is inverted, false: LEDC output is not inverted .gpio_num = 21, // GPIO number for backlight control // Relevant only for PWM controlled backlight // Ignored for switch (ON/OFF) backlight control .timer_idx = 0, // LEDC timer index .channel_idx = 0 // LEDC channel index };SPI Touch drivers xpt2046 driver The xpt2046 driver is a touch driver that is used to control the XPT2046 touch controller. The xpt2046 driver configuration is part of the touch driver configuration. touch_def.h:\nxpt2046_config_t xpt2046_cfg = { .irq_pin = 36, // GPIO 36 .touch_threshold = 300, // Threshold for touch detection .swap_xy = true, .invert_x = false, .invert_y = false, .x_max = 480, .y_max = 320, .calibration_x_min = 140, .calibration_y_min = 290, .calibration_x_max = 3950, .calibration_y_max = 3890, };I2C Touch drivers gt911 driver The gt911 driver is a touch driver that is used to control the GT911 touch controller. The gt911 driver configuration is part of the touch driver configuration file : touch_def.h. touch_def.h:\n// GT911 touch controller configuration const gt911_config_t gt911_cfg = { .i2c_clk_speed = 400*1000, .i2c_addr = (uint8_t[]){0x5D, 0X14,0}, // Floating or mis-configured INT pin may cause GT911 to come up at address 0x14 instead of 0x5D, so check there as well. .rst_pin = 38, // GPIO 38 #if WITH_GT911_INT .int_pin = 18, // GPIO 18 #else .int_pin = -1, // INT pin not connected (by default) #endif .swap_xy = false, .invert_x = false, .invert_y = false, .x_max = 0,//auto detect .y_max = 0,//auto detect }; ft5x06 driver The ft5x06 driver is a touch driver that is used to control the FT5x06 touch controller. The ft5x06 driver configuration is part of the touch driver configuration file : touch_def.h. touch_def.h:\nconst ft5x06_config_t ft5x06_cfg = { .i2c_clk_speed = 400*1000, .i2c_addr = (uint8_t[]){ 0x38, 0}, .rst_pin = -1, // GPIO 38 #if WITH_FT5X06_INT .int_pin = 18, // GPIO 18 #else .int_pin = -1, // INT pin not connected (by default) #endif .swap_xy = true, .invert_x = false, .invert_y = false, .x_max = 480, .y_max = 800, }; Camera The esp3d_camera driver is a camera driver that is used to control the camera. The esp3d_camera driver configuration is part of the camera driver configuration file : camera_def.h.\ncamera_def.h:\n// Camera configuration const esp32_camera_config_t camera_config = { .hw_config = { .pin_pwdn = -1, /*!\u003c GPIO pin for camera power down line */ .pin_reset = -1, /*!\u003c GPIO pin for camera reset line */ .pin_xclk = 8, /*!\u003c GPIO pin for camera XCLK line */ .pin_sccb_sda = 47, /*!\u003c GPIO pin for camera SDA line */ .pin_sccb_scl = 21, /*!\u003c GPIO pin for camera SCL line */ .pin_d7 = 3, /*!\u003c GPIO pin for camera D7 line */ .pin_d6 = 18, /*!\u003c GPIO pin for camera D6 line */ .pin_d5 = 17, /*!\u003c GPIO pin for camera D5 line */ .pin_d4 = 15, /*!\u003c GPIO pin for camera D4 line */ .pin_d3 = 6, /*!\u003c GPIO pin for camera D3 line */ .pin_d2 = 5, /*!\u003c GPIO pin for camera D2 line */ .pin_d1 = 4, /*!\u003c GPIO pin for camera D1 line */ .pin_d0 = 7, /*!\u003c GPIO pin for camera D0 line */ .pin_vsync = 9, /*!\u003c GPIO pin for camera VSYNC line */ .pin_href = 46, /*!\u003c GPIO pin for camera HREF line */ .pin_pclk = 16, /*!\u003c GPIO pin for camera PCLK line */ .xclk_freq_hz = 20 * 1000 * 1000, /*!\u003c Frequency of XCLK signal, in Hz. EXPERIMENTAL: Set to 16MHz on ESP32-S2 or ESP32-S3 to enable EDMA mode */ .ledc_timer = LEDC_TIMER_0, /*!\u003c LEDC timer to be used for generating XCLK */ .ledc_channel = LEDC_CHANNEL_0, /*!\u003c LEDC channel to be used for generating XCLK */ .pixel_format = PIXFORMAT_JPEG, /*!\u003c Format of the pixel data: PIXFORMAT_ + YUV422|GRAYSCALE|RGB565|JPEG */ .frame_size = FRAMESIZE_VGA, /*!\u003c Size of the output image: FRAMESIZE_ + QVGA|CIF|VGA|SVGA|XGA|SXGA|UXGA */ .jpeg_quality = 12, /*!\u003c Quality of JPEG output. 0-63 lower means higher quality */ .fb_count = 1, /*!\u003c Number of frame buffers to be allocated. If more than one, then each frame will be acquired (double speed) */ .fb_location = CAMERA_FB_IN_PSRAM, /*!\u003c The location where the frame buffer will be allocated */ .grab_mode = CAMERA_GRAB_WHEN_EMPTY, /*!\u003c When buffers should be filled */ #if CONFIG_CAMERA_CONVERTER_ENABLED .conv_mode = 0, /*!\u003c RGB\u003c-\u003eYUV Conversion mode */ #endif .sccb_i2c_port = 0, /*!\u003c If pin_sccb_sda is -1, use the already configured I2C bus by number */ }, .pin_pullup_1 = -1, /* if any need */ .pin_pullup_2 = -1, /* if any need */ .pin_led = -1, .flip_horizontaly = false, // if horizontal flip is needed .flip_vertically = false, // if vertical flip is needed .brightness = 0, // default value is 0 .contrast = 0, // default value is 0 } ;main directory The main directory contains the main application code. The main application code is the code that is executed when the application is started. The main application code is responsible for initializing the application and starting the application tasks. The main application code is also responsible for handling the application events and updating the application state.\nThe main application code is typically organized into the following files:\ncore directory, which contains the main application code, all common functions and ESP3D commands. the core directory contains the following files:\ncommands directory that contains the ESP3D commands. includes directory that contains the includes files of the core files esp3d_client.cpp file that contains the internal messaging API esp3d_commands.cpp file that contains the handle the ESP3D commands and also the API for the commands esp3d_hal.cpp file that contains the hardware abstraction layer API for all supported hardware esp3d_json_settings.cpp file that contains the API for reading setting from the JSON file like preferences.json esp3d_string.h file that contains the helpers to manipulate strings and char arrays esp3d_tft.cpp file that contains the core initialization of the main program esp3d_values.cpp file that contains the API for storing and dispaching the values used on TFT display directory, which contain the UI code for the TFT display. the display directory contains the following files:\nesp3d_tft.ui.cpp file that contains the UI code for the TFT display\nesp3d_tft.ui.h file that contains the header code for the TFT display\ncomponents directory that contains the UI common components for the TFT display\nscreens directory that contains the common screens to be displayed on the TFT display\n3dprinter directory that contains the UI code for the 3D printer TFT display this directory contaain one directory for each targeted firmware:\nmarlin directory that contains the UI code for the Marlin TFT display repetier directory that contains the UI code for the Repetier TFT display smoothieware directory that contains the UI code for the Smoothieware TFT display each target directory contain the ui code, the style to be used , the resources for each resolution and the screens to be displayed :\nres_320_240 directory that contains the resources for the 320x240 resolution Each resolution directory contains the following files: esp3d_style.h file that contains the specific style to be used on this resolution logo_320_240.h file that contains the logo to be displayed on the TFT display at this resolution res_480_272 directory that contains the resources for the 480x272 resolution res_480_320 directory that contains the resources for the 480x320 resolution res_800_480 directory that contains the resources for the 800x480 resolution screens directory that contains the specifics screens to be displayed on the TFT display esp3d_style.cpp/.h files that contains the common style to be used on the TFT display esp3d_tft_ui.cpp file that contains the main UI code for the TFT display cnc directory that contains the UI code for the CNC TFT display Same as above but for the CNC firmware\nembedded directory, which contains the embedded resources for the ESP32. the embedded directory contains the following files:\nfavicon.ico.gz file that contains the favicon for the web interface index.html.gz file that contains the index page for the web interface modules directory, which contains the modules code for the TFT display. each subdirectory contains the code for a specific module / feature. the modules directory contains the following files:\nauthentication directory that contains the code for the authentication feature camera directory that contains the code for the camera feature config_files directory that contains the code for the config files feature, which allow to apply settings using ini file filesystem directory that contains the code for the filesystem feature: SD and flash gcode_host directory that contains the code for the gcode streaming feature http directory that contains the code for the http server feature, the different handlers for the web interface are splited in different subdirectories / files according usage \\ authentication directory that contains the authentication handlers camera directory that contains the camera handler flash directory that contains the flash files management handler sd directory that contains the sd files managment handler ssdp directory that contains the ssdp service handler update directory that contains the firmware update handler webdav directory that contains the webdav protocol handler ws directory that contains the websocket handler (data only not webui) esp3d_commands.cpp file that handle the web commands handler esp3d_config.cpp file that handle the config handler (shortcut to [ESP420]) esp3d_favicon.cpp file that handle the favicon handler esp3d_file_not_found.cpp file that handle the file not found handler (which also handle the download of the files) esp3d_root.cpp file that handle the root handler (including the maintenance mode) esp3d_websocket_webui.cpp file that handle the websocket handler for the webui mdns directory that contains the code for the mdns feature network directory that contains the code for the network feature notifications directory that contains the code for the notifications feature rendering directory that contains the code for the renderer feature (Display) serial directory that contains the code for the serial communications feature socket_server directory that contains the code for the socket server feature (Telnet) ssdp directory that contains the code for the ssdp protocol feature time directory that contains the code for the time feature (NTP) translation directory that contains the code for the translation feature update directory that contains the code for the update feature usb_serial directory that contains the code for the usb serial feature (OTG) webdav directory that contains the code for the webdav protocol feature websocket directory that contains the code for the websocket feature (webui and data) target directory, which contains the target code specific actions. each subdirectory contains the code for a specific target. the target directory contains the following files:\n3dprinter directory that contains the code for the 3D printer target: marlin directory that contains the code for the Marlin target repetier directory that contains the code for the Repetier target smoothieware directory that contains the code for the Smoothieware target cnc directory that contains the code for the CNC target:\ngrbl directory that contains the code for the Grbl target scripts directory The scripts directory contains the scripts used to build the firmware. The scripts directory contains the following files / directories:\nfonts_builder directory that contains the scripts used to build the fonts for the TFT display the scripts will build the c code for the fonts to be used on the TFT display, the gerenated files will be placed in the fonts directory The generated sizes are “8”,“10”,“12”,“14”,“16”,“18”,“20”,“22”,“24”,“26”,“28”,“30”,“32”,“34”,“36”,“38”,“40”,“42”,“44”,“46”,“48” pixels. It use Montserrat-Medium.ttf as base font: Generic chars are from 0x20 to 0x7F and with 0xB0. French chars are 0xE0,0xE7,0xE8,0xE9,0xEA,0xF4 I use also FreeSerifBold.ttf 0x2022 char for the symbols I use Font fa-solid-900 and fa-brands-400.ttf: code SYMBOL font 0xe568 HEAT_BED fa-solid-900.ttf 0xf2c9 EXTRUDER fa-solid-900.ttf 0xf0ca LIST fa-solid-900.ttf 0xf715 SLASH fa-solid-900.ttf 0xf012 STATION_MODE fa-solid-900.ttf 0xf519 ACCESS_POINT fa-solid-900.ttf 0xf00c OK fa-solid-900.ttf 0xe596 PROBE_CHECK fa-solid-900.ttf 0xf00d CLOSE fa-solid-900.ttf 0xf011 POWER fa-solid-900.ttf 0xf028 VOLUME_HIGH fa-solid-900.ttf 0xf027 VOLUME_LOW fa-solid-900.ttf 0xf6a9 VOLUME_OFF fa-solid-900.ttf 0xf013 SETTINGS fa-solid-900.ttf 0xf2d1 NO_HEAT_BED fa-solid-900.ttf 0xe040 HEAT_EXTRUDER fa-solid-900.ttf 0xf2ed TRASH fa-solid-900.ttf 0xe3af HOME fa-solid-900.ttf 0xf019 DOWNLOAD fa-solid-900.ttf 0xf021 REFRESH fa-solid-900.ttf 0xf304 EDIT fa-solid-900.ttf 0xf048 PREVIOUS fa-solid-900.ttf 0xf051 NEXT fa-solid-900.ttf 0xf04b PLAY fa-solid-900.ttf 0xf04c PAUSE fa-solid-900.ttf 0xf0c7 SAVE fa-solid-900.ttf 0xf0e0 MESSAGE fa-solid-900.ttf 0xf0e7 LASER fa-solid-900.ttf 0xf76f VACCUM fa-solid-900.ttf 0xf1f6 DISABLE_ALERT fa-solid-900.ttf 0xf023 LOCK fa-solid-900.ttf 0xf2dc COOLANT fa-solid-900.ttf 0xf04d STOP fa-solid-900.ttf 0xf1eb WIFI fa-solid-900.ttf 0xf071 WARNING fa-solid-900.ttf 0xf07b FOLDER fa-solid-900.ttf 0xf15b FILE fa-solid-900.ttf 0xf11c KEYBOARD fa-solid-900.ttf 0xf55a BACKSPACE fa-solid-900.ttf 0xf7c2 SD_CARD fa-solid-900.ttf 0xf0b2 JOG fa-solid-900.ttf 0xf077 UP fa-solid-900.ttf 0xf078 DOWN fa-solid-900.ttf 0xf053 LEFT fa-solid-900.ttf 0xf054 RIGHT fa-solid-900.ttf 0xf120 COMMAND fa-solid-900.ttf 0xf624 GAUGE fa-solid-900.ttf 0xf1ab LANGUAGE fa-solid-900.ttf 0xf863 FAN fa-solid-900.ttf 0xf48b SPEED fa-solid-900.ttf 0xf72b WIZARD fa-solid-900.ttf 0xf185 LIGHT fa-solid-900.ttf 0xf5c1 ENGINE fa-solid-900.ttf 0xf5fd LAYERS fa-solid-900.ttf 0xe4b8 LEVELING fa-solid-900.ttf 0xf4db FILAMENT fa-solid-900.ttf 0xe4bd CENTER fa-solid-900.ttf 0xf002 SEARCH fa-solid-900.ttf 0xf4d7 FILAMENT_SENSOR fa-solid-900.ttf 0xf2cc MIST fa-solid-900.ttf 0xf13e UNLOCK fa-solid-900.ttf 0xf192 LASER_2 fa-solid-900.ttf 0xe4c3 MILLING fa-solid-900.ttf 0xf3e5 NEW_LINE fa-solid-900.ttf 0xf293 BLUETOOTH fa-brands-400.ttf 0xf287 USB fa-brands-400.ttf 0xf0a1 MORE_INFO fa-solid-900.ttf 0xf055 PLUS fa-solid-900.ttf 0xf056 MINUS fa-solid-900.ttf 0xf256 MANUAL fa-solid-900.ttf 0xf544 AUTOMATIC fa-solid-900.ttf ",
    "description": "Project content and files organization",
    "tags": [],
    "title": "Project architecture reference",
    "uri": "/esp3d-tft/v1.x/documentation/api/project-arch/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e Extra tools \u003e Discovery tools",
    "content": " Windows : Supported out of the box, just go to Network page OSX :\nTBD Linux : On Debian-style distros, install gupnp-tools and run gssdp-discover -i \u003cdevicename\u003e --timeout=3 Android : SSDP/UPnP Scanner ",
    "description": " Windows : Supported out of the box, just go to Network page OSX :\nTBD Linux : On Debian-style distros, install gupnp-tools and run gssdp-discover -i \u003cdevicename\u003e --timeout=3 Android : SSDP/UPnP Scanner ",
    "tags": [],
    "title": "SSDP protocol",
    "uri": "/tools/discovery/ssdp/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware",
    "content": "\rTFT\rBigtreetech TFT\rTFT 35 E3\rTFT 70\rMakerbase TFT\rTFT 32L V4.0\rTFT 35 V1.0\rTFT 70 V1.1\rMain boards\rAnet boards up to v1.5 and 1.7\rAnycubic i3 mega - Trigorilla 8bit board\rAnycubic Kobra 2 - Trigorilla Pro B V1.0.2 board\rAZSMZ LCD board\rAZSMZ mini board\rAzteeg X5 mini board\rBIQU KFB2.0 board\rBigtreetech Octopus 1.1 board\rBigtreetech skr board\rBigtreetech skr mini board\rBigtreetech skr pro board\rCreality CR10 Ender 3 board\rCreality Ender 4 board\rMKS GEN v1.2 to 1.4 board\rMKS Robin Nano board\rMKS SBase board\rRADDS/Due\rRamps / Mega\rRamps / re-Arm\rSmoothieboard\rBigtreetech skr board\rDavinci 1.0/2.0 board\rDavinci 1.0A board",
    "description": "TFT\rBigtreetech TFT\rTFT 35 E3\rTFT 70\rMakerbase TFT\rTFT 32L V4.0\rTFT 35 V1.0\rTFT 70 V1.1\rMain boards\rAnet boards up to v1.5 and 1.7\rAnycubic i3 mega - Trigorilla 8bit board\rAnycubic Kobra 2 - Trigorilla Pro B V1.0.2 board\rAZSMZ LCD board\rAZSMZ mini board\rAzteeg X5 mini board\rBIQU KFB2.0 board\rBigtreetech Octopus 1.1 board\rBigtreetech skr board\rBigtreetech skr mini board\rBigtreetech skr pro board\rCreality CR10 Ender 3 board\rCreality Ender 4 board\rMKS GEN v1.",
    "tags": [],
    "title": "System boards",
    "uri": "/esp3d/v3.x/hardware/system_boards/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards",
    "content": "\rBigtreetech TFT\rTFT 35 E3\rTFT 70\rMakerbase TFT\rTFT 32L V4.0\rTFT 35 V1.0\rTFT 70 V1.1",
    "description": "\rBigtreetech TFT\rTFT 35 E3\rTFT 70\rMakerbase TFT\rTFT 32L V4.0\rTFT 35 V1.0\rTFT 70 V1.1",
    "tags": [],
    "title": "TFT",
    "uri": "/esp3d/v3.x/hardware/system_boards/tft/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e TFT \u003e Makerbase TFT",
    "content": "The board has a MKS WiFi Module connector 8 pins\nBoard pins socket MKS WiFi Module 8 pins Board firmware MKS Board configuration note ESP3D configuration note MKS serial, no SD ",
    "description": "Socket available",
    "tags": [],
    "title": "TFT 32L V4.0",
    "uri": "/esp3d/v3.x/hardware/system_boards/tft/makerbase/tft_32l/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e TFT \u003e Bigtreetech TFT",
    "content": "The board has footprint for an ESP01 connector\nBoard pins socket ESP01 Board firmware BTT Board configuration note Need to enable wifi port using config.ini file ESP3D configuration note Raw serial, no SD ",
    "description": "Socket available",
    "tags": [],
    "title": "TFT 35 E3",
    "uri": "/esp3d/v3.x/hardware/system_boards/tft/bigtreetech/tft_35_e3/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e TFT \u003e Makerbase TFT",
    "content": "The board has a MKS WiFi Module connector 8 pins\nBoard pins socket MKS WiFi Module 8 pins Board firmware MKS Board configuration note ESP3D configuration note MKS serial, no SD ",
    "description": "Socket available",
    "tags": [],
    "title": "TFT 35 V1.0",
    "uri": "/esp3d/v3.x/hardware/system_boards/tft/makerbase/tft_35/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e TFT \u003e Makerbase TFT",
    "content": "The board has a MKS WiFi Module connector 8 pins\nBoard pins socket MKS WiFi Module 8 pins Board firmware MKS Board configuration note ESP3D configuration note MKS serial, no SD ",
    "description": "Socket available",
    "tags": [],
    "title": "TFT 70 V1.1",
    "uri": "/esp3d/v3.x/hardware/system_boards/tft/makerbase/tft_70/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 2.1.X \u003e Documentation",
    "content": "The WebUI unfortunatly does not support UTF8, so for special character specific to the language like : ¡ í á ó please refere to : specialcharacters.php and wiki\nLanguage currently supported English (en) : 100% Here French (fr) : 72% Here German (de): 72% Here Hungarian: (hu) 99% Here Italian : (it) 72% Here Spanish : (es) 72% Here Polish : (pl) 87% Here Russian: (ru) 87% Here Ukrainian: (uk) 87% Here Portuguese-Br: (ptbr) 97% Here Chinese (simplified) (zh_CN): 99% Here Chinese (traditional) (zh_TW): 99% Here Japanese (ja): 99% Here Turkish: (tr) 97% Here How to translate Translate the right side only if necessary Check language.tpl if any update Submit Issue or PR with modified file Note: English is the reference but it can be adjusted if necessary, just add the corresponding reference to the english file.\nTo add a new language : The template file is here\nChange lang to the proper local descriptor Translate the right side only Submit Issue with modified file (do not do PR as another file need to be updated) ",
    "description": "Steps and supported languages",
    "tags": [],
    "title": "Translations",
    "uri": "/esp3d-webui/v2.x/documentation/translation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation",
    "content": "Generate template files Use the script npm run template to geenrate up todate template files for all packs\nCurrently:\nCNC GRBL in languages/cncgrblpack CNC grblHAL languages/cncgrblhalpack 3D Printers (all) languages/printerpack Sand Table (all) languages/sandtablepack Generate language pack files Rename the template file according the language code http://www.lingoes.net/en/translator/langcode.htm using _ instead of - and add lang- in from of name. so for example :\nfor french language pack, en.json file would be renamed to lang-fr.json for simplified chinese language pack, en.json file would be renamed to lang-zh_cn.json for simplified chinese language pack, en.json file would be renamed to lang-zh_cn.json for german language pack, en.json file would be renamed to lang-de.json Modify the language pack file according to the language and test it against the WebUI\nCompress the final pack use the following command to compress the final pack targeting the file :\nnpm run package target=languages/\u003ctarget pack\u003e/lang-\u003ctarget language\u003e.json\nso for French language pack for example: npm run package target=languages/printerpack/lang-fr.json\nCompare template pack with language pack file This script is used to compare current language pack content against the template language pack to see if the language pack need to be updated.\nnpm run check reference=\u003ctemplate path file\u003e target=\u003cnot compressed language pack\u003e\nnpm run check target=languages/printerpack/lang-fr.json reference=languages/printerpack/en.json\r\u003e ESP3D-WEBUI@3.0.0 check\r\u003e node ./config/checkpack.js \"target=languages/printerpack/lang-fr.json\" \"reference=languages/printerpack/en.json\"\rComparing files\rChecking extra entries...\rS724 : Fermer l'application\r...done, found 1 extra entries\rChecking missing entries...\rS14 : Settings\rS24 : Close\r...done, found 2 missing entries\rComparaison donePropose / update language pack files Please do a PR to webUI 3.0 github branch or submit ticket with compressed and clear version of the language pack file\nif submitting PR please keep the clear version in languages/\u003ctarget pack\u003e and compressed version in dist/\u003ctarget pack\u003e",
    "description": "Steps and supported languages",
    "tags": [],
    "title": "Translations",
    "uri": "/esp3d-webui/v3.x/documentation/translation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT",
    "content": "\rThis version is the development version, features can change anytime, feedback, PR and suggestions are welcome.\nFirmware should work with the following firmwares:\nRepetier 1.0 Marlin 1.X/2.X Smoothieware 1.x grbl 1.x grblHAL The communication between ESP board and target board is done by serial or by USB depending of ESP32 board.\nThe firmware must be used with ESP3D-WEBUI 3.X\nEstimated planning %%{init:{\"theme\":\"default\"}}%%\rgantt\rdateFormat YYYY-MM-DD\rtitle ESP3D-TFT Planning\rsection Code Study\rIDF FrameWork Study :done, des1, 2022-08-24,2022-09-05\rCode project definition :done, des2, 2022-09-06, 2022-09-16\rsection Code implementation\rDrivers implementation :done, des3, 2022-09-16, 2022-10-06\rSerial implementation :done, des4, 2022-10-07, 2022-10-12\rESP3D Commands API :done, des5, 2022-10-13, 2022-10-23\rFilesystem API :done, des6, 2022-10-24, 2022-10-27\rNetwork implementation :done, des7, 2022-10-28, 2022-11-03\rSD API :done, des8, 2022-11-04, 2022-11-06\rHTTP Server :done, des9, 2022-11-07, 2022-12-04\rWebSocket Server code base :done, des10, 2022-12-04, 2022-12-05\rTests and Bug fixes :done, des11, 2022-12-05, 2022-12-11\rUpdate feature :done, des12, 2022-12-11, 2022-12-12\rNotifications feature :done, des13, 2022-12-13, 2022-12-19\rmDNS feature :done, des14, 2022-12-19, 2022-12-20\rSSDP feature :done, des15, 2022-12-19, 2022-12-30\rTelnet server feature :done, des16, 2022-12-31, 2023-01-07\rTests and Bug fixes :done, des17, 2022-12-31, 2023-01-15\rUSB Host feature :done, des18, 2023-01-16, 2023-01-18\rBuild-CI implementation :done, des19, 2023-01-18, 2023-01-22\rAuthentication implementation :done, des20, 2023-01-23, 2023-02-12\resp3d.io setup :done, des21, 2023-02-13, 2023-02-26\rTests and Bug fixes :done, des22, 2023-02-26, 2023-02-27\rStreaming Host :active, des23, 2023-02-27, 60d\rTFT UI definition : des24, after des23, 7d\rTFT UI mockup : des25, after des24, 7d\rTFT UI implementation : des26, after des25, 60d\rTests and Bug fixes : des27, after des26, 7d\rWebDAV implementation : des28, after des27, 14d\rBluetooth implementation : des29, after des28, 7d\rBuzzer support : des30, after des29, 7d\rPins control support : des31, after des30, 7d\rAuto script support at start : des32, after des31, 7d",
    "description": "This version is the development version, features can change anytime, feedback, PR and suggestions are welcome.\nFirmware should work with the following firmwares:\nRepetier 1.0 Marlin 1.X/2.X Smoothieware 1.x grbl 1.x grblHAL The communication between ESP board and target board is done by serial or by USB depending of ESP32 board.\nThe firmware must be used with ESP3D-WEBUI 3.X\nEstimated planning %%{init:{\"theme\":\"default\"}}%%\rgantt\rdateFormat YYYY-MM-DD\rtitle ESP3D-TFT Planning\rsection Code Study\rIDF FrameWork Study :done, des1, 2022-08-24,2022-09-05\rCode project definition :done, des2, 2022-09-06, 2022-09-16\rsection Code implementation\rDrivers implementation :done, des3, 2022-09-16, 2022-10-06\rSerial implementation :done, des4, 2022-10-07, 2022-10-12\rESP3D Commands API :done, des5, 2022-10-13, 2022-10-23\rFilesystem API :done, des6, 2022-10-24, 2022-10-27\rNetwork implementation :done, des7, 2022-10-28, 2022-11-03\rSD API :done, des8, 2022-11-04, 2022-11-06\rHTTP Server :done, des9, 2022-11-07, 2022-12-04\rWebSocket Server code base :done, des10, 2022-12-04, 2022-12-05\rTests and Bug fixes :done, des11, 2022-12-05, 2022-12-11\rUpdate feature :done, des12, 2022-12-11, 2022-12-12\rNotifications feature :done, des13, 2022-12-13, 2022-12-19\rmDNS feature :done, des14, 2022-12-19, 2022-12-20\rSSDP feature :done, des15, 2022-12-19, 2022-12-30\rTelnet server feature :done, des16, 2022-12-31, 2023-01-07\rTests and Bug fixes :done, des17, 2022-12-31, 2023-01-15\rUSB Host feature :done, des18, 2023-01-16, 2023-01-18\rBuild-CI implementation :done, des19, 2023-01-18, 2023-01-22\rAuthentication implementation :done, des20, 2023-01-23, 2023-02-12\resp3d.",
    "tags": [],
    "title": "Version 1.X",
    "uri": "/esp3d-tft/v1.x/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib",
    "content": "\rThis version is the production version, features are frozen, only bugfixes are accepted.\nIt is already part of Marlin distribution, check how to enable it\nWarning\rThis is NOT for esp8266, esp8285, esp32 boards as daughters boards connected to your main board.\nThe library must be used with ESP3D-WEBUI 2.X",
    "description": "This version is the production version, features are frozen, only bugfixes are accepted.\nIt is already part of Marlin distribution, check how to enable it\nWarning\rThis is NOT for esp8266, esp8285, esp32 boards as daughters boards connected to your main board.\nThe library must be used with ESP3D-WEBUI 2.X",
    "tags": [],
    "title": "Version 1.X",
    "uri": "/esp3dlib/v1.x/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI",
    "content": "\rThis version is the production version, features are frozen, only bugfixes are accepted.\nWebUI should support features of the following firmwares:\nRepetier 1.0/2.0 Marlin 1.X/2.X Smoothieware 1.x grbl 1.x The ESP3D-WEBUI 2.X must be used with ESP3D 2.X, ESP3DLib 1.X.",
    "description": "This version is the production version, features are frozen, only bugfixes are accepted.\nWebUI should support features of the following firmwares:\nRepetier 1.0/2.0 Marlin 1.X/2.X Smoothieware 1.x grbl 1.x The ESP3D-WEBUI 2.X must be used with ESP3D 2.X, ESP3DLib 1.X.",
    "tags": [],
    "title": "Version 2.1.X",
    "uri": "/esp3d-webui/v2.x/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D",
    "content": "\rThis version is the production version, features are frozen, only bugfixes are accepted.\nFirmware should work with the following firmwares:\nRepetier 1.0 Marlin 1.X/2.X Smoothieware 1.x grbl 1.x The communication between ESP board and target board is done by serial.\nThe firmware must be used with ESP3D-WEBUI 2.X",
    "description": "This version is the production version, features are frozen, only bugfixes are accepted.\nFirmware should work with the following firmwares:\nRepetier 1.0 Marlin 1.X/2.X Smoothieware 1.x grbl 1.x The communication between ESP board and target board is done by serial.\nThe firmware must be used with ESP3D-WEBUI 2.X",
    "tags": [],
    "title": "Version 2.1.X",
    "uri": "/esp3d/v2.x/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI",
    "content": "\rThis version is the development version.\nWebUI should support features of the following firmwares:\nRepetier 1.0/2.0 Marlin 1.X/2.X Smoothieware 1.x grbl 1.x grblHAL The ESP3D-WEBUI 3.X must be used with ESP3D 3.X, ESP3DLib 3.X and grblHAL It won’t work with older versions.",
    "description": "This version is the development version.\nWebUI should support features of the following firmwares:\nRepetier 1.0/2.0 Marlin 1.X/2.X Smoothieware 1.x grbl 1.x grblHAL The ESP3D-WEBUI 3.X must be used with ESP3D 3.X, ESP3DLib 3.X and grblHAL It won’t work with older versions.",
    "tags": [],
    "title": "Version 3.X",
    "uri": "/esp3d-webui/v3.x/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e API",
    "content": "/ (GET) root is the default handler where all files will be served, if no file is defined, it looks for index.html or index.html.gz (compressed) if you call specific file, it will look for the filename and filename.gz (compressed) if no file is defined and there is not index.html(.gz) it will display embedded page another way to show the embedded page is /?forcefallback=yes\n/sd/ (GET) it will serve any file from SD card if there is one, it is only a wrapper to read SD card, no upload\n/files (GET/POST) this handler handle all commands for FS, including upload on FS.\npossible options/arguments are:\nquiet=yes can be used when you don’t want list files but just upload them path=... define the path to the file action=... define the action to execute which can be:\n- delete\ndelete the file defined by filename=... it will also use path=... to do full path\n- deletedir\ndelete the directory defined by filename=... it will also use path=... to do full path - createdir create the directory defined by filename=... it will also use path=... to do full path createPath=yes when doing upload and the path do not exists, it will create it, POST only \u003cfilename\u003eS=... give the size of uploaded file with name, need to be set before file is set in upload, POST only the output is a json file:\n```json\r{ \"files\":[ //the files list { \"name\":\"index.html.gz\", //the name of the file\r\"size\":\"83.46 KB\", //the formated size of the file \"time\":\"2022-09-04 11:56:05\" //the time when the file was modified last time, this one is optional and depend on (FILESYSTEM_TIMESTAMP_FEATURE)\r},\r{\r\"name\":\"subdir\", //the name of the file / directory\r\"size\":\"-1\", //the size is -1 because it is a directory\r\"time\":\"\" //no time for directories optional as depend on (FILESYSTEM_TIMESTAMP_FEATURE)\r}\r],\r\"path\":\"/\", //current path\r\"occupation\":\"52\", //% of occupation\r\"status\":\"subdir created\", //status \"total\":\"192.00 KB\", //Formated total space of Filesystem\r\"used\":\"100.00 KB\" //Formated used space of Filesystem\r}\r```\r/sdfiles (GET/POST) ) this handler handle all commands for SD, including upload on SD (only shared and direct SD) this handler handle all commands for FS, including upload on FS.\npossible options/arguments are:\nquiet=yes can be used when you don’t want list files but just upload them path=... define the path to the file action=... define the action to execute which can be:\n- list Will refresh the stats of the files - delete\ndelete the file defined by filename=... it will also use path=... to do full path\n- deletedir\ndelete the directory defined by filename=... it will also use path=... to do full path - createdir create the directory defined by filename=... it will also use path=... to do full path createPath=yes when doing upload and the path do not exists, it will create it, POST only \u003cfilename\u003eS=... give the size of uploaded file with name, need to be set before file is set in upload, POST only the output is a json file:\n```json\r{\r\"files\":[ //the files list\r{\r\"name\":\"3Oc-pika2.gco\",//the name of the file\r\"shortname\":\"3Oc-pika2.gco\", //the 8.3 shortname if available, if not the name of the file\r\"size\":\"83.46 KB\", //the formated size of the file \"time\":\"2022-09-04 11:56:05\" //the time when the file was modified last time, this one is optional and depend on (SD_TIMESTAMP_FEATURE)\r},\r{\r\"name\":\"subdir\", //the name of the file / directory\r\"size\":\"-1\", //the size is -1 because it is a directory\r\"time\":\"\" //no time for directories optional as depend on (SD_TIMESTAMP_FEATURE)\r}\r],\r\"path\":\"/\", //current path\r\"occupation\":\"52\", //% of occupation\r\"status\":\"subdir created\", //status \"total\":\"192.00 KB\", //Formated total space of Filesystem\r\"used\":\"100.00 KB\" //Formated used space of Filesystem\r}\r```\r/upload (POST) this handler is for MKS boards using MKS communication protocol if enabled, it handle only upload on SD\n/command (GET) this handler is for all commands the parameter is cmd=... if it is an [ESPXXX] command the answer is the [ESPXXX] response if it is not an [ESPXXX] command the answer is ESP3D says: command forwarded and can be ignored\n/login (GET/POST) this handler is for authentication function if enabled possible options/arguments are:\n- DISCONNECT=YES it will clear current session, remove authentication cookie, set status to disconnected and response code to 401 - SUBMIT=YES to login it will need also PASSWORD=... and USER=..., the answer will be 200 if success and 401 if failed if user is already authenticated it can use NEWPASSWORD=... instead of PASSWORD=... to change his password, if successful answer will be returned with code 200, otherwise code will be 500 if change failed or if password format is invalid\nOutput:\nif authentified and no submission:\n{\"status\":\"Identified\",\"authentication_lvl\":\"admin\"} and code 200 if not authenticated and no submission:\n{\"status\":\"Wrong authentication!\",\"authentication_lvl\":\"guest\"} and code 401 /config (GET) this handler is a shortcut to [ESP420] command in text mode, to get output in json add json=yes\n/updatefw (GET/POST) this handler is for FW upload and update Answer output is : {\"status\":\"...\"} if upload is successful the ESP will restart\n/snap (GET) this handler is on esp32cam with camera enabled to capture a Frame it answer by sending a jpg image\n/description.xml (GET) this handler is for SSDP if enabled to present device informations\n\u003croot xmlns=\"urn:schemas-upnp-org:device-1-0\"\u003e \u003cspecVersion\u003e \u003cmajor\u003e1\u003c/major\u003e \u003cminor\u003e0\u003c/minor\u003e \u003c/specVersion\u003e \u003cURLBase\u003ehttp://192.168.2.178:80/\u003c/URLBase\u003e \u003cdevice\u003e \u003cdeviceType\u003eurn:schemas-upnp-org:device:upnp:rootdevice:1\u003c/deviceType\u003e \u003cfriendlyName\u003eesp3d\u003c/friendlyName\u003e \u003cpresentationURL\u003e/\u003c/presentationURL\u003e \u003cserialNumber\u003e52332\u003c/serialNumber\u003e \u003cmodelName\u003eESP Board\u003c/modelName\u003e \u003cmodelDescription/\u003e \u003cmodelNumber\u003eESP3D 3.0\u003c/modelNumber\u003e \u003cmodelURL\u003ehttps://www.espressif.com/en/products/devkits\u003c/modelURL\u003e \u003cmanufacturer\u003eEspressif Systems\u003c/manufacturer\u003e \u003cmanufacturerURL\u003ehttps://www.espressif.com\u003c/manufacturerURL\u003e \u003cUDN\u003euuid:38323636-4558-4dda-9188-cda0e600cc6c\u003c/UDN\u003e \u003cserviceList/\u003e \u003ciconList/\u003e \u003c/device\u003e \u003c/root\u003eCaptive portal bypass handlers to avoid a redirect to index.html and so a refresh of the page, some classic handler have been added so they all go to / handler actually\n/generate_204 /gconnectivitycheck.gstatic.com /fwlink/ ",
    "description": "Web handlers description and parameters",
    "tags": [],
    "title": "Web Handlers",
    "uri": "/esp3d-tft/v1.x/documentation/api/webhandlers/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation \u003e API",
    "content": "/ (GET) root is the default handler where all files will be served, if no file is defined, it looks for index.html or index.html.gz (compressed) if you call specific file, it will look for the filename and filename.gz (compressed) if no file is defined and there is not index.html(.gz) it will display embedded page another way to show the embedded page is /?forcefallback=yes\n/sd/ (GET) it will serve any file from SD card if there is one, it is only a wrapper to read SD card, no upload\n/files (GET/POST) this handler handle all commands for FS, including upload on FS.\npossible options/arguments are:\nquiet=yes can be used when you don’t want list files but just upload them path=... define the path to the file action=... define the action to execute which can be:\n- delete\ndelete the file defined by filename=... it will also use path=... to do full path\n- deletedir\ndelete the directory defined by filename=... it will also use path=... to do full path - createdir create the directory defined by filename=... it will also use path=... to do full path createPath=yes when doing upload and the path do not exists, it will create it, POST only \u003cfilename\u003eS=... give the size of uploaded file with name, need to be set before file is set in upload, POST only the output is a json file:\n```json\r{ \"files\":[ //the files list { \"name\":\"index.html.gz\", //the name of the file\r\"size\":\"83.46 KB\", //the formated size of the file \"time\":\"2022-09-04 11:56:05\" //the time when the file was modified last time, this one is optional and depend on (FILESYSTEM_TIMESTAMP_FEATURE)\r},\r{\r\"name\":\"subdir\", //the name of the file / directory\r\"size\":\"-1\", //the size is -1 because it is a directory\r\"time\":\"\" //no time for directories optional as depend on (FILESYSTEM_TIMESTAMP_FEATURE)\r}\r],\r\"path\":\"/\", //current path\r\"occupation\":\"52\", //% of occupation\r\"status\":\"subdir created\", //status \"total\":\"192.00 KB\", //Formated total space of Filesystem\r\"used\":\"100.00 KB\" //Formated used space of Filesystem\r}\r```\r/sdfiles (GET/POST) ) this handler handle all commands for SD, including upload on SD (only shared and direct SD) this handler handle all commands for FS, including upload on FS.\npossible options/arguments are:\nquiet=yes can be used when you don’t want list files but just upload them path=... define the path to the file action=... define the action to execute which can be:\n- list Will refresh the stats of the files - delete\ndelete the file defined by filename=... it will also use path=... to do full path\n- deletedir\ndelete the directory defined by filename=... it will also use path=... to do full path - createdir create the directory defined by filename=... it will also use path=... to do full path createPath=yes when doing upload and the path do not exists, it will create it, POST only \u003cfilename\u003eS=... give the size of uploaded file with name, need to be set before file is set in upload, POST only the output is a json file:\n```json\r{\r\"files\":[ //the files list\r{\r\"name\":\"3Oc-pika2.gco\",//the name of the file\r\"shortname\":\"3Oc-pika2.gco\", //the 8.3 shortname if available, if not the name of the file\r\"size\":\"83.46 KB\", //the formated size of the file \"time\":\"2022-09-04 11:56:05\" //the time when the file was modified last time, this one is optional and depend on (SD_TIMESTAMP_FEATURE)\r},\r{\r\"name\":\"subdir\", //the name of the file / directory\r\"size\":\"-1\", //the size is -1 because it is a directory\r\"time\":\"\" //no time for directories optional as depend on (SD_TIMESTAMP_FEATURE)\r}\r],\r\"path\":\"/\", //current path\r\"occupation\":\"52\", //% of occupation\r\"status\":\"subdir created\", //status \"total\":\"192.00 KB\", //Formated total space of Filesystem\r\"used\":\"100.00 KB\" //Formated used space of Filesystem\r}\r```\r/upload (POST) this handler is for MKS boards using MKS communication protocol if enabled, it handle only upload on SD\n/command (GET) this handler is for all commands the parameter is cmd=... if it is an [ESPXXX] command the answer is the [ESPXXX] response if it is not an [ESPXXX] command the answer is ESP3D says: command forwarded and can be ignored\n/login (GET/POST) this handler is for authentication function if enabled possible options/arguments are:\n- DISCONNECT=YES it will clear current session, remove authentication cookie, set status to disconnected and response code to 401 - SUBMIT=YES to login it will need also PASSWORD=... and USER=..., the answer will be 200 if success and 401 if failed if user is already authenticated it can use NEWPASSWORD=... instead of PASSWORD=... to change his password, if successful answer will be returned with code 200, otherwise code will be 500 if change failed or if password format is invalid\nOutput:\nif authentified and no submission:\n{\"status\":\"Identified\",\"authentication_lvl\":\"admin\"} and code 200 if not authenticated and no submission:\n{\"status\":\"Wrong authentication!\",\"authentication_lvl\":\"guest\"} and code 401 /config (GET) this handler is a shortcut to [ESP420] command in text mode, to get output in json add json=yes\n/updatefw (GET/POST) this handler is for FW upload and update Answer output is : {\"status\":\"...\"} if upload is successful the ESP will restart\n/snap (GET) this handler is on esp32cam with camera enabled to capture a Frame it answer by sending a jpg image\n/description.xml (GET) this handler is for SSDP if enabled to present device informations\n\u003croot xmlns=\"urn:schemas-upnp-org:device-1-0\"\u003e \u003cspecVersion\u003e \u003cmajor\u003e1\u003c/major\u003e \u003cminor\u003e0\u003c/minor\u003e \u003c/specVersion\u003e \u003cURLBase\u003ehttp://192.168.2.178:80/\u003c/URLBase\u003e \u003cdevice\u003e \u003cdeviceType\u003eurn:schemas-upnp-org:device:upnp:rootdevice:1\u003c/deviceType\u003e \u003cfriendlyName\u003eesp3d\u003c/friendlyName\u003e \u003cpresentationURL\u003e/\u003c/presentationURL\u003e \u003cserialNumber\u003e52332\u003c/serialNumber\u003e \u003cmodelName\u003eESP Board\u003c/modelName\u003e \u003cmodelDescription/\u003e \u003cmodelNumber\u003eESP3D 3.0\u003c/modelNumber\u003e \u003cmodelURL\u003ehttps://www.espressif.com/en/products/devkits\u003c/modelURL\u003e \u003cmanufacturer\u003eEspressif Systems\u003c/manufacturer\u003e \u003cmanufacturerURL\u003ehttps://www.espressif.com\u003c/manufacturerURL\u003e \u003cUDN\u003euuid:38323636-4558-4dda-9188-cda0e600cc6c\u003c/UDN\u003e \u003cserviceList/\u003e \u003ciconList/\u003e \u003c/device\u003e \u003c/root\u003eCaptive portal bypass handlers to avoid a redirect to index.html and so a refresh of the page, some classic handler have been added so they all go to / handler actually\n/generate_204 /gconnectivitycheck.gstatic.com /fwlink/ ",
    "description": "Web handlers description and parameters",
    "tags": [],
    "title": "Web Handlers",
    "uri": "/esp3d-webui/v3.x/documentation/api/webhandlers/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e API",
    "content": "/ (GET) root is the default handler where all files will be served, if no file is defined, it looks for index.html or index.html.gz (compressed) if you call specific file, it will look for the filename and filename.gz (compressed) if no file is defined and there is not index.html(.gz) it will display embedded page another way to show the embedded page is /?forcefallback=yes\n/sd/ (GET) it will serve any file from SD card if there is one, it is only a wrapper to read SD card, no upload\n/files (GET/POST) this handler handle all commands for FS, including upload on FS.\npossible options/arguments are:\nquiet=yes can be used when you don’t want list files but just upload them path=... define the path to the file action=... define the action to execute which can be:\n- delete\ndelete the file defined by filename=... it will also use path=... to do full path\n- deletedir\ndelete the directory defined by filename=... it will also use path=... to do full path - createdir create the directory defined by filename=... it will also use path=... to do full path createPath=yes when doing upload and the path do not exists, it will create it, POST only \u003cfilename\u003eS=... give the size of uploaded file with name, need to be set before file is set in upload, POST only the output is a json file:\n```json\r{ \"files\":[ //the files list { \"name\":\"index.html.gz\", //the name of the file\r\"size\":\"83.46 KB\", //the formated size of the file \"time\":\"2022-09-04 11:56:05\" //the time when the file was modified last time, this one is optional and depend on (FILESYSTEM_TIMESTAMP_FEATURE)\r},\r{\r\"name\":\"subdir\", //the name of the file / directory\r\"size\":\"-1\", //the size is -1 because it is a directory\r\"time\":\"\" //no time for directories optional as depend on (FILESYSTEM_TIMESTAMP_FEATURE)\r}\r],\r\"path\":\"/\", //current path\r\"occupation\":\"52\", //% of occupation\r\"status\":\"subdir created\", //status \"total\":\"192.00 KB\", //Formated total space of Filesystem\r\"used\":\"100.00 KB\" //Formated used space of Filesystem\r}\r```\r/sdfiles (GET/POST) ) this handler handle all commands for SD, including upload on SD (only shared and direct SD) this handler handle all commands for FS, including upload on FS.\npossible options/arguments are:\nquiet=yes can be used when you don’t want list files but just upload them path=... define the path to the file action=... define the action to execute which can be:\n- list Will refresh the stats of the files - delete\ndelete the file defined by filename=... it will also use path=... to do full path\n- deletedir\ndelete the directory defined by filename=... it will also use path=... to do full path - createdir create the directory defined by filename=... it will also use path=... to do full path createPath=yes when doing upload and the path do not exists, it will create it, POST only \u003cfilename\u003eS=... give the size of uploaded file with name, need to be set before file is set in upload, POST only the output is a json file:\n```json\r{\r\"files\":[ //the files list\r{\r\"name\":\"3Oc-pika2.gco\",//the name of the file\r\"shortname\":\"3Oc-pika2.gco\", //the 8.3 shortname if available, if not the name of the file\r\"size\":\"83.46 KB\", //the formated size of the file \"time\":\"2022-09-04 11:56:05\" //the time when the file was modified last time, this one is optional and depend on (SD_TIMESTAMP_FEATURE)\r},\r{\r\"name\":\"subdir\", //the name of the file / directory\r\"size\":\"-1\", //the size is -1 because it is a directory\r\"time\":\"\" //no time for directories optional as depend on (SD_TIMESTAMP_FEATURE)\r}\r],\r\"path\":\"/\", //current path\r\"occupation\":\"52\", //% of occupation\r\"status\":\"subdir created\", //status \"total\":\"192.00 KB\", //Formated total space of Filesystem\r\"used\":\"100.00 KB\" //Formated used space of Filesystem\r}\r```\r/upload (POST) this handler is for MKS boards using MKS communication protocol if enabled, it handle only upload on SD\n/command (GET) this handler is for all commands the parameter is cmd=... if it is an [ESPXXX] command the answer is the [ESPXXX] response if it is not an [ESPXXX] command the answer is ESP3D says: command forwarded and can be ignored\n/login (GET/POST) this handler is for authentication function if enabled possible options/arguments are:\n- DISCONNECT=YES it will clear current session, remove authentication cookie, set status to disconnected and response code to 401 - SUBMIT=YES to login it will need also PASSWORD=... and USER=..., the answer will be 200 if success and 401 if failed if user is already authenticated it can use NEWPASSWORD=... instead of PASSWORD=... to change his password, if successful answer will be returned with code 200, otherwise code will be 500 if change failed or if password format is invalid\nOutput:\nif authentified and no submission:\n{\"status\":\"Identified\",\"authentication_lvl\":\"admin\"} and code 200 if not authenticated and no submission:\n{\"status\":\"Wrong authentication!\",\"authentication_lvl\":\"guest\"} and code 401 /config (GET) this handler is a shortcut to [ESP420] command in text mode, to get output in json add json=yes\n/updatefw (GET/POST) this handler is for FW upload and update Answer output is : {\"status\":\"...\"} if upload is successful the ESP will restart\n/snap (GET) this handler is on esp32cam with camera enabled to capture a Frame it answer by sending a jpg image\n/description.xml (GET) this handler is for SSDP if enabled to present device informations\n\u003croot xmlns=\"urn:schemas-upnp-org:device-1-0\"\u003e \u003cspecVersion\u003e \u003cmajor\u003e1\u003c/major\u003e \u003cminor\u003e0\u003c/minor\u003e \u003c/specVersion\u003e \u003cURLBase\u003ehttp://192.168.2.178:80/\u003c/URLBase\u003e \u003cdevice\u003e \u003cdeviceType\u003eurn:schemas-upnp-org:device:upnp:rootdevice:1\u003c/deviceType\u003e \u003cfriendlyName\u003eesp3d\u003c/friendlyName\u003e \u003cpresentationURL\u003e/\u003c/presentationURL\u003e \u003cserialNumber\u003e52332\u003c/serialNumber\u003e \u003cmodelName\u003eESP Board\u003c/modelName\u003e \u003cmodelDescription/\u003e \u003cmodelNumber\u003eESP3D 3.0\u003c/modelNumber\u003e \u003cmodelURL\u003ehttps://www.espressif.com/en/products/devkits\u003c/modelURL\u003e \u003cmanufacturer\u003eEspressif Systems\u003c/manufacturer\u003e \u003cmanufacturerURL\u003ehttps://www.espressif.com\u003c/manufacturerURL\u003e \u003cUDN\u003euuid:38323636-4558-4dda-9188-cda0e600cc6c\u003c/UDN\u003e \u003cserviceList/\u003e \u003ciconList/\u003e \u003c/device\u003e \u003c/root\u003eCaptive portal bypass handlers to avoid a redirect to index.html and so a refresh of the page, some classic handler have been added so they all go to / handler actually\n/generate_204 /gconnectivitycheck.gstatic.com /fwlink/ ",
    "description": "Web handlers description and parameters",
    "tags": [],
    "title": "Web Handlers",
    "uri": "/esp3d/v3.x/documentation/api/webhandlers/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e API",
    "content": "/ (GET) root is the default handler where all files will be served, if no file is defined, it looks for index.html or index.html.gz (compressed) if you call specific file, it will look for the filename and filename.gz (compressed) if no file is defined and there is not index.html(.gz) it will display embedded page another way to show the embedded page is /?forcefallback=yes\n/sd/ (GET) it will serve any file from SD card if there is one, it is only a wrapper to read SD card, no upload\n/files (GET/POST) this handler handle all commands for FS, including upload on FS.\npossible options/arguments are:\nquiet=yes can be used when you don’t want list files but just upload them path=... define the path to the file action=... define the action to execute which can be:\n- delete\ndelete the file defined by filename=... it will also use path=... to do full path\n- deletedir\ndelete the directory defined by filename=... it will also use path=... to do full path - createdir create the directory defined by filename=... it will also use path=... to do full path createPath=yes when doing upload and the path do not exists, it will create it, POST only \u003cfilename\u003eS=... give the size of uploaded file with name, need to be set before file is set in upload, POST only the output is a json file:\n```json\r{ \"files\":[ //the files list { \"name\":\"index.html.gz\", //the name of the file\r\"size\":\"83.46 KB\", //the formated size of the file \"time\":\"2022-09-04 11:56:05\" //the time when the file was modified last time, this one is optional and depend on (FILESYSTEM_TIMESTAMP_FEATURE)\r},\r{\r\"name\":\"subdir\", //the name of the file / directory\r\"size\":\"-1\", //the size is -1 because it is a directory\r\"time\":\"\" //no time for directories optional as depend on (FILESYSTEM_TIMESTAMP_FEATURE)\r}\r],\r\"path\":\"/\", //current path\r\"occupation\":\"52\", //% of occupation\r\"status\":\"subdir created\", //status \"total\":\"192.00 KB\", //Formated total space of Filesystem\r\"used\":\"100.00 KB\" //Formated used space of Filesystem\r}\r```\r/sdfiles (GET/POST) ) this handler handle all commands for SD, including upload on SD (only shared and direct SD) this handler handle all commands for FS, including upload on FS.\npossible options/arguments are:\nquiet=yes can be used when you don’t want list files but just upload them path=... define the path to the file action=... define the action to execute which can be:\n- list Will refresh the stats of the files - delete\ndelete the file defined by filename=... it will also use path=... to do full path\n- deletedir\ndelete the directory defined by filename=... it will also use path=... to do full path - createdir create the directory defined by filename=... it will also use path=... to do full path createPath=yes when doing upload and the path do not exists, it will create it, POST only \u003cfilename\u003eS=... give the size of uploaded file with name, need to be set before file is set in upload, POST only the output is a json file:\n```json\r{\r\"files\":[ //the files list\r{\r\"name\":\"3Oc-pika2.gco\",//the name of the file\r\"shortname\":\"3Oc-pika2.gco\", //the 8.3 shortname if available, if not the name of the file\r\"size\":\"83.46 KB\", //the formated size of the file \"time\":\"2022-09-04 11:56:05\" //the time when the file was modified last time, this one is optional and depend on (SD_TIMESTAMP_FEATURE)\r},\r{\r\"name\":\"subdir\", //the name of the file / directory\r\"size\":\"-1\", //the size is -1 because it is a directory\r\"time\":\"\" //no time for directories optional as depend on (SD_TIMESTAMP_FEATURE)\r}\r],\r\"path\":\"/\", //current path\r\"occupation\":\"52\", //% of occupation\r\"status\":\"subdir created\", //status \"total\":\"192.00 KB\", //Formated total space of Filesystem\r\"used\":\"100.00 KB\" //Formated used space of Filesystem\r}\r```\r/upload (POST) this handler is for MKS boards using MKS communication protocol if enabled, it handle only upload on SD\n/command (GET) this handler is for all commands the parameter is cmd=... if it is an [ESPXXX] command the answer is the [ESPXXX] response if it is not an [ESPXXX] command the answer is ESP3D says: command forwarded and can be ignored\n/login (GET/POST) this handler is for authentication function if enabled possible options/arguments are:\n- DISCONNECT=YES it will clear current session, remove authentication cookie, set status to disconnected and response code to 401 - SUBMIT=YES to login it will need also PASSWORD=... and USER=..., the answer will be 200 if success and 401 if failed if user is already authenticated it can use NEWPASSWORD=... instead of PASSWORD=... to change his password, if successful answer will be returned with code 200, otherwise code will be 500 if change failed or if password format is invalid\nOutput:\nif authentified and no submission:\n{\"status\":\"Identified\",\"authentication_lvl\":\"admin\"} and code 200 if not authenticated and no submission:\n{\"status\":\"Wrong authentication!\",\"authentication_lvl\":\"guest\"} and code 401 /config (GET) this handler is a shortcut to [ESP420] command in text mode, to get output in json add json=yes\n/updatefw (GET/POST) this handler is for FW upload and update Answer output is : {\"status\":\"...\"} if upload is successful the ESP will restart\n/snap (GET) this handler is on esp32cam with camera enabled to capture a Frame it answer by sending a jpg image\n/description.xml (GET) this handler is for SSDP if enabled to present device informations\n\u003croot xmlns=\"urn:schemas-upnp-org:device-1-0\"\u003e \u003cspecVersion\u003e \u003cmajor\u003e1\u003c/major\u003e \u003cminor\u003e0\u003c/minor\u003e \u003c/specVersion\u003e \u003cURLBase\u003ehttp://192.168.2.178:80/\u003c/URLBase\u003e \u003cdevice\u003e \u003cdeviceType\u003eurn:schemas-upnp-org:device:upnp:rootdevice:1\u003c/deviceType\u003e \u003cfriendlyName\u003eesp3d\u003c/friendlyName\u003e \u003cpresentationURL\u003e/\u003c/presentationURL\u003e \u003cserialNumber\u003e52332\u003c/serialNumber\u003e \u003cmodelName\u003eESP Board\u003c/modelName\u003e \u003cmodelDescription/\u003e \u003cmodelNumber\u003eESP3D 3.0\u003c/modelNumber\u003e \u003cmodelURL\u003ehttps://www.espressif.com/en/products/devkits\u003c/modelURL\u003e \u003cmanufacturer\u003eEspressif Systems\u003c/manufacturer\u003e \u003cmanufacturerURL\u003ehttps://www.espressif.com\u003c/manufacturerURL\u003e \u003cUDN\u003euuid:38323636-4558-4dda-9188-cda0e600cc6c\u003c/UDN\u003e \u003cserviceList/\u003e \u003ciconList/\u003e \u003c/device\u003e \u003c/root\u003eCaptive portal bypass handlers to avoid a redirect to index.html and so a refresh of the page, some classic handler have been added so they all go to / handler actually\n/generate_204 /gconnectivitycheck.gstatic.com /fwlink/ ",
    "description": "Web handlers description and parameters",
    "tags": [],
    "title": "Web Handlers",
    "uri": "/esp3dlib/v3.x/documentation/api/webhandlers/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e Notifications",
    "content": "Home Assistant is a home automation platform\nConsidering you have Home Assistant running in your local network:\n1 - Go to , and create a long-lived access token\n2 - Save the generated token in ESP3D, and set HOMEASSISTANT as notification supplier [ESP610]type=HOMEASSISTANT T1=xxxxxxxxxxxxx TS=homeassistant.local:8123\n3 - type [ESP610] to verify (T1 won’t be displayed)\n4 - Try to send message:\n[ESP600]/api/services/light/toggle#{\"entity_id\":\"light.wintergarten_spots\"} 5 - At the end of your gcode, you can add the following have your vacuum cleaner announce the print is done:\nM118 P3 [ESP600]/api/services/tts/cloud_say#{\"entity_id\":\"media_player.vacuum_audio\",\"message\":\"3d\\ print\\ ready\"} Visit https://developers.home-assistant.io/docs/api/rest/ to find out how to post states and events too ",
    "description": "Home Assistant is a home automation platform\nConsidering you have Home Assistant running in your local network:\n1 - Go to , and create a long-lived access token\n2 - Save the generated token in ESP3D, and set HOMEASSISTANT as notification supplier [ESP610]type=HOMEASSISTANT T1=xxxxxxxxxxxxx TS=homeassistant.local:8123\n3 - type [ESP610] to verify (T1 won’t be displayed)\n4 - Try to send message:\n[ESP600]/api/services/light/toggle#{\"entity_id\":\"light.wintergarten_spots\"} 5 - At the end of your gcode, you can add the following have your vacuum cleaner announce the print is done:",
    "tags": [],
    "title": " Home Assistant",
    "uri": "/esp3d/v3.x/documentation/notifications/home-assistant/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e Notifications",
    "content": "Line is free service\nConsidering you have line account and you already installed line on you phone/PC:\n1 - Go to https://notify-bot.line.me/my/ and connect with email and password 2 - Once connected you will be able to generate token\n3 - Type token name on top, select recipient(s) and press Generate token\n4 - Once token is created you need to copy it\n5 - You can create as many tokens you want, and delete the ones you do not need\n6 - Save the generate token in ESP3D, and set LINE as notification supplier [ESP610]type=LINE T1=xxxxxxxxxxxxxxxxxx\n7 - type [ESP610] to verify (T1 won’t be displayed)\n8 - Try to send message:\n[ESP600]Hi there, test from ESP3D",
    "description": "Line is free service\nConsidering you have line account and you already installed line on you phone/PC:\n1 - Go to https://notify-bot.line.me/my/ and connect with email and password 2 - Once connected you will be able to generate token\n3 - Type token name on top, select recipient(s) and press Generate token\n4 - Once token is created you need to copy it\n5 - You can create as many tokens you want, and delete the ones you do not need",
    "tags": [],
    "title": " Line Notification",
    "uri": "/esp3d-tft/v1.x/documentation/notifications/line/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Documentation \u003e Notifications",
    "content": "Line is free service\nConsidering you have line account and you already installed line on you phone/PC:\n1 - Go to https://notify-bot.line.me/my/ and connect with email and password 2 - Once connected you will be able to generate token\n3 - Type token name on top, select recipient(s) and press Generate token\n4 - Once token is created you need to copy it\n5 - You can create as many tokens you want, and delete the ones you do not need\n6 - Save the generate token in ESP3D, and set LINE as notification supplier [ESP610]type=LINE T1=xxxxxxxxxxxxxxxxxx\n7 - type [ESP610] to verify (T1 won’t be displayed)\n8 - Try to send message:\n[ESP600]Hi there, test from ESP3D",
    "description": "Line is free service\nConsidering you have line account and you already installed line on you phone/PC:\n1 - Go to https://notify-bot.line.me/my/ and connect with email and password 2 - Once connected you will be able to generate token\n3 - Type token name on top, select recipient(s) and press Generate token\n4 - Once token is created you need to copy it\n5 - You can create as many tokens you want, and delete the ones you do not need",
    "tags": [],
    "title": " Line Notification",
    "uri": "/esp3d/v2.x/documentation/notifications/line/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e Notifications",
    "content": "Line is free service\nConsidering you have line account and you already installed line on you phone/PC:\n1 - Go to https://notify-bot.line.me/my/ and connect with email and password 2 - Once connected you will be able to generate token\n3 - Type token name on top, select recipient(s) and press Generate token\n4 - Once token is created you need to copy it\n5 - You can create as many tokens you want, and delete the ones you do not need\n6 - Save the generate token in ESP3D, and set LINE as notification supplier [ESP610]type=LINE T1=xxxxxxxxxxxxxxxxxx\n7 - type [ESP610] to verify (T1 won’t be displayed)\n8 - Try to send message:\n[ESP600]Hi there, test from ESP3D",
    "description": "Line is free service\nConsidering you have line account and you already installed line on you phone/PC:\n1 - Go to https://notify-bot.line.me/my/ and connect with email and password 2 - Once connected you will be able to generate token\n3 - Type token name on top, select recipient(s) and press Generate token\n4 - Once token is created you need to copy it\n5 - You can create as many tokens you want, and delete the ones you do not need",
    "tags": [],
    "title": " Line Notification",
    "uri": "/esp3d/v3.x/documentation/notifications/line/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e Notifications",
    "content": "Line is free service\nConsidering you have line account and you already installed line on you phone/PC:\n1 - Go to https://notify-bot.line.me/my/ and connect with email and password 2 - Once connected you will be able to generate token\n3 - Type token name on top, select recipient(s) and press Generate token\n4 - Once token is created you need to copy it\n5 - You can create as many tokens you want, and delete the ones you do not need\n6 - Save the generate token in ESP3D, and set LINE as notification supplier [ESP610]type=LINE T1=xxxxxxxxxxxxxxxxxx\n7 - type [ESP610] to verify (T1 won’t be displayed)\n8 - Try to send message:\n[ESP600]Hi there, test from ESP3D",
    "description": "Line is free service\nConsidering you have line account and you already installed line on you phone/PC:\n1 - Go to https://notify-bot.line.me/my/ and connect with email and password 2 - Once connected you will be able to generate token\n3 - Type token name on top, select recipient(s) and press Generate token\n4 - Once token is created you need to copy it\n5 - You can create as many tokens you want, and delete the ones you do not need",
    "tags": [],
    "title": " Line Notification",
    "uri": "/esp3dlib/v3.x/documentation/notifications/line/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Hardware \u003e ESP32 boards",
    "content": " ESP32 + SDReader + PSRAM + 3.5’ TFT (480x320) with Resistive touch screen Rotrics Specs ESP32 PSRAM: 8MB FLASH: 8MB Micro-SD card slot (SDIO 1 bit) 3.5-inch 480x320 TFT display - ILI9488 (SPI) Capacitive touch panel - XPT2046 (SPI) Built-in microphone Speaker 1 USB-C (Serial 1) 1 debug port: GND, 5V, EN, GPIO 0, GPIO 2, GPIO 1 (TX), GPIO 3 (RX) Power Supply: 5V / 1A Important\rThe USB-C connector is actually a raw serial 1 port, not a real USB port.\nSerial 1 is the serial port used for communication with other devices.\nSerial 0 is the serial port used for programming the ESP32, this port is not easily accessible because connector is not soldered.\nSo do not try to flash TFT using usb-c connector, it won’t work.\nNote about USB-C connector\rThe ESP32 serial 1 TX is on both TX3 of USB connector, and ESP32 serial 1 RX is on both RX3 of USB connector, GND is GND, 5V is 5V, D+, D-, TX6 and RX6 seems not connected.\nPins Pin Usage GPIO 0 GPIO 0 / CODEC_ES8388_I2S_MCLK GPIO 1 TX 0 GPIO 2 GPIO 2 / SDIO DAT0 GPIO 3 RX 0 GPIO 4 SDIO DAT1 GPIO 5 CODEC_ES8388_I2S_SCLK GPIO 6 SPI FLASH GPIO 7 SPI FLASH GPIO 8 SPI FLASH GPIO 9 SPI FLASH GPIO 10 SPI FLASH GPIO 11 SPI FLASH GPIO 12 TFT_BL GPIO 13 TFT_TOUCH_CS GPIO 14 SDIO CLK GPIO 15 SDIO CMD GPIO 16 GPIO 17 GPIO 18 CODEC_ES8388_I2C_SDA - CE(low) wired to GND GPIO 19 TFT_CS GPIO 21 TX 1 GPIO 22 TFT_TOUCH_IRQ GPIO 23 CODEC_ES8388_I2C_SCL GPIO 25 CODEC_ES8388_I2S_LRCK GPIO 26 CODEC_ES8388_I2S_DSDIN GPIO 27 TFT_DC GPIO 32 TFT_MOSI GPIO 33 TFT_SCLK GPIO 34 TFT_MISO GPIO 35 CODEC_ES8388_I2S_ASDOUT GPIO 36 RX 1 GPIO 37 SD_DETECT (Low) GPIO 38 GPIO 39 CODEC_ES8388 Pin Usage ROUT1 LOUT1 ROUT2 speaker LOUT2 RIN2 LIN2 RIN1 LIN1 microphone ",
    "description": "ESP32 3.5' (480x320) TFT",
    "tags": [],
    "title": "3.5' Rotrics",
    "uri": "/esp3d-tft/v1.x/hardware/esp32/rotrics/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "To connect the ESP12e to the UART0. (Credits:197-murdock).\n(Green = RX, Blue = TX)\nGND can be taken from the AUX3 exposed connector.\nBoard pins voltage 5V Board firmware Marlin Board configuration note None, it use same serial as USB port so don’t use both together ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "Anycubic i3 mega - Trigorilla 8bit board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/anycubic_trigorilla/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "Trigorilla Pro B V1.0.2 board\nTo connect you can use pins 2 and 3 of the CH340G chip. (Orange = RX, White = TX) GND and 3.3V can be taken from left side of the board. Baud rate is 115200.\nBoard pins voltage 3.3V Board firmware Marlin Board configuration note None, it use same serial as USB port so don’t use both together ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "Anycubic Kobra 2 - Trigorilla Pro B V1.0.2 board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/anycubic_kobra_2/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Installation",
    "content": "Prepare the development environment Please download ide from https://www.arduino.cc/en/software Warning\rPlease use the Legacy IDE (1.8.X), the Arduino IDE 2.X was not tested and won’t be supported\nInstall the esp core according your target:\nESP8266\nWarning\rPlease use the version 2.5.2 or 2.7.4 only! Do not use any version upper than 2.7.4\nESP32\nWarning\rPlease use the version 1.0.4 only! Do not use any version upper than 1.0.4, and only use ESP32 board, other ESP32 flavors(C2, S2, S3, etc) are not supported in this version.\nCopy the content of the libraries directory to your arduino library directory.\nWarning\rDo not try any version different than the ones provided, they may not work properly.\nOpen esp3d/esp3d.ino file in Arduino IDE ESP3D configuration Open esp3d/config.h and set features you want.\n//Customize ESP3D //////////////////////////////////////////////////////////////////////// #define ESP8266_MODEL_NAME \"ESP8266\" #define ESP8266_MODEL_URL \"http://espressif.com/en/products/esp8266/\" #define ESP32_MODEL_NAME \"ESP32\" #define ESP32_MODEL_URL \"https://www.espressif.com/en/products/hardware/esp-wroom-32/overview\" #define ESP_MODEL_NUMBER \"ESP3D 2.1\" #define ESP_MANUFACTURER_NAME \"Espressif Systems\" #define ESP_MANUFACTURER_URL \"http://espressif.com\" //default name if no mac address is valid #define ESP_DEFAULT_NAME \"MYESP\" //if commented name will follow mac address 3 last digits //like ESP_XXXXXX (eg:ESP_028E41) to avoid overlap if several ESP3D #define ESP_HOST_NAME ESP_DEFAULT_NAME //To allow webupdate using small updater //#define USE_AS_UPDATER_ONLY //FEATURES - comment to disable ////////////////////////////////////////////////////////// //WEB_UPDATE_FEATURE: allow to flash fw using web UI #define WEB_UPDATE_FEATURE #ifndef USE_AS_UPDATER_ONLY //Do we use async webserver or not (currntly deprecated do not enable it yet) //#define ASYNCWEBSERVER //SERIAL_COMMAND_FEATURE: allow to send command by serial #define SERIAL_COMMAND_FEATURE //TCP_IP_DATA_FEATURE: allow to connect serial from TCP/IP #define TCP_IP_DATA_FEATURE //NOTIFICATION_FEATURE : allow to push notifications #define NOTIFICATION_FEATURE //MKS TFT WIFI support see Wiki for wiring //#define MKS_TFT_FEATURE //MDNS_FEATURE: this feature allow type the name defined //in web browser by default: http:\\\\esp8266.local and connect #define MDNS_FEATURE //SSDD_FEATURE: this feature is a discovery protocol, supported on Windows out of the box #define SSDP_FEATURE //NETBIOS_FEATURE: this feature is a discovery protocol, supported on Windows out of the box //#define NETBIOS_FEATURE //CAPTIVE_PORTAL_FEATURE: In SoftAP redirect all unknow call to main page #define CAPTIVE_PORTAL_FEATURE //RECOVERY_FEATURE: allow to use GPIO2 pin as hardware reset for EEPROM, add 8s to boot time to let user to jump GPIO2 to GND //#define RECOVERY_FEATURE //DIRECT_PIN_FEATURE: allow to access pin using ESP201 command #define DIRECT_PIN_FEATURE //ESP_OLED_FEATURE: allow oled screen output //#define ESP_OLED_FEATURE //DHT_FEATURE: send update of temperature / humidity based on DHT 11/22 //#define DHT_FEATURE //AUTHENTICATION_FEATURE: protect pages by login password //#define AUTHENTICATION_FEATURE //WS_DATA_FEATURE: allow to connect serial from Websocket #define WS_DATA_FEATURE //TIMESTAMP_FEATURE: Time stamp feature on direct SD files //#define TIMESTAMP_FEATURE #endif //USE_AS_UPDATER_ONLY //Extra features ///////////////////////////////////////////////////////////////////////// //Workaround for Marlin 2.X coldstart //#define DISABLE_CONNECTING_MSG //Serial rx buffer size is 256 but can be extended #define SERIAL_RX_BUFFER_SIZE 512 //Serial Parameters #define ESP_SERIAL_PARAM SERIAL_8N1 //which serial ESP use to communicate to printer (ESP32 has 3 serials available, ESP8266 only one) //Uncomment one only #define USE_SERIAL_0 //For ESP32 Only //#define USE_SERIAL_1 //#define USE_SERIAL_2 //Pins Definition //////////////////////////////////////////////////////////////////////// //-1 means use default pins of your board what ever the serial you choose #define ESP_RX_PIN -1 #define ESP_TX_PIN -1 #ifdef RECOVERY_FEATURE //pin used to reset setting #define RESET_CONFIG_PIN 2 #endif #ifdef DHT_FEATURE #define ESP_DHT_PIN 2 #endif //Pins where the screen is connected #ifdef ESP_OLED_FEATURE #define OLED_DISPLAY_SSD1306 // OLED Display Type: SSD1306(OLED_DISPLAY_SSD1306) / SH1106(OLED_DISPLAY_SH1106), comment this line out to disable oled #define OLED_PIN_SDA 4 //5 //SDA; // i2c SDA Pin #define OLED_PIN_SCL 15 //4 //SCL; // i2c SCL Pin #define OLED_ADDR 0x3c #define HELTEC_EMBEDDED_PIN 16 //0 to disable #define OLED_FLIP_VERTICALY 1 //0 to disable #endifConfigure Flash settings For ESP8266 with 4MB of flash Board: Generic ESP8266 Module Upload Speed: 115200 CPU frequency: 160 MHz Flash Size: 4M (2M SPIFFS) Flash Mode: DIO Flash Frequency: 40Mhz Reset Method: CK Debug Port: Disabled Debug Level: None For ESP8266 with 1MB of flash (this one may not support Web Update due to limited flash size) Board: Generic ESP8266 Module Upload Speed: 115200 CPU frequency: 160 MHz Flash Size: 1M (128K SPIFFS) Flash Mode: DIO Flash Frequency: 40Mhz Reset Method: CK Debug Port: Disabled Debug Level: None For ESP32 with 4MB of flash Board: ESP32 Dev Module Upload Speed: 115200 CPU frequency: 240 MHz Flash Frequency: 80Mhz Flash Mode: QIO Flash Size: 4MB Partition Scheme: Default 4MB with SPIFFS Core Debug Level: None PSRAM: Disabled Connect your board Compile and flash your module Select the port you device is connected to and select Upload from sketch menu to compile and flash.",
    "description": "Prepare the development environment Please download ide from https://www.arduino.cc/en/software Warning\rPlease use the Legacy IDE (1.8.X), the Arduino IDE 2.X was not tested and won’t be supported\nInstall the esp core according your target:\nESP8266\nWarning\rPlease use the version 2.5.2 or 2.7.4 only! Do not use any version upper than 2.7.4\nESP32\nWarning\rPlease use the version 1.0.4 only! Do not use any version upper than 1.0.4, and only use ESP32 board, other ESP32 flavors(C2, S2, S3, etc) are not supported in this version.",
    "tags": [],
    "title": "Arduino IDE",
    "uri": "/esp3d/v2.x/installation/arduino/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Installation",
    "content": "Prepare the development environment Please download ide from https://www.arduino.cc/en/software Warning\rPlease use the Legacy IDE (1.8.X) or the latest Arduino IDE 2.X\nInstall the esp core according your target:\nESP8266\nWarning\rPlease use the version 3.1.1.\nESP32\nWarning\rPlease use the version 2.0.8.\nCopy the content of the libraries directory and extra libraries directory (according your target ESP8266 or ESP32 ) to your arduino library directory\nWarning\rDo not try any version different than the ones provided, they may not work properly.\nOpen esp3d/esp3d.ino file in Arduino IDE ESP3D configuration Open esp3d/configuration.h and set features you want.\nYou can also generate it, using the ESP3D configurator, which simplify a lot this step. /* Setup station as default, use AP mode first if not done * Note: need both defined to enable it * Uncomment and edit them to define */ //#define STATION_WIFI_SSID \"*********\" //#define STATION_WIFI_PASSWORD \"*********\" /* You can also use a different config file for SSID/password * Just save it in same location as this configuration.h * This file is ignored by github */ #if defined __has_include # if __has_include (\"myconfig.h\") # include \"myconfig.h\" # endif #endif/************************************ * * Serial Communications * * Settings and protocols * ************************************/ /* Serial Communication protocol * RAW_SERIAL // Basic serial protocol, without data change * MKS_SERIAL // This is a MakerBase communication protocol, used with MKS printers and TFT, it encapsulated data in a custom protocol */ #define COMMUNICATION_PROTOCOL RAW_SERIAL /* Main Serial port * which serial ESP use to communicate to printer (ESP32 has 3 serials available, ESP8266 only 2) * USE_SERIAL_0 //for ESP8266/32, also used by bootloader output, so consider to make it quiet * USE_SERIAL_1 //for ESP8266/32 * USE_SERIAL_2 //for ESP32 Only */ //Main serial port #define ESP_SERIAL_OUTPUT USE_SERIAL_0 /* Bridge Serial port (deprecated on esp8266 as second serial is) * which serial ESP use to bridge to another device (ESP32 has 3 serials available, ESP8266 only 2) * USE_SERIAL_0 //for ESP8266/32, also used by bootloader output, so consider to make it quiet * USE_SERIAL_1 //for ESP8266/32 * USE_SERIAL_2 //for ESP32 Only\\ * Comment if not used */ //#define ESP_SERIAL_BRIDGE_OUTPUT USE_SERIAL_1 /* Serial buffer size * Maximum size of the serial buffer */ #define SERIAL_RX_BUFFER_SIZE 512/************************************ * * Target firmware * * Targeted firmware that ESP3D will communicate with * ************************************/ /* Target firmware (default UNKNOWN_FW can be changed later in settings) * UNKNOWN_FW * GRBL * MARLIN * SMOOTHIEWARE * REPETIER */ #define DEFAULT_FW UNKNOWN_FW/************************************ * * Radio mode of ESP3D * * The radio mode ESP3D communicate with the network * ************************************/ /* Use WiFi * Enable wifi communications */ #define WIFI_FEATURE /* Use Ethernet * Enable ethernet communications */ //#define ETH_FEATURE //Ethernet type (Check ETH.h eth_phy_type_t) //TYPE_ETH_PHY_LAN8720 //TYPE_ETH_PHY_TLK110 //TYPE_ETH_PHY_RTL8201 //TYPE_ETH_PHY_DP83848 //TYPE_ETH_PHY_DM9051 //TYPE_ETH_PHY_KSZ8041 //TYPE_ETH_PHY_KSZ8081 #define ESP3D_ETH_PHY_TYPE TYPE_ETH_PHY_LAN8720 //Ethernet board Clock mode // MODE_ETH_CLOCK_GPIO0_IN // MODE_ETH_CLOCK_GPIO0_OUT // MODE_ETH_CLOCK_GPIO16_OUT // MODE_ETH_CLOCK_GPIO17_OUT #define ESP3D_ETH_CLK_MODE MODE_ETH_CLOCK_GPIO17_OUT //Pins of ethernet board #define ESP3D_ETH_PHY_POWER_PIN 12 //#define ESP3D_ETH_PHY_MDC_PIN 23 //#define ESP3D_ETH_PHY_MDIO_PIN 18 //Address of ethernet board //#define ESP3D_ETH_PHY_ADDR 0 /* Use Bluetooth * Enable serial bluetooth communications */ //#define BLUETOOTH_FEATURE /************************************ * * Channels of ESP3D * * The way ESP3D communicate * ************************************/ /* Use Web server * Enable http server */ #define HTTP_FEATURE /* Use telnet server * Enable telnet light (raw tcp) communications */ #define TELNET_FEATURE /* Use Websocket server * Enable websocket communications */ //#define WS_DATA_FEATURE // Enable notifications // Allows to send notifications to the user #define NOTIFICATION_FEATURE /* Notification message when online * The message that will be sent when the ESP is online */ #define NOTIFICATION_ESP_ONLINE \"Hi, %ESP_NAME% is now online at %ESP_IP%\" /* Notification title message * The title of notification */ #define ESP_NOTIFICATION_TITLE \"ESP3D Notification\"/************************************ * * Discovery methods of ESP3D * * The discovery methods of ESP3D * ************************************/ /* Use captive portal * Enable captive portal in AP mode */ #define CAPTIVE_PORTAL_FEATURE /* Use mDNS discovery * This method need `bonjour` protocol on windows, or `avahi` on linux */ #define MDNS_FEATURE /* Use Simple Service Discovery Protocol * It is supported on Windows out of the box */ #define SSDP_FEATURE /************************************ * * SSDP Customization settings * * Customize your ESP3D * ************************************/ /* Model name * Modele name of device */ #define ESP_MODEL_NAME \"ESP Board\" /* Model number * Modele number of device */ #define ESP_MODEL_NUMBER \"ESP3D 3.0\" /* Model url * Modele url of device */ #define ESP_MODEL_URL \"https://www.espressif.com/en/products/devkits\" /* Manufacturer name * Manufacturer name of device */ #define ESP_MANUFACTURER_NAME \"Espressif Systems\" /* Manufacturer url * Manufacturer url of device */ #define ESP_MANUFACTURER_URL \"https://www.espressif.com\" /************************************ * * Flash filesystem * * Filesystem on flash * ************************************/ /* File system type used by ESP3D * Type of file system used by ESP3D to store files * ESP_SPIFFS_FILESYSTEM (Deprecated) * ESP_FAT_FILESYSTEM (ESP32 only with large partitions) * ESP_LITTLEFS_FILESYSTEM (Default) */ #define FILESYSTEM_FEATURE ESP_LITTLEFS_FILESYSTEM /* Enable date/time on files * Set date/time on files using SNTP or last webui connection */ //#define FILESYSTEM_TIMESTAMP_FEATURE /************************************ * * SD filesystem * * Filesystem on SD card * ************************************/ /* SD card connection * ESP_NO_SD //(default) * ESP_DIRECT_SD //Only your ESP board is connected to SDCard * ESP_SHARED_SD //Printer SD Card is also connected to ESP3D * Does your system has SD card and how it is connected to your ESP3D */ //#define SD_DEVICE_CONNECTION ESP_DIRECT_SD /* SD card library * ESP_SD_NATIVE //esp32 / esp8266 * ESP_SDIO //esp32 only * ESP_SDFAT2 //esp8266 / esp32 */ //#define SD_DEVICE ESP_SDFAT2 /* Sdio bit mode * Mode used by SDIO library 1 bit / 4bits * SD_ONE_BIT_MODE * SD_FOUR_BIT_MODE */ //#define SDIO_BIT_MODE SD_ONE_BIT_MODE /* Enable date/time on files * Set date/time on files using SNTP or last webui connection */ //#define SD_TIMESTAMP_FEATURE /************************************ * * SD card pins * ************************************/ /* SD card detect pin * The pin used to detect SD card */ //#define ESP_SD_DETECT_PIN 4 /* SD card detect pin value * State of SD card detect pin when card is present */ //#define ESP_SD_DETECT_VALUE 0 /* SD shared flag pin * The pin used to enable SD card for ESP board */ //#define ESP_FLAG_SHARED_SD_PIN -1 /* SD shared flag pin value * State of SD card shared pin for ESP board */ //#define ESP_FLAG_SHARED_SD_VALUE 0 /* SD card CS pin * The pin used to select SD card in SPI mode */ //#define ESP_SD_CS_PIN 5 /************************************ * * Remote access * * Remote filesystem access * ************************************/ /* Enable global filesystem * Allows to access to all filesystems from same location */ //#define GLOBAL_FILESYSTEM_FEATURE /* WebDav access * Use WebDav to access to your filesystem * FS_ROOT //mount all FS, need GLOBAL_FILESYSTEM_FEATURE * FS_FLASH //mount Flash FS * FS_SD mount SD FS */ //#define WEBDAV_FEATURE FS_ROOT /* FTP access * Use FTP to access to your filesystem (1 connection only) * FS_ROOT //mount all FS, need GLOBAL_FILESYSTEM_FEATURE * FS_FLASH //mount Flash FS * FS_SD //mount SD FS */ //#define FTP_FEATURE FS_ROOT /************************************ * * Reset ESP3D * * Reset ESP3D settings * ************************************/ /* Enable pin reset feature * Use a pin to reset ESP3D settings */ //#define PIN_RESET_FEATURE /* Reset pin * The pin used to reset ESP3D setting if set to low for more than 1 second at start */ #define ESP3D_RESET_PIN 0/************************************ * * Update ESP3D * * Update ESP3D firmware * ************************************/ /* Enable OTA * Over The Air Update (OTA) */ //#define OTA_FEATURE /* Enable Web Update * Update firmware using WebUI, need 4MB of flash */ #define WEB_UPDATE_FEATURE /* Enable SD card Update * Update firmware and settings using file on SDCard */ //#define SD_UPDATE_FEATURE /************************************ * * Display settings * * Rendering screens * ************************************/ /* Printer screen * If your printer has a display */ #define PRINTER_HAS_DISPLAY /* ESP3D screen * Screen connected to ESP board * OLED I2C SSD1306 128X64 * OLED_I2C_SSDSH1106_132X64 * TFT_SPI_ST7789_240X240 * TFT_SPI_ST7789_135X240 */ //#define DISPLAY_DEVICE OLED_I2C_SSD1306_128X64 /* Flip screen * Flip/rotate screen */ //#define DISPLAY_FLIP_VERTICALY /* Display i2C address * Wire address of display */ //#define DISPLAY_I2C_ADDR 0x3c /* Display reset pin * The pin used to reset the screen (optional) */ //#define DISPLAY_I2C_PIN_RST 22 /* TFT led pin * The pin used for the backlight */ //#define DISPLAY_LED_PIN -1 /************************************ * * Audio settings * * Buzzer feature * ************************************/ /* Enable buzzer * Your esp board has a passive buzzer */ //#define BUZZER_DEVICE /* Buzzer pin * The pin used for the passive buzzer */ //#define ESP3D_BUZZER_PIN 33 /************************************ * * Sensor settings * * Sensor feature * ************************************/ /* Sensor pin * The pin used for the sensor */ //#define ESP3D_SENSOR_PIN 34 /* Sensor Unit * Unit of the sensor result */ //#define SENSOR__UNIT \"C\" /************************************ * * Camera settings * * Connected camera * ************************************/ /* Camera type * CAMERA_MODEL_CUSTOM //Edit the pins in include/pins.h * CAMERA_MODEL_ESP_EYE * CAMERA_MODEL_M5STACK_PSRAM * CAMERA_MODEL_M5STACK_V2_PSRAM * CAMERA_MODEL_M5STACK_WIDE * CAMERA_MODEL_AI_THINKER //ESP32-CAM * CAMERA_MODEL_WROVER_KIT * CAMERA_MODEL_ESP32_CAM_BOARD * CAMERA_MODEL_ESP32S2_CAM_BOARD * CAMERA_MODEL_ESP32S3_CAM_LCD * CAMERA_MODEL_ESP32S3_EYE * Camera connected to ESP board, only ones with PSRAM are supported */ //#define CAMERA_DEVICE CAMERA_MODEL_AI_THINKER /* Flip vertically * Flip camera vertically */ //#define CAMERA_DEVICE_FLIP_VERTICALY /************************************ * * Levels of security * * How commands are allowed to be sent to ESP3D * ************************************/ /* Enable serial commands * Allow commands to be sent to ESP3D via serial port */ #define SERIAL_COMMAND_FEATURE /* Allow remote access by enabling cross origin access * check https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS * this should be enabled only in specific cases * like show the camera in web page different than device web server * /if you do not know what is that then better left it commented * Allow to show the camera in web page different than device web server */ //#define ESP_ACCESS_CONTROL_ALLOW_ORIGIN /* Enable authentication * Force usage of authentication for commands */ //#define AUTHENTICATION_FEATURE /************************************ * * Additional features * * Extra settings * ************************************/ /* Enable direct control pin * Controls pins using [ESP201] */ #define DIRECT_PIN_FEATURE/************************************ * * Scripting settings * * Scripting on ESP3D * ************************************/ /* Enable Autostart * Commands to run on startup * Separate commands with ';' or use file */ //#define ESP_AUTOSTART_SCRIPT \"M117 Mounting SD;M21\" //#define ESP_AUTOSTART_SCRIPT_FILE \"autoscript.gco\" /* Enable lua interpreter * Allow to use lua interpreter on ESP3D */ //#define ESP_LUA_INTERPRETER_FEATURE /* Gcode Host Feature * This feature allows to process Gcode files like macros. */ #define GCODE_HOST_FEATUREConfigure Flash settings For ESP8266 with 4MB of flash Board: Generic ESP8266 Module Upload Speed: 115200 CPU frequency: 160 MHz Flash Size: 4M (2M SPIFFS) Flash Mode: DIO Flash Frequency: 40Mhz Reset Method: CK Debug Port: Disabled Debug Level: None For ESP8266 with 1MB of flash (this one may not support Web Update due to limited flash size) Board: Generic ESP8266 Module Upload Speed: 115200 CPU frequency: 160 MHz Flash Size: 1M (128K SPIFFS) Flash Mode: DIO Flash Frequency: 40Mhz Reset Method: CK Debug Port: Disabled Debug Level: None For ESP32 with 4MB of flash Board: ESP32 Dev Module Upload Speed: 115200 CPU frequency: 240 MHz Flash Frequency: 80Mhz Flash Mode: QIO Flash Size: 4MB Partition Scheme: Default 4MB with SPIFFS Core Debug Level: None PSRAM: Disabled For ESP32 with 4MB of flash and Camera Board: ESP32 Dev Module Upload Speed: 115200 CPU frequency: 240 MHz Flash Frequency: 80Mhz Flash Mode: QIO Flash Size: 4MB Partition Scheme: Default 4MB with SPIFFS Core Debug Level: None PSRAM: Enabled Connect your board Compile and flash your module Select the port you device is connected to and select Upload from sketch menu to compile and flash.",
    "description": "Prepare the development environment Please download ide from https://www.arduino.cc/en/software Warning\rPlease use the Legacy IDE (1.8.X) or the latest Arduino IDE 2.X\nInstall the esp core according your target:\nESP8266\nWarning\rPlease use the version 3.1.1.\nESP32\nWarning\rPlease use the version 2.0.8.\nCopy the content of the libraries directory and extra libraries directory (according your target ESP8266 or ESP32 ) to your arduino library directory\nWarning\rDo not try any version different than the ones provided, they may not work properly.",
    "tags": [],
    "title": "Arduino IDE",
    "uri": "/esp3d/v3.x/installation/arduino/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation",
    "content": "Definition The authentication is an additional security layer to protect the ESP3D-TFT web interface and ESP3D-TFT commands from unauthorized access. It is based on a username and a password. The authentication is optional and can be enabled/disabled in the ESP3D-TFT configuration. There are 3 login levels for authentication:\nguest, which is does not need any authentication user, which has limited access to ESP3D-TFT features admin, which has full access to ESP3D-TFT features Currently the login cannot be customized and so is limited to user and admin levels. The guest level is always available and cannot be disabled.\nConfiguration In configuration.h just uncomment the following line to enable the authentication:\n#define AUTHENTICATION_FEATUREDefault password authentication for admin is admin and for ‘user’ is user. You can change them using WebInterface or [ESP550] and [ESP555] commands.\nUsage Web Interface When user authentication is enabled, the web interface will ask for a username and a password. If the authentication is successful, the user will be redirected to the web interface. If the authentication fails, the user will be redirected to the login page.\nThe web interface allows also inline authentication. This means that you can pass the username and password in the URL. This is useful if you want to use some command line to access the web interface like curl or wget. The URL format is the following:\nhttp://user:password@\u003cip_address\u003eOn the web interface an authenticated session will stay open until the browser is closed. So if you close the browser and reopen it, you will be asked for authentication again. This session can also have a timeout. The default timeout is 3 minutes of inactivity. This timeout can be changed in the ESP3D-TFT configuration web interface or using [ESP510] command.\nESPXXX Command When user authentication is enabled, the ESPXXX commands will ask for a password. If the authentication is successful, the command will be executed. If the authentication fails, the command will be rejected.\nThe session for ESPXXX commands is a sticky session. This means that once authenticated, the session will stay authenticated until the ESP3D-TFT is restarted or session is closed (e.g: Telnet / WebSocket).\nLimitations The current authentication miss a lot of features, like:\nuser management https support password encryption password recovery password expiration in time password lockout if too many failed attempts So you must not consider authentication as fullproof for security. It is just an additional layer of security.\nBecause ESPXXX commands only rely on password, do not use same password for user and admin users. If you do so, you will not be able to use ESPXXX commands with user level, everything will be considered as admin when authenticated.\nThe password are never been displayed in clear text, but they are stored in the ESP3D-TFT configuration in clear text. So if you want to change the password, you must use the WebInterface or ESPXXX commands. In web interface the passwords are replaced by ******* so any modification must be complete not partial.\nAll passwords and sensitive informations are sent using plain text. So if you want to use ESP3D-TFT in a public network or outside of your local network (which is not recommended), you must use a VPN.\nScope Here the scope of right for each authentication level:\nFeature not authenticated guest user admin Web Interface No No Yes Yes Telnet No No Yes Yes WebSocket No No Yes Yes WebDav No No Yes Yes Bluetooth No No No No Upload No No Yes Yes Update No No No Yes [ESP0] Yes Yes Yes Yes [ESP100] No No Get Get/Set [ESP101] No No No Set [ESP102] No No Get Get/Set [ESP103] No No Get Get/Set [ESP104] No No Get Get/Set [ESP105] No No Get Get/Set [ESP106] No No No Set [ESP107] No No Get Get/Set [ESP108] No No Get Get/Set [ESP110] No No Get Get/Set [ESP111] No No Get Get [ESP112] No No Get Get/Set [ESP114] No No Get Get/Set [ESP115] No No Get Get/Set [ESP120] No No Get Get/Set [ESP121] No No Get Get/Set [ESP130] No No Get Get/Set [ESP131] No No Get Get/Set [ESP140] No No Get Get/Set [ESP160] No No Get Get/Set [ESP170] No No Get/Set Get/Set [ESP171] No No Get Get [ESP200] No No Get/Set Get/Set [ESP202] No No Get Get/Set [ESP214] No No Set Set [ESP216] No No Get Get [ESP400] No No Get Get [ESP401] No No No Set [ESP402] No No Get Get/Set [ESP410] No No Get Get [ESP420] No No Get Get [ESP444] No No Set(only RESTART) Set [ESP450] No No Get Get [ESP460] No No Get Get/Set [ESP500] Get/Set Get/Set Get/Set Get/Set [ESP510] No No Get Get/Set [ESP550] No No No Get/Set [ESP555] No No Get/Set Get/Set [ESP600] No No Set Set [ESP610] No No Get Get/Set [ESP700] No No Set Set [ESP701] No No Get/Set Get/Set [ESP702] No No Get Get/Set [ESP710] No No No Set [ESP720] No No Get Get [ESP730] No No Get/Set Get/Set [ESP740] No No Get Get [ESP750] No No Get/Set Get/Set [ESP780] No No Get Get [ESP790] No No Get/Set Get/Set [ESP800] No No Get/Set Get/Set [ESP900] No No Get/Set Get/Set [ESP901] No No Get Get/Set [ESP902] No No Get Get/Set [ESP950] No No Get/Set API Description Global Each authenticated session have unique session id, that will be stored on ESP3D-TFT with additionnal informations:\nsession id (25 characters) session level (Guest / Admin / User) client_id (serial / http / telnet / WebSocket) session last activity (timestamp) client IP (http) Client socket ID (telnet / WebSocket) Http When authentication is enabled, the http server will check if the session is authenticated. If not, it will ask for authentication. If the session is authenticated, it will check if the session is still valid. If not, it will ask for authentication again. If the session is still valid, it will process the request. the Session ID is stored in the cookie ESP3D_SESSIONID.",
    "description": "What is authentication in ESP3D-TFT?",
    "tags": [],
    "title": "Authentication",
    "uri": "/esp3d-tft/v1.x/documentation/authentication/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation",
    "content": "Definition The authentication is an additional security layer to protect the ESP3D web interface and ESP3D commands from unauthorized access. It is based on a username and a password. The authentication is optional and can be enabled/disabled in the ESP3D configuration. There are 3 login levels for authentication:\nguest, which is does not need any authentication user, which has limited access to ESP3D features admin, which has full access to ESP3D features Currently the login cannot be customized and so is limited to user and admin levels. The guest level is always available and cannot be disabled.\nConfiguration In configuration.h just uncomment the following line to enable the authentication:\n#define AUTHENTICATION_FEATUREDefault password authentication for admin is admin and for ‘user’ is user. You can change them using WebInterface or [ESP550] and [ESP555] commands.\nUsage Web Interface When user authentication is enabled, the web interface will ask for a username and a password. If the authentication is successful, the user will be redirected to the web interface. If the authentication fails, the user will be redirected to the login page.\nThe web interface allows also inline authentication. This means that you can pass the username and password in the URL. This is useful if you want to use some command line to access the web interface like curl or wget. The URL format is the following:\nhttp://user:password@\u003cip_address\u003eOn the web interface an authenticated session will stay open until the browser is closed. So if you close the browser and reopen it, you will be asked for authentication again. This session can also have a timeout. The default timeout is 3 minutes of inactivity. This timeout can be changed in the ESP3D configuration web interface or using [ESP510] command.\nESPXXX Command When user authentication is enabled, the ESPXXX commands will ask for a password. If the authentication is successful, the command will be executed. If the authentication fails, the command will be rejected.\nThe session for ESPXXX commands is a sticky session. This means that once authenticated, the session will stay authenticated until the ESP3D is restarted or session is closed (e.g: Telnet / WebSocket).\nLimitations The current authentication miss a lot of features, like:\nuser management https support password encryption password recovery password expiration in time password lockout if too many failed attempts So you must not consider authentication as fullproof for security. It is just an additional layer of security.\nBecause ESPXXX commands only rely on password, do not use same password for user and admin users. If you do so, you will not be able to use ESPXXX commands with user level, everything will be considered as admin when authenticated.\nThe password are never been displayed in clear text, but they are stored in the ESP3D configuration in clear text. So if you want to change the password, you must use the WebInterface or ESPXXX commands. In web interface the passwords are replaced by ******* so any modification must be complete not partial.\nAll passwords and sensitive informations are sent using plain text. So if you want to use ESP3D in a public network or outside of your local network (which is not recommended), you must use a VPN.\nScope Here the scope of right for each authentication level:\nFeature not authenticated guest user admin Web Interface No No Yes Yes Telnet No No Yes Yes WebSocket No No Yes Yes WebDav No No Yes Yes Bluetooth No No Yes Yes Upload No No Yes Yes Update No No No Yes [ESP0] Yes Yes Yes Yes [ESP100] No No Get Get/Set [ESP101] No No No Set [ESP102] No No Get Get/Set [ESP103] No No Get Get/Set [ESP104] No No Get Get/Set [ESP105] No No Get Get/Set [ESP106] No No No Set [ESP107] No No Get Get/Set [ESP108] No No Get Get/Set [ESP110] No No Get Get/Set [ESP111] No No Get Get [ESP112] No No Get Get/Set [ESP114] No No Get Get/Set [ESP115] No No Get Get/Set [ESP120] No No Get Get/Set [ESP121] No No Get Get/Set [ESP130] No No Get Get/Set [ESP131] No No Get Get/Set [ESP140] No No Get Get/Set [ESP150] No No Get Get/Set [ESP160] No No Get Get/Set [ESP161] No No Get Get/Set [ESP170] No No Get/Set Get/Set [ESP171] No No Get Get [ESP180] No No Get Get/Set [ESP181] No No Get Get/Set [ESP190] No No Get Get/Set [ESP191] No No Get Get/Set [ESP200] No No Get/Set Get/Set [ESP201] No No Get/Set Get/Set [ESP202] No No Get Get/Set [ESP210] No No Get Get/Set [ESP212] No No Set Set [ESP214] No No Set Set [ESP215] No No No Set [ESP220] No No Get Get [ESP250] No No Set Set [ESP290] No No Set Set [ESP400] No No Get Get [ESP401] No No No Set [ESP402] No No Get Get/Set [ESP410] No No Get Get [ESP420] No No Get Get [ESP444] No No Set(only RESTART) Set [ESP450] No No Get Get [ESP500] Get/Set Get/Set Get/Set Get/Set [ESP510] No No Get Get/Set [ESP550] No No No Get/Set [ESP555] No No Get/Set Get/Set [ESP600] No No Set Set [ESP610] No No Get Get/Set [ESP620] No No Set Set [ESP700] No No Set Set [ESP701] No No Get/Set Get/Set [ESP710] No No No Set [ESP715] No No No Set [ESP720] No No Get Get [ESP730] No No Get/Set Get/Set [ESP740] No No Get Get [ESP750] No No Get/Set Get/Set [ESP780] No No Get Get [ESP790] No No Get/Set Get/Set [ESP800] No No Get/Set Get/Set [ESP900] No No Get/Set Get/Set [ESP901] No No Get Get/Set [ESP910] No No Get/Set Get/Set [ESP930] No No Get Get/Set [ESP931] No No Get Get/Set [ESP999] No No No Set API Description Global Each authenticated session have unique session id, that will be stored on ESP3D with additionnal informations:\nsession id (25 characters) session level (Guest / Admin / User) client_id (serial / http / telnet / WebSocket) session last activity (timestamp) client IP (http) Client socket ID (telnet / WebSocket) Http When authentication is enabled, the http server will check if the session is authenticated. If not, it will ask for authentication. If the session is authenticated, it will check if the session is still valid. If not, it will ask for authentication again. If the session is still valid, it will process the request. the Session ID is stored in the cookie ESP3D_SESSIONID.",
    "description": "What is authentication in ESP3D?",
    "tags": [],
    "title": "Authentication",
    "uri": "/esp3d/v3.x/documentation/authentication/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation",
    "content": "Definition The authentication is an additional security layer to protect the ESP3D web interface and ESP3D commands from unauthorized access. It is based on a username and a password. The authentication is optional and can be enabled/disabled in the ESP3D configuration. There are 3 login levels for authentication:\nguest, which is does not need any authentication user, which has limited access to ESP3D features admin, which has full access to ESP3D features Currently the login cannot be customized and so is limited to user and admin levels. The guest level is always available and cannot be disabled.\nConfiguration In configuration.h just uncomment the following line to enable the authentication:\n#define AUTHENTICATION_FEATUREDefault password authentication for admin is admin and for ‘user’ is user. You can change them using WebInterface or [ESP550] and [ESP555] commands.\nUsage Web Interface When user authentication is enabled, the web interface will ask for a username and a password. If the authentication is successful, the user will be redirected to the web interface. If the authentication fails, the user will be redirected to the login page.\nThe web interface allows also inline authentication. This means that you can pass the username and password in the URL. This is useful if you want to use some command line to access the web interface like curl or wget. The URL format is the following:\nhttp://user:password@\u003cip_address\u003eOn the web interface an authenticated session will stay open until the browser is closed. So if you close the browser and reopen it, you will be asked for authentication again. This session can also have a timeout. The default timeout is 3 minutes of inactivity. This timeout can be changed in the ESP3D configuration web interface or using [ESP510] command.\nESPXXX Command When user authentication is enabled, the ESPXXX commands will ask for a password. If the authentication is successful, the command will be executed. If the authentication fails, the command will be rejected.\nThe session for ESPXXX commands is a sticky session. This means that once authenticated, the session will stay authenticated until the ESP3D is restarted or session is closed (e.g: Telnet / WebSocket).\nLimitations The current authentication miss a lot of features, like:\nuser management https support password encryption password recovery password expiration in time password lockout if too many failed attempts So you must not consider authentication as fullproof for security. It is just an additional layer of security.\nBecause ESPXXX commands only rely on password, do not use same password for user and admin users. If you do so, you will not be able to use ESPXXX commands with user level, everything will be considered as admin when authenticated.\nThe password are never been displayed in clear text, but they are stored in the ESP3D configuration in clear text. So if you want to change the password, you must use the WebInterface or ESPXXX commands. In web interface the passwords are replaced by ******* so any modification must be complete not partial.\nAll passwords and sensitive informations are sent using plain text. So if you want to use ESP3D in a public network or outside of your local network (which is not recommended), you must use a VPN.\nScope Here the scope of right for each authentication level:\nFeature not authenticated guest user admin Web Interface No No Yes Yes Telnet No No Yes Yes WebSocket No No Yes Yes WebDav No No Yes Yes Bluetooth No No Yes Yes Upload No No Yes Yes Update No No No Yes [ESP0] Yes Yes Yes Yes [ESP100] No No Get Get/Set [ESP101] No No No Set [ESP102] No No Get Get/Set [ESP103] No No Get Get/Set [ESP104] No No Get Get/Set [ESP105] No No Get Get/Set [ESP106] No No No Set [ESP107] No No Get Get/Set [ESP108] No No Get Get/Set [ESP110] No No Get Get/Set [ESP111] No No Get Get [ESP112] No No Get Get/Set [ESP114] No No Get Get/Set [ESP115] No No Get Get/Set [ESP120] No No Get Get/Set [ESP121] No No Get Get/Set [ESP130] No No Get Get/Set [ESP131] No No Get Get/Set [ESP140] No No Get Get/Set [ESP150] No No Get Get/Set [ESP160] No No Get Get/Set [ESP161] No No Get Get/Set [ESP170] No No Get/Set Get/Set [ESP171] No No Get Get [ESP180] No No Get Get/Set [ESP181] No No Get Get/Set [ESP190] No No Get Get/Set [ESP191] No No Get Get/Set [ESP200] No No Get/Set Get/Set [ESP201] No No Get/Set Get/Set [ESP202] No No Get Get/Set [ESP210] No No Get Get/Set [ESP214] No No Set Set [ESP215] No No No Set [ESP220] No No Get Get [ESP250] No No Set Set [ESP290] No No Set Set [ESP400] No No Get Get [ESP401] No No No Set [ESP402] No No Get Get/Set [ESP410] No No Get Get [ESP420] No No Get Get [ESP444] No No Set(only RESTART) Set [ESP450] No No Get Get [ESP500] Get/Set Get/Set Get/Set Get/Set [ESP510] No No Get Get/Set [ESP550] No No No Get/Set [ESP555] No No Get/Set Get/Set [ESP600] No No Set Set [ESP610] No No Get Get/Set [ESP620] No No Set Set [ESP700] No No Set Set [ESP701] No No Get/Set Get/Set [ESP710] No No No Set [ESP715] No No No Set [ESP720] No No Get Get [ESP730] No No Get/Set Get/Set [ESP740] No No Get Get [ESP750] No No Get/Set Get/Set [ESP780] No No Get Get [ESP790] No No Get/Set Get/Set [ESP800] No No Get/Set Get/Set [ESP900] No No Get/Set Get/Set [ESP901] No No Get Get/Set [ESP910] No No Get/Set Get/Set [ESP930] No No Get Get/Set [ESP931] No No Get Get/Set [ESP999] No No No Set API Description Global Each authenticated session have unique session id, that will be stored on ESP3D with additionnal informations:\nsession id (25 characters) session level (Guest / Admin / User) client_id (serial / http / telnet / WebSocket) session last activity (timestamp) client IP (http) Client socket ID (telnet / WebSocket) Http When authentication is enabled, the http server will check if the session is authenticated. If not, it will ask for authentication. If the session is authenticated, it will check if the session is still valid. If not, it will ask for authentication again. If the session is still valid, it will process the request. the Session ID is stored in the cookie ESP3D_SESSIONID.",
    "description": "What is authentication in ESP3D?",
    "tags": [],
    "title": "Authentication",
    "uri": "/esp3dlib/v3.x/documentation/authentication/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 2.1.X \u003e Documentation",
    "content": "You can display external IP camera stream enabling the camera page, and put ip address in input control. The address depend on your camera, same for credentials\nThe screenshot is just an example\nIf your camera cannot be opened in web browser, then it is not possible to capture it in WebUI.\nIf you use espcam32 and want to use esp3d also on it, you need to use ESP3D V3 with ESP3D-WEBUI V3",
    "description": "Camera configuration",
    "tags": [],
    "title": "Camera support",
    "uri": "/esp3d-webui/v2.x/documentation/camera/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e API",
    "content": "Flow %%{init:{\"theme\":\"default\"}}%%\rgraph LR;\rA[Serial]\rB[USB]\rC[GCode Parser]\rD[Stream]\rE[Command]\rF[System]\rG[Telnet]\rH[WebUI]\rI[WebUI WebSocket]\rK[WebSocket]\rM[SD Card]\rD--\u003e|S|B\rD--\u003e|S|A\rH--\u003e|S|D\rG--\u003e|S|D\rK--\u003e|S|D\rM--\u003e|S|D\rE--\u003e|R|I\rF--\u003e|R|I\rA--\u003e|R|C\rB--\u003e|R|C\rE--\u003e|R|K\rE--\u003e|R|G\rE--\u003e|R|K\rE--\u003e|R|G\rF--\u003e|R|K\rF--\u003e|R|G\rF--\u003e|R|K\rF--\u003e|R|G\rC--\u003e|R|D\rC--\u003e|R|G\rC--\u003e|R|I\rC--\u003e|R|K",
    "description": "Clients description, messages and parameters",
    "tags": [],
    "title": "Clients",
    "uri": "/esp3d-tft/v1.x/documentation/api/clients/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation",
    "content": "Compilation Steps Setup development tools 1 - Install current nodejs LTS (currently using v16.14.2)\nnode -v\rv20.8.0\rnpm -v\r10.2.02 - Download all necessary packages in ESP3D-WEBUI directory (repository root)\nnpm installStart dev server in ESP3D-WEBUI directory (repository root)\nnpm run dev-\u003csystem\u003e-\u003cfirmware\u003e where \u003csystem\u003e is cnc (CNC system, laser, spindle..) , printer (3D printer), sand (Sand Table) where \u003cfirmware\u003e is : grbl, grblhal for cnc marlin, marlin-embedded (esp3dlib), repetier, smoothieware for printer grbl for sand will open http://localhost:8088 which display the webUI using a local test server\nBuild index.html.gz to /dist folder in ESP3D-WEBUI directory (repository root)\nnpm run buildallWill generate production version for each target and firmware in dist directory\nto build specific index.html.gz\nnpm run \u003csystem\u003e-\u003cfirmware\u003e where \u003csystem\u003e is cnc (CNC system, laser, spindle..) , printer (3D printer), sand (Sand Table) where \u003cfirmware\u003e is : grbl, grblhal for cnc marlin, marlin-embedded (esp3dlib), repetier, smoothieware for printer grbl for sand Code Formating How to do code formating? .js/.css/.scss/.json files of embedded directory The code must be formatted using the prettier tool. The configuration style is .prettierrc present in the root directory. The configuration file is as follows:\n{ \"printWidth\": 80, \"tabWidth\": 4, \"useTabs\": false, \"semi\": false, \"singleQuote\": false, \"trailingComma\": \"es5\", \"bracketSpacing\": true, \"bracketSameLine\": false, \"arrowParens\": \"always\", \"requirePragma\": false, \"insertPragma\": false, \"proseWrap\": \"preserve\", \"overrides\": [ { \"files\": \"*.js\", \"options\": { \"parser\": \"babel\" } }, {\"files\": \"*.css\", \"options\": { \"parser\": \"css\" } }, {\"files\": \"*.scss\", \"options\": { \"parser\": \"scss\" } }, {\"files\": \"*.json\", \"options\": { \"printWidth\": 120, } } ] }The tool can be added as extension in vscode, and installed using :\nnpx install -G prettierPrettier will format one active file at once per request or during saving process according your vscode settings.\nA python script is also available in the repository, in directory tools: format_sources.py, this script can be used to format all files of the directories config and src, and all subdirectories at once.\nWhen to do code formating? Before any pull request or before submit any code, the code must be formatted. The CI will check the code formatting, and will eventually fail if the code is not formatted correctly.",
    "description": "Compilation Guide",
    "tags": [],
    "title": "Compilation Guide",
    "uri": "/esp3d-webui/v3.x/documentation/compilation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, ceramic antenna/ipex connector, 38 pins ",
    "description": "Dev Kit C V4",
    "tags": [],
    "title": "Dev Kit C V4",
    "uri": "/esp3d/v2.x/hardware/esp32/devkit_c_v4/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, ceramic antenna/ipex connector, 38 pins ",
    "description": "Dev Kit C V4",
    "tags": [],
    "title": "Dev Kit C V4",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/devkit_c_v4/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 in ESP01 format (8 pins) with 1MB flash memory, ceramic antenna Note\rBecause flash is only 1MB, OTA/Web Update are not possible\nBe aware\rThis ESP01 cannot be used on Bigtreetech boards as it is, a small rework is necessary to bridge VCC pin with CH_PD pin Pinout 1 2 3 4 GND IO02 IO0 RXD TXD CH_PD RESET VCC ",
    "description": "ESP01 1M Generic Black",
    "tags": [],
    "title": "ESP01 1M Generic",
    "uri": "/esp3d/v2.x/hardware/esp8266/esp01-1m-generic/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 in ESP01 format (8 pins) with 1MB flash memory, ceramic antenna Note\rBecause flash is only 1MB, OTA/Web Update are not possible\nBe aware\rThis ESP01 cannot be used on Bigtreetech boards as it is, a small rework is necessary to bridge VCC pin with CH_PD pin Pinout 1 2 3 4 GND IO02 IO0 RXD TXD CH_PD RESET VCC ",
    "description": "ESP01 1M Generic Black",
    "tags": [],
    "title": "ESP01 1M Generic",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/esp01-1m-generic/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X \u003e Hardware",
    "content": "From Simon Jouet, a generic ESP32 controller with 4MB flash memory, no IO expander.\ngithub Specs ESP32 with 4MB flash memory, sd card reader ",
    "description": "ESP32 R1 controller from Simon Jouet",
    "tags": [],
    "title": "ESP32 generic controller",
    "uri": "/esp3dlib/v1.x/hardware/esp32-controller/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-S2 boards",
    "content": "Documentation\nSpecs ESP32-S2 (single-core) with 4MB flash memory, ceramic antenna/ipex connector , rbg led ",
    "description": "ESP32-S2-Saola-1",
    "tags": [],
    "title": "ESP32-S2-Saola-1",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-s2/saola-1/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware",
    "content": "\rESP01 512KESP01 512K Blue\nESP01 1M GenericESP01 1M Generic Black\nESP01S 1MESP01S 1M\nESP07ESP07\nESP12 e/fESP12 e/f\nBigtreetech CloudBigtreetech Cloud FYSETC-SD-WIFIFYSETC-SD-WIFI\nBigtreetech WiFi moduleBigtreetech WiFi module\nDiymoreDiymore\nWemos D1 miniWemos D1 mini\nWemos D1 mini ProWemos D1 mini Pro\nMKS WiFi Module V1.0 (8 pins)MKS WiFi Module V1.0 (8 pins)\nMKS WiFi Module V1.1 (16 pins)MKS WiFi Module V1.1 (16 pins)\nNodemcu V0.8Nodemcu V0.8\nNodemcu V1.0Nodemcu V1.0\nSOnOffSOnOff",
    "description": " ",
    "tags": [],
    "title": "ESP8266 boards",
    "uri": "/esp3d/v2.x/hardware/esp8266/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards",
    "content": "\rESP01 512KESP01 512K Blue\nESP01 1M GenericESP01 1M Generic Black\nESP01S 1MESP01S 1M\nESP07ESP07\nESP12 e/fESP12 e/f\nBigtreetech CloudBigtreetech Cloud FYSETC-SD-WIFIFYSETC-SD-WIFI\nBigtreetech WiFi moduleBigtreetech WiFi module\nDiymoreDiymore\nWemos D1 miniWemos D1 mini\nWemos D1 mini ProWemos D1 mini Pro\nMKS WiFi Module V1.0 (8 pins)MKS WiFi Module V1.0 (8 pins)\nMKS WiFi Module V1.1 (16 pins)MKS WiFi Module V1.1 (16 pins)\nNodemcu V0.8Nodemcu V0.8\nNodemcu V1.0Nodemcu V1.0\nSOnOffSOnOff\nWiFI backpackWiFI backpack\nAzteeg X5 mini WIFIAzteeg X5 mini WIFI",
    "description": " ",
    "tags": [],
    "title": "ESP8266 boards",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X \u003e Hardware",
    "content": "From FYSETC, an ESP32 controller with 16MB flash memory, no IO expander.\ngithub Specs ESP32 with 16MB flash memory, sd card reader ",
    "description": "FYSETC-E4",
    "tags": [],
    "title": "FYSETC-E4",
    "uri": "/esp3dlib/v1.x/hardware/fysetc-e4/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Hardware",
    "content": "From FYSETC, an ESP32 controller with 16MB flash memory, no IO expander.\ngithub Specs ESP32 with 16MB flash memory, sd card reader ",
    "description": "FYSETC-E4",
    "tags": [],
    "title": "FYSETC-E4",
    "uri": "/esp3dlib/v3.x/hardware/fysetc-e4/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X",
    "content": "Download the project Using git Clone repository\ngit clone https://github.com/luc-github/ESP3D-TFT.git ESP3D-TFT Go to the project\ncd ESP3D-TFT Update the project submodules\ngit submodule update --init --recursive Note\rIf you have limited network access and have issue to connect to GitHub, it is recommended to use dev sidecar software.\nUsing release package Not ready yet, please be patient\nSetup your development environment Download and install VSCode\nInstall the espressif vscode extension The espressif extension can be installed using the extension manager.\nPlease follow the official tutorial\nYou can also install ESP-IDF offline .Especially suitable for people with slow download speeds.\nDownload installer. Installing the installer. Install the CMake extension and CMake Tools extension in vscode Cmake can automatically download the components required for ESP3D, such as camera and USB host.\nConfigure the extension Select : View-\u003eCommand palette Type : configure esp Currently ESP3D-TFT use the released version 5.1 of the IDF\nIf you install ESP-IDF offline, you need to select “UseExitSetup”\nThen select the ESP IDF installation path\nOpen ESP3D-TFT project Go to file and select open folder where project is located Configure the CMakeLists.txt Select the target according the hardware\n# ####################################### # Select the targeted hardware # ####################################### # With TFT: OPTION(ESP32S3_HMI43V3 \"TFT TARGET is ESP32S3 HMI 4.3inches\" OFF) OPTION(ESP32_ROTRICS_DEXARM35 \"TFT TARGET is ESP32 Rotrics DexArm 3.5inches\" OFF) OPTION(ESP32S3_ZX3D50CE02S_USRC_4832 \"TFT TARGET is ESP32S3 Panlee ZX3D50CE02S-SRC-4832 3.5inches\" ON) OPTION(ESP32S3_BZM_TFT35_GT911 \"TFT TARGET is ESP32S3 Panlee BZM 3.5inches\" OFF) OPTION(ESP32S3_8048S070C \"TFT TARGET is ESP32S3_8048S070C - 7.0in. 800x480 (Capacitive)\" OFF) OPTION(ESP32S3_8048S050C \"TFT TARGET is ESP32S3_8048S050C - 5.0in. 800x480 (Capacitive)\" OFF) OPTION(ESP32S3_8048S043C \"TFT TARGET is ESP32S3_8048S043C - 4.3in. 800x480 (Capacitive)\" OFF) OPTION(ESP32S3_4827S043C \"TFT TARGET is ESP32S3_4827S043C - 4.3in. 480x272 (Capacitive)\" OFF) OPTION(ESP32_3248S035C \"TFT TARGET is ESP32_3248S035C - 3.5in. 480x320 (Capacitive)\" OFF) OPTION(ESP32_3248S035R \"TFT TARGET is ESP32_3248S035R - 3.5in. 480x320 (Resistive)\" OFF) OPTION(ESP32_2432S028R \"TFT TARGET is ESP32_2432S028R - 2.8in. 320x240 (Resistive)\" OFF) # Without TFT: OPTION(ESP32S3_FREENOVE_1_1 \"HARDWARE TARGET is ESP32S3 Freenove v1.1\" OFF) OPTION(ESP32S3_CUSTOM \"HARDWARE TARGET is ESP32S3 custom board\" OFF) OPTION(ESP32_CUSTOM \"HARDWARE TARGET is ESP32 custom board\" OFF) # ####################################### # Optionally: Select hardware mods applied # ####################################### #only for ESP32S3_8048S070C OR ESP32S3_8048S050C OR ESP32S3_8048S043C OR ESP32S3_4827S043C OR ESP32_3248S035C OPTION(HARDWARE_MOD_GT911_INT \"Hardware Mod: GT911 INT pin\" OFF) #Only for ESP32_3248S035C OR ESP32_3248S035R OR ESP32_2432S028R # 4MB Flash, no PSRAM by default OPTION(HARDWARE_MOD_8MB_FLASH \"Hardware Mod: 8MB Flash Upgrade\" OFF) OPTION(HARDWARE_MOD_16MB_FLASH \"Hardware Mod: 16MB Flash Upgrade\" OFF) OPTION(HARDWARE_MOD_EXT_PSRAM \"Hardware Mod: External PSRAM\" OFF) # ####################################### # Select the targeted firmware # ####################################### OPTION(TARGET_FW_MARLIN \"Marlin firmware\" ON) OPTION(TARGET_FW_REPETIER \"Repetier firmware\" OFF) OPTION(TARGET_FW_SMOOTHIEWARE \"Smoothieware firmware\" OFF) OPTION(TARGET_FW_GRBL \"GRBL firmware\" OFF) # ####################################### # Select the Features # ####################################### OPTION(ESP3D_AUTHENTICATION \"Authentication on all clients\" OFF) OPTION(DISABLE_SERIAL_AUTHENTICATION \"Disable Serial Authentication\" ON) OPTION(TIME_SERVICE \"Time service\" ON) OPTION(SSDP_SERVICE \"SSDP service\" ON) OPTION(MDNS_SERVICE \"MDNS service\" ON) OPTION(WIFI_SERVICE \"WiFi service\" ON) OPTION(BT_SERVICE \"Bluetooth service\" ON) OPTION(WEB_SERVICES \"Web Services http/websocket/webdav\" ON) OPTION(WEBDAV_SERVICES \"WebDav Services\" ON) OPTION(TELNET_SERVICE \"Telnet service\" ON) OPTION(WS_SERVICE \"WebSocket data service\" ON) OPTION(TFT_UI_SERVICE \"TFT UI service\" ON) OPTION(SD_CARD_SERVICE \"SD card service\" ON) OPTION(NOTIFICATIONS_SERVICE \"Notifications service\" ON) OPTION(UPDATE_SERVICE \"Update service\" ON) OPTION(USE_FAT_INSTEAD_OF_LITTLEFS \"Use FAT instead of LittleFS\" OFF) # ####################################### # Do not change anything below this line # ####################################### cmake_minimum_required(VERSION 3.12.4) set(CMAKE_CXX_STANDARD 20) include (cmake/targets.cmake) include($ENV{IDF_PATH}/tools/cmake/project.cmake) include (cmake/features.cmake) project(ESP3D-TFT VERSION 1.0 DESCRIPTION \"ESP3D TFT\")Clean / Compile / Flash Select : View-\u003eCommand palette Type : ESP-IDF: (Clean / Build / Flash..) or\nJust use the bottom menu for all commands Note\rSometime the build button failed and you must delete the build directory manualy",
    "description": "Download the project Using git Clone repository\ngit clone https://github.com/luc-github/ESP3D-TFT.git ESP3D-TFT Go to the project\ncd ESP3D-TFT Update the project submodules\ngit submodule update --init --recursive Note\rIf you have limited network access and have issue to connect to GitHub, it is recommended to use dev sidecar software.\nUsing release package Not ready yet, please be patient\nSetup your development environment Download and install VSCode\nInstall the espressif vscode extension The espressif extension can be installed using the extension manager.",
    "tags": [],
    "title": "Installation",
    "uri": "/esp3d-tft/v1.x/installation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 2.1.X",
    "content": "The Web UI is represented by one file : index.hml.gz The full package with all languages is available here But it may not fit your available size on flash, so you can select a single language package here which is lighter and will fit smallest boards.\nUpload index.html.gz Using embedded uploader If the embedded is not visible you can access to it using: http://your_IP_address?forcefallback=yes anytime\nUsing Web UI You can upload file using Web UI\nFinalize update Refresh the page to http://your_IP to display updated Web interface.\nNote: you can also upload a customized favicon.ico",
    "description": "The Web UI is represented by one file : index.hml.gz The full package with all languages is available here But it may not fit your available size on flash, so you can select a single language package here which is lighter and will fit smallest boards.\nUpload index.html.gz Using embedded uploader If the embedded is not visible you can access to it using: http://your_IP_address?forcefallback=yes anytime\nUsing Web UI You can upload file using Web UI",
    "tags": [],
    "title": "Installation",
    "uri": "/esp3d-webui/v2.x/installation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X",
    "content": "The Web UI is represented by one file : index.hml.gz\nThe index.html.gz according targeted system is available here.\nSelect the file according your system type (CNC/3D Printer/…) and system firmware (GRBL/Repetier…).\nThe default language is english, additionnal language pack can be added later independantly.\nUpload index.html.gz Using embedded uploader If the embedded is not visible you can access to it using: http://your_IP_address?forcefallback=yes anytime\nUsing Web UI You can upload file using Web UI file panel You can also directly update index.html.gz using Web UI update button Finalize update Refresh the page to http://your_IP to display updated Web interface.\nNote: you can also upload a customized favicon.ico",
    "description": "The Web UI is represented by one file : index.hml.gz\nThe index.html.gz according targeted system is available here.\nSelect the file according your system type (CNC/3D Printer/…) and system firmware (GRBL/Repetier…).\nThe default language is english, additionnal language pack can be added later independantly.\nUpload index.html.gz Using embedded uploader If the embedded is not visible you can access to it using: http://your_IP_address?forcefallback=yes anytime\nUsing Web UI You can upload file using Web UI file panel You can also directly update index.",
    "tags": [],
    "title": "Installation",
    "uri": "/esp3d-webui/v3.x/installation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X",
    "content": "Setup your development environment Click on the corresponding image to display how to setup.\nArduino IDE or PlatformIO Tip: The platformIO environment is the easiest to setup, because you do not need to setup the esp core neither the libraries by yourself.\nConnect your board Connection between ESP and printer board needs 4 wires:\nESP Tx needs to connect to Rx on MCU of printer board. ESP Rx needs to connect to Tx on MCU of printer board. You also need to power supply ESP board with with GND and 3V3 or 5V. Connecting ESP board to target board Be aware that ESP MCU is 3.3V on GPIO pin and some target board can be 3.3V and others 5V, so you may not be able to directly connect ESP board to target board.\nDisclaimer : this wiki is for reference - you are responsible of your board supporting or not 5V, we are not responsible for any damage of wrong wiring.\nESP32 and ESP8266 MCU are only supporting 3.3V. Power supply them with 5V will likelly fry them immediatelly. As MCU is supplied at 3.3V, Tx and Rx signals will be at 3.3V even when board is supplied with 5V. Wether Rx pin is supporting 5V is controversial so we will keep on the safe side and only take datahseet as reference. It’s not recommended to have any signal (including Rx) be higher than power supply (3.3V here).\nThere are several points to take care. One should check that\nMCU1 Tx voltage is lower than MCU2 supply voltage Voh_min of Tx is higher than Vih_min of Rx (to check both ways) Vol_max of Tx is lower than Vil_max of Rx (to check both ways) 1 is mandatory and resistor voltage divider bridge or level shiffter is recommended\n2 \u0026 3 are not destructive there is just a slight risk signals are not read correctly. But it will work in most case as the limit values given by datasheets are rarelly met in mild conditions (using near 25°C and low current flowing from Tx to Rx)\nFor the divider bridge a value of R1=1k and R2=2.2k will be fine. You could also use 10k and 22k or anything near a factor 2.\nConnection diagrams for some printers and ESP boards Printer motherboards Anet A8 boards Anycubic i3 mega - Trigorilla 8bit board AZSMZ LCD board AZSMZ-mini board Azteeg X5 mini board BIQU KFB2.0 board Creality CR10 Ender 3 board Creality Ender 4 board Davinci 1.0/2.0 board Davinci 1.0A board MKS boards MKS Smoothieware board RADDS board RAMPS 1.4/Re-ARM board Smoothieboard board SKR Mini E3 board Weedo Tina2 board For printer boards not listed here ESP boards ESP-01 ESP-01 serial wifi module ESP-12E/F ESP 12F serial wifi module ESP32-Cam NodeMCU V2/V3 Sonoff Wemos D1 mini Printer motherboards Anet boards up to v1.5 Step 1 You will also have to unsolder the resistors R52 and R53 – they are zero ohm resistors, and serve no other purpose than connecting the atmega chip directly to the onboard USB to UART converter (the CH340 chip). Do it VERY careful – you don’t want to damage your board. If you don’t feel confident – don’t do it.\nStep 2 Now prepare the printer’s motherboard. It requires a simple modification, that does not interfere with it’s operation afterwards – just solder 3 pin x 2 row male header on J8, and add 2 jumpers (or jumper wires) as shown on the picture:\nStep 3 Connect the ESP to J3 repsecting pinout\nESP J3 Tx Rx Rx Tx GND GND VCC 3.3V CH_PD 3.3V For more Info check lokster | space\nFor connecting version 1.7 Anet boards Unlike older boards this board does not require you to remove any resistors.\nYou will have to solder two wires from number 9 and number 10 its recommender to connect these to pin 1 and 2 of J3 connector.\nAnycubic i3 mega - Trigorilla 8bit board To connect the ESP12e to the UART0. (Credits:197-murdock).\n(Green = RX, Blue = TX)\n5V (buck to 3.3v if directly connect to ESP - most development ESP boards already have this voltage limited built-in - but check!) and GND can be taken from the AUX3 exposed connector.\nUART0 is normally used by USB port so don’t use both together - so this hack piggybacks on that same port at UART level.\nAZSMZ LCD board AZSMZ-mini board If you don’t have the soldering skills to grab the connectors from the unpopulated ethernet connection, you can also get 3.3v and GND from the ISP header (bottom left on the diagram above).\nAzteeg X5 mini board BIQU KFB2.0 board all in one Ramps1.4/Mega2560 R3 controller based\nCreality CR10 Ender 3 board For the Sanguino based CR-10 and Ender printers you will need to solder to any of the via circled (can also be done in the backside of board), or to the legs of the Arduino or ftdi. Connect TX from the board to RX of Wemos D1 mini and RX from board to TX of Wemos D1 mini. 5v and GND are located in the six pin header next to the LCD connector.\nSince soldering might be difficult because the solder points are so close to each other, another option is to scrape off the insulation from the traces on the backside and solder there. Be extra careful not to scrape the surrounding ground plane. You need suitable fine scraping tools for this. The picture below shows an Ender-2 PCB.\nCreality Ender 4 board You will need to solder to small circle, or to the legs of the ATmega2560 (RXD0 pin 2, TXD0 pin 3)\nDavinci 1.0/2.0 board Davinci 1.0A board Alternate Module placement for increased WiFi range (outside metal chassis, antenna has vertical polarization)\nMKS boards To connect the ESP3D to the MKS GEN v1.2 (but the v1.3 and above 1.4 is the most used today).\nAn ESP12E with the standard schematics, the two resistor connected to the RX pin are substituted by a 1N4148 diode, like in the Adafruit Huzzah board.\nESP12E is connected to the AUX1\nESP12E RX is connected to the pin NEAR GND of the upper row (Marked TXD on pinout.)\nESP12E TX is connected to the adiacent pin at the end of the upper row (Marked RXD on pinout.)\nMKS Smoothieware board RADDS board RAMPS 1.4/Re-ARM board Ramps 1.4 can be used on Arduino Mega (repetier/marlin) and Re-ARM for ramps boards (smoothieware/marlin)\nAlternative pins if use Re-ARM (J4/UART port)\nSmoothieboard board SKR Mini E3 board This board is from Bigtreetech and went through various hardware revisions; all of them still feature a TFT pin header which is where you can tap the TX and RX needed. The wiring below is made with a 1.2 board, but the same applies for the other revisions as well; if you need the exact schematic for your mainboard version, you can check Bigtreetech’s github repository.\nYou literally cannot miss it because the TFT connector is labeled on the board; you can use dupont connectors for the wiring job, no soldering skills needed as long as your ESP comes with pre soldered headers. Just a heads up: the TFT connector provides 5V DC, so be sure to provide them on the correct ESP pin and, most importantly, if your ESP can work with 5 volts as input. You should also pay attention on the board orientation in the schematic, although I oriented it the same way as the actual picture on the left so it’s easier for you.\nWeedo Tina2 board This printer is also brand labelled as Monoprice MP cadet 3D printer\nIn marlin this connection is serial port 3.\nNote the Mega2560 is 5V powered and ESP is 3V3 powered.\nFor printer boards not listed here Vast majority of printers have an USB port that is converted to UART before going to MCU. Many printers also have additional (unused) UART port you can use. When possible, always use the additional port for connecting ESP to printer board. When no additional UART port is available you might use the Tx and Rx lines between USB/UART converter and MCU but it’s recommended to cut (in a reversible way) the line to USB/UART converter to avoid conflicts.\nIf the board is ATmega based the simplest way to find a usable UART port for the ESP is to open ATmega datasheet.\nESP boards ESP-01 Use GPIO2 to ground to reset all settings in hard way - 2-6 sec after boot / not before!! Set GPIO2 to ground before boot change boot mode and go to special boot that do not reach FW. Currently boot take 10 sec - giving 8 seconds to connect GPIO2 to GND and do an hard recovery for settings Use GPIO0 to ground to be in update mode ESP-01 serial wifi module more info about the Breakout PCB: keyestudio\nESP-12E/F ESP need 3.3v, it is not 5v tolerant, if printer board use more than 3.3V like 5V on ramps.\nyou can also use Logic LevelConverter Bi-Directional\nIn order to flash some ESP12E/F boards via their UART interface, the following pins need to be connected:\nVCC to GPIO2 GND to GPIO0 This has been tested with ESP-12-E boards labeled “ESP8266 For ESP3D FYSETC.COM”\nESP 12F serial wifi module ESP-12F based serial wifi module (eg from aliexpress ) contains built in 2-way levelshifter/bi-directional logic level converter. So it can be powered via 5V uart from the target’ motherboard.\nWe need to manualy ground the IO0 while powering up to start in flash mode while powering up (there is no switch for that, neither for reset) Use FTDI adapter as usb2serial Need to see in console/serial monitor boot mode is (1,7). baudrate: 74880 rst cause:2, boot mode:(3,7) Then flash like other esp based board for esp3d ESP32-Cam Note: 5V is power supply input and 3V3 is output from regulator. UART Tx and RX signals will be 3.3V\nNodeMCU V2/V3 Sonoff Relay is connected by GPIO12, it can be handled using ESP201 command:\n*Get/Set pin value\r[ESP201]P\u003cpin\u003e V\u003cvalue\u003e [PULLUP=YES RAW=YES]\rif no V\u003cvalue\u003e get P\u003cpin\u003e value\rif V\u003cvalue\u003e 0/1 set INPUT_PULLUP value, but for GPIO16 INPUT_PULLDOWN_16\rGPIO1 and GPIO3 cannot be used as they are used for serial\rif PULLUP=YES set input pull up, if not set input\rif RAW=YES do not set pinmode just read value\rSo [ESP201]P12 V0 should be off and [ESP201]P12 V1 should be on\nWemos D1 mini Connection with logic level conveter:\nexample:\nprinted cases:\nhttps://www.thingiverse.com/thing:4128593 https://www.thingiverse.com/thing:2671591 ",
    "description": "Setup your development environment Click on the corresponding image to display how to setup.\nArduino IDE or PlatformIO Tip: The platformIO environment is the easiest to setup, because you do not need to setup the esp core neither the libraries by yourself.\nConnect your board Connection between ESP and printer board needs 4 wires:\nESP Tx needs to connect to Rx on MCU of printer board. ESP Rx needs to connect to Tx on MCU of printer board.",
    "tags": [],
    "title": "Installation",
    "uri": "/esp3d/v2.x/installation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X",
    "content": "Setup your development environment Click on the corresponding image to display how to setup.\nArduino IDE or PlatformIO Tip: The platformIO environment is the easiest to setup, because you do not need to setup the esp core neither the libraries by yourself.\nConnect your board Connection between ESP and printer board needs 4 wires:\nESP Tx needs to connect to Rx on MCU of printer board. ESP Rx needs to connect to Tx on MCU of printer board. You also need to power supply ESP board with with GND and 3V3 or 5V. Connecting ESP board to target board Be aware that ESP MCU is 3.3V on GPIO pin and some target board can be 3.3V and others 5V, so you may not be able to directly connect ESP board to target board.\nDisclaimer : this wiki is for reference - you are responsible of your board supporting or not 5V, we are not responsible for any damage of wrong wiring.\nESP32 and ESP8266 MCU are only supporting 3.3V. Power supply them with 5V will likelly fry them immediatelly. As MCU is supplied at 3.3V, Tx and Rx signals will be at 3.3V even when board is supplied with 5V. Wether Rx pin is supporting 5V is controversial so we will keep on the safe side and only take datahseet as reference. It’s not recommended to have any signal (including Rx) be higher than power supply (3.3V here).\nThere are several points to take care. One should check that\nMCU1 Tx voltage is lower than MCU2 supply voltage Voh_min of Tx is higher than Vih_min of Rx (to check both ways) Vol_max of Tx is lower than Vil_max of Rx (to check both ways) 1 is mandatory and resistor voltage divider bridge or level shiffter is recommended\n2 \u0026 3 are not destructive there is just a slight risk signals are not read correctly. But it will work in most case as the limit values given by datasheets are rarelly met in mild conditions (using near 25°C and low current flowing from Tx to Rx)\nFor the divider bridge a value of R1=1k and R2=2.2k will be fine. You could also use 10k and 22k or anything near a factor 2.\nConnection diagrams for some printers and ESP boards Printer motherboards Anet A8 boards Anycubic i3 mega - Trigorilla 8bit board AZSMZ LCD board AZSMZ-mini board Azteeg X5 mini board BIQU KFB2.0 board Creality CR10 Ender 3 board Creality Ender 4 board Davinci 1.0/2.0 board Davinci 1.0A board MKS boards MKS Smoothieware board RADDS board RAMPS 1.4/Re-ARM board Smoothieboard board SKR Mini E3 board Weedo Tina2 board For printer boards not listed here ESP boards ESP-01 ESP-01 serial wifi module ESP-12E/F ESP 12F serial wifi module ESP32-Cam NodeMCU V2/V3 Sonoff Wemos D1 mini Printer motherboards Anet boards up to v1.5 Step 1 You will also have to unsolder the resistors R52 and R53 – they are zero ohm resistors, and serve no other purpose than connecting the atmega chip directly to the onboard USB to UART converter (the CH340 chip). Do it VERY careful – you don’t want to damage your board. If you don’t feel confident – don’t do it.\nStep 2 Now prepare the printer’s motherboard. It requires a simple modification, that does not interfere with it’s operation afterwards – just solder 3 pin x 2 row male header on J8, and add 2 jumpers (or jumper wires) as shown on the picture:\nStep 3 Connect the ESP to J3 repsecting pinout\nESP J3 Tx Rx Rx Tx GND GND VCC 3.3V CH_PD 3.3V For more Info check lokster | space\nFor connecting version 1.7 Anet boards Unlike older boards this board does not require you to remove any resistors.\nYou will have to solder two wires from number 9 and number 10 its recommender to connect these to pin 1 and 2 of J3 connector.\nAnycubic i3 mega - Trigorilla 8bit board To connect the ESP12e to the UART0. (Credits:197-murdock).\n(Green = RX, Blue = TX)\n5V (buck to 3.3v if directly connect to ESP - most development ESP boards already have this voltage limited built-in - but check!) and GND can be taken from the AUX3 exposed connector.\nUART0 is normally used by USB port so don’t use both together - so this hack piggybacks on that same port at UART level.\nAZSMZ LCD board AZSMZ-mini board If you don’t have the soldering skills to grab the connectors from the unpopulated ethernet connection, you can also get 3.3v and GND from the ISP header (bottom left on the diagram above).\nAzteeg X5 mini board BIQU KFB2.0 board all in one Ramps1.4/Mega2560 R3 controller based\nCreality CR10 Ender 3 board For the Sanguino based CR-10 and Ender printers you will need to solder to any of the via circled (can also be done in the backside of board), or to the legs of the Arduino or ftdi. Connect TX from the board to RX of Wemos D1 mini and RX from board to TX of Wemos D1 mini. 5v and GND are located in the six pin header next to the LCD connector.\nSince soldering might be difficult because the solder points are so close to each other, another option is to scrape off the insulation from the traces on the backside and solder there. Be extra careful not to scrape the surrounding ground plane. You need suitable fine scraping tools for this. The picture below shows an Ender-2 PCB.\nCreality Ender 4 board You will need to solder to small circle, or to the legs of the ATmega2560 (RXD0 pin 2, TXD0 pin 3)\nDavinci 1.0/2.0 board Davinci 1.0A board Alternate Module placement for increased WiFi range (outside metal chassis, antenna has vertical polarization)\nMKS boards To connect the ESP3D to the MKS GEN v1.2 (but the v1.3 and above 1.4 is the most used today).\nAn ESP12E with the standard schematics, the two resistor connected to the RX pin are substituted by a 1N4148 diode, like in the Adafruit Huzzah board.\nESP12E is connected to the AUX1\nESP12E RX is connected to the pin NEAR GND of the upper row (Marked TXD on pinout.)\nESP12E TX is connected to the adiacent pin at the end of the upper row (Marked RXD on pinout.)\nMKS Smoothieware board RADDS board RAMPS 1.4/Re-ARM board Ramps 1.4 can be used on Arduino Mega (repetier/marlin) and Re-ARM for ramps boards (smoothieware/marlin)\nAlternative pins if use Re-ARM (J4/UART port)\nSmoothieboard board SKR Mini E3 board This board is from Bigtreetech and went through various hardware revisions; all of them still feature a TFT pin header which is where you can tap the TX and RX needed. The wiring below is made with a 1.2 board, but the same applies for the other revisions as well; if you need the exact schematic for your mainboard version, you can check Bigtreetech’s github repository.\nYou literally cannot miss it because the TFT connector is labeled on the board; you can use dupont connectors for the wiring job, no soldering skills needed as long as your ESP comes with pre soldered headers. Just a heads up: the TFT connector provides 5V DC, so be sure to provide them on the correct ESP pin and, most importantly, if your ESP can work with 5 volts as input. You should also pay attention on the board orientation in the schematic, although I oriented it the same way as the actual picture on the left so it’s easier for you.\nWeedo Tina2 board This printer is also brand labelled as Monoprice MP cadet 3D printer\nIn marlin this connection is serial port 3.\nNote the Mega2560 is 5V powered and ESP is 3V3 powered.\nFor printer boards not listed here Vast majority of printers have an USB port that is converted to UART before going to MCU. Many printers also have additional (unused) UART port you can use. When possible, always use the additional port for connecting ESP to printer board. When no additional UART port is available you might use the Tx and Rx lines between USB/UART converter and MCU but it’s recommended to cut (in a reversible way) the line to USB/UART converter to avoid conflicts.\nIf the board is ATmega based the simplest way to find a usable UART port for the ESP is to open ATmega datasheet.\nESP boards ESP-01 Use GPIO2 to ground to reset all settings in hard way - 2-6 sec after boot / not before!! Set GPIO2 to ground before boot change boot mode and go to special boot that do not reach FW. Currently boot take 10 sec - giving 8 seconds to connect GPIO2 to GND and do an hard recovery for settings Use GPIO0 to ground to be in update mode ESP-01 serial wifi module more info about the Breakout PCB: keyestudio\nESP-12E/F ESP need 3.3v, it is not 5v tolerant, if printer board use more than 3.3V like 5V on ramps.\nyou can also use Logic LevelConverter Bi-Directional\nIn order to flash some ESP12E/F boards via their UART interface, the following pins need to be connected:\nVCC to GPIO2 GND to GPIO0 This has been tested with ESP-12-E boards labeled “ESP8266 For ESP3D FYSETC.COM”\nESP 12F serial wifi module ESP-12F based serial wifi module (eg from aliexpress ) contains built in 2-way levelshifter/bi-directional logic level converter. So it can be powered via 5V uart from the target’ motherboard.\nWe need to manualy ground the IO0 while powering up to start in flash mode while powering up (there is no switch for that, neither for reset) Use FTDI adapter as usb2serial Need to see in console/serial monitor boot mode is (1,7). baudrate: 74880 rst cause:2, boot mode:(3,7) Then flash like other esp based board for esp3d ESP32-Cam Note: 5V is power supply input and 3V3 is output from regulator. UART Tx and RX signals will be 3.3V\nNodeMCU V2/V3 Sonoff Relay is connected by GPIO12, it can be handled using ESP201 command:\n*Get/Set pin value\r[ESP201]P\u003cpin\u003e V\u003cvalue\u003e [PULLUP=YES RAW=YES]\rif no V\u003cvalue\u003e get P\u003cpin\u003e value\rif V\u003cvalue\u003e 0/1 set INPUT_PULLUP value, but for GPIO16 INPUT_PULLDOWN_16\rGPIO1 and GPIO3 cannot be used as they are used for serial\rif PULLUP=YES set input pull up, if not set input\rif RAW=YES do not set pinmode just read value\rSo [ESP201]P12 V0 should be off and [ESP201]P12 V1 should be on\nWemos D1 mini Connection with logic level conveter:\nexample:\nprinted cases:\nhttps://www.thingiverse.com/thing:4128593 https://www.thingiverse.com/thing:2671591 ",
    "description": "Setup your development environment Click on the corresponding image to display how to setup.\nArduino IDE or PlatformIO Tip: The platformIO environment is the easiest to setup, because you do not need to setup the esp core neither the libraries by yourself.\nConnect your board Connection between ESP and printer board needs 4 wires:\nESP Tx needs to connect to Rx on MCU of printer board. ESP Rx needs to connect to Tx on MCU of printer board.",
    "tags": [],
    "title": "Installation",
    "uri": "/esp3d/v3.x/installation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X",
    "content": "In Marlin configuration files :\nConfiguration.h Select an ESP32 based board.\nUncomment the second serial port to allow esp3d to get all printer feedback\n/** * Select a secondary serial port on the board to use for communication with the host. * :[-1, 0, 1, 2, 3, 4, 5, 6, 7] */ #define SERIAL_PORT_2 -1Configuration_adv.h Enable ESP3DLib support using : #define ESP3D_WIFISUPPORT // ESP3D Library WiFi management (https://github.com/luc-github/ESP3DLib)\nYou can optionnaly define to which access point your board need to connect to:\n#define WIFI_SSID \"Wifi SSID\"\n#define WIFI_PWD \"Wifi Password\"\nif not defined or you left like this the board will act as an Access Point instead. and you can do further configuration using command line or web interface.\nPlease be sure these setting are enabled they are mandatory for ESP3DLib\n#define WEBSUPPORT // Start a webserver (which may include auto-discovery) #define WIFI_CUSTOM_COMMAND // Accept feature config commands (e.g., WiFi ESP3D) from the host| Web Update is supported by ESP3DLib but you can also use:\n#define OTASUPPORT // Support over-the-air firmware updates To enable the authentication feature which is disabled by default:\n//AUTHENTICATION_FEATURE: protect pages by login password. #define AUTHENTICATION_FEATUREto disable any of these features which are enabled by default:\n//MDNS_FEATURE: this feature allow type the name defined //in web browser by default: http:\\\\marlinesp.local and connect #define DISABLE_MDNS_FEATURE //SSDD_FEATURE: this feature is a discovery protocol, supported on Windows out of the box //Rely on Configuration_adv.h #define DISABLE_SSDP_FEATURE //CAPTIVE_PORTAL_FEATURE: In SoftAP redirect all unknow call to main page #define DISABLE_CAPTIVE_PORTAL_FEATURE",
    "description": "In Marlin configuration files :\nConfiguration.h Select an ESP32 based board.\nUncomment the second serial port to allow esp3d to get all printer feedback\n/** * Select a secondary serial port on the board to use for communication with the host. * :[-1, 0, 1, 2, 3, 4, 5, 6, 7] */ #define SERIAL_PORT_2 -1Configuration_adv.h Enable ESP3DLib support using : #define ESP3D_WIFISUPPORT // ESP3D Library WiFi management (https://github.com/luc-github/ESP3DLib)\nYou can optionnaly define to which access point your board need to connect to:",
    "tags": [],
    "title": "Installation",
    "uri": "/esp3dlib/v1.x/installation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X",
    "content": "In Marlin configuration files :\nConfiguration.h Select an ESP32 based board.\nUncomment the second serial port to allow esp3d to get all printer feedback\n/** * Select a secondary serial port on the board to use for communication with the host. * :[-1, 0, 1, 2, 3, 4, 5, 6, 7] */ #define SERIAL_PORT_2 -1Configuration_adv.h Enable ESP3DLib support using : #define ESP3D_WIFISUPPORT // ESP3D Library WiFi management (https://github.com/luc-github/ESP3DLib)\nYou can optionnaly define to which access point your board need to connect to:\n#define WIFI_SSID \"Wifi SSID\"\n#define WIFI_PWD \"Wifi Password\"\nif not defined or you left like this the board will act as an Access Point instead. and you can do further configuration using command line or web interface.\nPlease be sure these setting are enabled they are mandatory for ESP3DLib\n#define WEBSUPPORT // Start a webserver (which may include auto-discovery) #define WIFI_CUSTOM_COMMAND // Accept feature config commands (e.g., WiFi ESP3D) from the host| #define CUSTOM_SD_ACCESS // Enable another lib accessing the SD card without conflicts Web Update is supported by ESP3DLib but you can also use:\n#define OTASUPPORT // Support over-the-air firmware updates To enable the authentication feature which is disabled by default:\n//AUTHENTICATION_FEATURE: protect pages by login password. #define AUTHENTICATION_FEATUREto disable any of these features which are enabled by default:\n//MDNS_FEATURE: this feature allow type the name defined //in web browser by default: http:\\\\marlinesp.local and connect #define DISABLE_MDNS_FEATURE //SSDD_FEATURE: this feature is a discovery protocol, supported on Windows out of the box //Rely on Configuration_adv.h #define DISABLE_SSDP_FEATURE //CAPTIVE_PORTAL_FEATURE: In SoftAP redirect all unknow call to main page #define DISABLE_CAPTIVE_PORTAL_FEATURE",
    "description": "In Marlin configuration files :\nConfiguration.h Select an ESP32 based board.\nUncomment the second serial port to allow esp3d to get all printer feedback\n/** * Select a secondary serial port on the board to use for communication with the host. * :[-1, 0, 1, 2, 3, 4, 5, 6, 7] */ #define SERIAL_PORT_2 -1Configuration_adv.h Enable ESP3DLib support using : #define ESP3D_WIFISUPPORT // ESP3D Library WiFi management (https://github.com/luc-github/ESP3DLib)\nYou can optionnaly define to which access point your board need to connect to:",
    "tags": [],
    "title": "Installation",
    "uri": "/esp3dlib/v3.x/installation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-C3 boards",
    "content": "github\nSpecs ESP32-C3 (single-core) in ESP01 format (8 pins) with 4MB flash memory, ceramic antenna/ipex connector ",
    "description": "LILYGO T-01C3",
    "tags": [],
    "title": "LILYGO T-01C3",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-c3/lilygo-t-01c03/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e Extra tools \u003e Discovery tools",
    "content": " Windows :\nYou may need the bonjour protocol installed on your machine, you can download from here and/or use a dedicated browser like Bonjour browser for Windows\nOSX :\nIt is supported out of the box but need to use some application like discovery-dns-sd-browser\nsearch for esp3d Linux:\nAvahi service must be installed, check this wiki\nAndroid:\nmdDNS Discovery\nsearch for esp3d ",
    "description": " Windows :\nYou may need the bonjour protocol installed on your machine, you can download from here and/or use a dedicated browser like Bonjour browser for Windows\nOSX :\nIt is supported out of the box but need to use some application like discovery-dns-sd-browser\nsearch for esp3d Linux:\nAvahi service must be installed, check this wiki\nAndroid:\nmdDNS Discovery\nsearch for esp3d ",
    "tags": [],
    "title": "mDNS protocol",
    "uri": "/tools/discovery/mdns/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X \u003e Hardware",
    "content": "From Maker Base, an ESP32 controller with 8MB flash memory, with IO expander.\ngithub Specs ESP32 with 8MB flash memory, sd card reader ",
    "description": "MKS Tinybee V1",
    "tags": [],
    "title": "MKS Tinybee",
    "uri": "/esp3dlib/v1.x/hardware/mks-tinybee-v1/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Hardware",
    "content": "From Maker Base, an ESP32 controller with 8MB flash memory, with IO expander.\ngithub Specs ESP32 with 8MB flash memory, sd card reader ",
    "description": "MKS Tinybee V1",
    "tags": [],
    "title": "MKS Tinybee",
    "uri": "/esp3dlib/v3.x/hardware/mks-tinybee-v1/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X \u003e Hardware",
    "content": "From Maple Rain, an ESP32 controller with 4MB flash memory, no IO expander.\ngithub Specs ESP32 with 4MB flash memory, sd card reader ",
    "description": "MRR-ESPA",
    "tags": [],
    "title": "MRR-ESPA",
    "uri": "/esp3dlib/v1.x/hardware/mrr-espa/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Hardware",
    "content": "From Maple Rain, an ESP32 controller with 4MB flash memory, no IO expander.\ngithub Specs ESP32 with 4MB flash memory, sd card reader ",
    "description": "MRR-ESPA",
    "tags": [],
    "title": "MRR-ESPA",
    "uri": "/esp3dlib/v3.x/hardware/mrr-espa/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X \u003e Hardware",
    "content": "From Maple Rain, an ESP32 controller with 4MB flash memory, with IO expander.\ngithub Specs ESP32 with 4MB flash memory, sd card reader ",
    "description": "MRR-ESPE",
    "tags": [],
    "title": "MRR-ESPE",
    "uri": "/esp3dlib/v1.x/hardware/mrr-espe/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Hardware",
    "content": "From Maple Rain, an ESP32 controller with 4MB flash memory, with IO expander.\ngithub Specs ESP32 with 4MB flash memory, sd card reader ",
    "description": "MRR-ESPE",
    "tags": [],
    "title": "MRR-ESPE",
    "uri": "/esp3dlib/v3.x/hardware/mrr-espe/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation",
    "content": "You can use only one type of notification from the following ones:\nPushover A pay service\nPlease follow this link for more information on how to setup a pushover notification service\nLine A free service\nPlease follow this link for more information on how to setup a line notification service\nEmail using SMTP and HTTPS Please follow this link for more information on how to setup a email notification service\nIFTTT webhook A free service up to 5 applets\nPlease follow this link for more information on how to setup a pushover iftt service\nTelegram A free service\nPlease follow this link for more information on how to setup a telegram notification service\nThe notification will also be sent to the WebUi\nHow to send message ? Just add following command in your slicer’s end script, or manualy on your GCODE file:\n[ESP600]msg pwd=\u003cadmin password\u003e\nHow to ask printer to send command from file played from SD ? on Repetier\nM118 [ESP600]msg\non Marlin\nM118 P0 [ESP600]msg\non Smoothieware\necho [ESP600]msg",
    "description": "Setup and configuration",
    "tags": [],
    "title": "Notifications",
    "uri": "/esp3d-tft/v1.x/documentation/notifications/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Documentation",
    "content": "You can use only one type of notification from the following ones:\nPushover, which is a pay service\nPlease follow this link for more information on how to setup a pushover notification service\nLine, which is a free service\nPlease follow this link for more information on how to setup a line notification service\nEmail using SMTP and HTTPS\nPlease follow this link for more information on how to setup a email notification service\nIFTTT webhook, which is a free service up to 5 applets\nPlease follow this link for more information on how to setup a pushover iftt service\nHow to send message ? Just add following command in your slicer’s end script, or manualy on your GCODE file:\n[ESP600]msg pwd=\u003cadmin password\u003e\nHow to ask printer to send command from file played from SD ? on Repetier\nM118 [ESP600]msg\non Marlin\nM118 P0 [ESP600]msg\non Smoothieware\necho [ESP600]msg",
    "description": "Setup and configuration",
    "tags": [],
    "title": "Notifications",
    "uri": "/esp3d/v2.x/documentation/notifications/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation",
    "content": "You can use only one type of notification from the following ones:\nPushover A pay service\nPlease follow this link for more information on how to setup a pushover notification service\nLine A free service\nPlease follow this link for more information on how to setup a line notification service\nEmail using SMTP and HTTPS Please follow this link for more information on how to setup a email notification service\nIFTTT webhook A free service up to 5 applets\nPlease follow this link for more information on how to setup a pushover iftt service\nTelegram A free service\nPlease follow this link for more information on how to setup a telegram notification service\nThe notification will also be sent to the WebUi\nHome Assistant Talk directly to your local home assistant\nPlease follow this link for more information on how to setup a Home Assistant notification service\nHow to send message ? Just add following command in your slicer’s end script, or manualy on your GCODE file:\n[ESP600]msg pwd=\u003cadmin password\u003e\nHow to ask printer to send command from file played from SD ? on Repetier\nM118 [ESP600]msg\non Marlin\nM118 P0 [ESP600]msg\non Smoothieware\necho [ESP600]msg\nNote\rThe message can also contain the following variables:\n%ESP_IP% : the IP address of the ESP %ESP_NAME% : the name of the ESP %ESP_DATETIME% : the current date and time ",
    "description": "Setup and configuration",
    "tags": [],
    "title": "Notifications",
    "uri": "/esp3d/v3.x/documentation/notifications/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation",
    "content": "You can use only one type of notification from the following ones:\nPushover A pay service\nPlease follow this link for more information on how to setup a pushover notification service\nLine A free service\nPlease follow this link for more information on how to setup a line notification service\nEmail using SMTP and HTTPS Please follow this link for more information on how to setup a email notification service\nIFTTT webhook A free service up to 5 applets\nPlease follow this link for more information on how to setup a pushover iftt service\nTelegram A free service\nPlease follow this link for more information on how to setup a telegram notification service\nThe notification will also be sent to the WebUi\nHow to send message ? Just add following command in your slicer’s end script, or manualy on your GCODE file:\n[ESP600]msg pwd=\u003cadmin password\u003e\nHow to ask printer to send command from file played from SD ? on Repetier\nM118 [ESP600]msg\non Marlin\nM118 P0 [ESP600]msg\non Smoothieware\necho [ESP600]msg",
    "description": "Setup and configuration",
    "tags": [],
    "title": "Notifications",
    "uri": "/esp3dlib/v3.x/documentation/notifications/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X \u003e Hardware",
    "content": "From Mark Niu, two ESP32 controllers with 4MB flash memory, with IO expander.\ngithub Specs ESP32 with 4MB flash memory, sd card reader ",
    "description": "Panda Zhu/M4",
    "tags": [],
    "title": "Panda Zhu/M4",
    "uri": "/esp3dlib/v1.x/hardware/panda-zhu-m4/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Hardware",
    "content": "From Mark Niu, two ESP32 controllers with 4MB flash memory, with IO expander.\ngithub Specs ESP32 with 4MB flash memory, sd card reader ",
    "description": "Panda Zhu/M4",
    "tags": [],
    "title": "Panda Zhu/M4",
    "uri": "/esp3dlib/v3.x/hardware/panda-zhu-m4/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e Extra tools",
    "content": "Format the SD card The capacity must not be over 8GB, 4GB is the prefered one.\nThe sd card must be formated using Fat32 or extFat.\nWindows:\nDo not use the windows formating tool, use the tool provided by sdcard.org tool instead. OSX:\nplease use sdcard.org tool Linux:\nTBD… ",
    "description": "Format the SD card The capacity must not be over 8GB, 4GB is the prefered one.\nThe sd card must be formated using Fat32 or extFat.\nWindows:\nDo not use the windows formating tool, use the tool provided by sdcard.org tool instead. OSX:\nplease use sdcard.org tool Linux:\nTBD… ",
    "tags": [],
    "title": "SD tools",
    "uri": "/tools/sdtools/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e TFT \u003e Bigtreetech TFT",
    "content": "The board has footprint for an ESP01 connector\nBoard pins socket ESP01 Board firmware BTT Board configuration note Need to enable wifi port using config.ini file ESP3D configuration note Raw serial, no SD ",
    "description": "Socket available",
    "tags": [],
    "title": "TFT 70",
    "uri": "/esp3d/v3.x/hardware/system_boards/tft/bigtreetech/tft_70/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D",
    "content": "\rThis version is the development version, features can change anytime, feedback, PR and suggestions are welcome.\nFirmware should work with the following firmwares:\nRepetier 1.0 Marlin 1.X/2.X Smoothieware 1.x grbl 1.x The communication between ESP board and target board is done by serial.\nThe firmware must be used with ESP3D-WEBUI 3.X\nTo help and simplify the configuration, a configurator is available: ",
    "description": "\rThis version is the development version, features can change anytime, feedback, PR and suggestions are welcome.\nFirmware should work with the following firmwares:\nRepetier 1.0 Marlin 1.X/2.X Smoothieware 1.x grbl 1.x The communication between ESP board and target board is done by serial.\nThe firmware must be used with ESP3D-WEBUI 3.X\nTo help and simplify the configuration, a configurator is available: ",
    "tags": [],
    "title": "Version 3.X",
    "uri": "/esp3d/v3.x/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Installation",
    "content": "Prepare the development environment Download and install VSCode\nAdd PlatformIO IDE extension to VSCode\nOpen the ESP3D directory folder in VSCode The first time you open the project, vscode need to download all necessary files, so be patient\nESP3D configuration Open esp3d/config.h and set features you want.\n//Customize ESP3D //////////////////////////////////////////////////////////////////////// #define ESP8266_MODEL_NAME \"ESP8266\" #define ESP8266_MODEL_URL \"http://espressif.com/en/products/esp8266/\" #define ESP32_MODEL_NAME \"ESP32\" #define ESP32_MODEL_URL \"https://www.espressif.com/en/products/hardware/esp-wroom-32/overview\" #define ESP_MODEL_NUMBER \"ESP3D 2.1\" #define ESP_MANUFACTURER_NAME \"Espressif Systems\" #define ESP_MANUFACTURER_URL \"http://espressif.com\" //default name if no mac address is valid #define ESP_DEFAULT_NAME \"MYESP\" //if commented name will follow mac address 3 last digits //like ESP_XXXXXX (eg:ESP_028E41) to avoid overlap if several ESP3D #define ESP_HOST_NAME ESP_DEFAULT_NAME //To allow webupdate using small updater //#define USE_AS_UPDATER_ONLY //FEATURES - comment to disable ////////////////////////////////////////////////////////// //WEB_UPDATE_FEATURE: allow to flash fw using web UI #define WEB_UPDATE_FEATURE #ifndef USE_AS_UPDATER_ONLY //Do we use async webserver or not (currntly deprecated do not enable it yet) //#define ASYNCWEBSERVER //SERIAL_COMMAND_FEATURE: allow to send command by serial #define SERIAL_COMMAND_FEATURE //TCP_IP_DATA_FEATURE: allow to connect serial from TCP/IP #define TCP_IP_DATA_FEATURE //NOTIFICATION_FEATURE : allow to push notifications #define NOTIFICATION_FEATURE //MKS TFT WIFI support see Wiki for wiring //#define MKS_TFT_FEATURE //MDNS_FEATURE: this feature allow type the name defined //in web browser by default: http:\\\\esp8266.local and connect #define MDNS_FEATURE //SSDD_FEATURE: this feature is a discovery protocol, supported on Windows out of the box #define SSDP_FEATURE //NETBIOS_FEATURE: this feature is a discovery protocol, supported on Windows out of the box //#define NETBIOS_FEATURE //CAPTIVE_PORTAL_FEATURE: In SoftAP redirect all unknow call to main page #define CAPTIVE_PORTAL_FEATURE //RECOVERY_FEATURE: allow to use GPIO2 pin as hardware reset for EEPROM, add 8s to boot time to let user to jump GPIO2 to GND //#define RECOVERY_FEATURE //DIRECT_PIN_FEATURE: allow to access pin using ESP201 command #define DIRECT_PIN_FEATURE //ESP_OLED_FEATURE: allow oled screen output //#define ESP_OLED_FEATURE //DHT_FEATURE: send update of temperature / humidity based on DHT 11/22 //#define DHT_FEATURE //AUTHENTICATION_FEATURE: protect pages by login password //#define AUTHENTICATION_FEATURE //WS_DATA_FEATURE: allow to connect serial from Websocket #define WS_DATA_FEATURE //TIMESTAMP_FEATURE: Time stamp feature on direct SD files //#define TIMESTAMP_FEATURE #endif //USE_AS_UPDATER_ONLY //Extra features ///////////////////////////////////////////////////////////////////////// //Workaround for Marlin 2.X coldstart //#define DISABLE_CONNECTING_MSG //Serial rx buffer size is 256 but can be extended #define SERIAL_RX_BUFFER_SIZE 512 //Serial Parameters #define ESP_SERIAL_PARAM SERIAL_8N1 //which serial ESP use to communicate to printer (ESP32 has 3 serials available, ESP8266 only one) //Uncomment one only #define USE_SERIAL_0 //For ESP32 Only //#define USE_SERIAL_1 //#define USE_SERIAL_2 //Pins Definition //////////////////////////////////////////////////////////////////////// //-1 means use default pins of your board what ever the serial you choose #define ESP_RX_PIN -1 #define ESP_TX_PIN -1 #ifdef RECOVERY_FEATURE //pin used to reset setting #define RESET_CONFIG_PIN 2 #endif #ifdef DHT_FEATURE #define ESP_DHT_PIN 2 #endif //Pins where the screen is connected #ifdef ESP_OLED_FEATURE #define OLED_DISPLAY_SSD1306 // OLED Display Type: SSD1306(OLED_DISPLAY_SSD1306) / SH1106(OLED_DISPLAY_SH1106), comment this line out to disable oled #define OLED_PIN_SDA 4 //5 //SDA; // i2c SDA Pin #define OLED_PIN_SCL 15 //4 //SCL; // i2c SCL Pin #define OLED_ADDR 0x3c #define HELTEC_EMBEDDED_PIN 16 //0 to disable #define OLED_FLIP_VERTICALY 1 //0 to disable #endifSelect the target in VSCode [env:esp32dev] for ESP32 boards [env:esp8266] for ESP8266 boards with 4MB flash [env:esp01s_160mhz-2.7.4] for ESP8266 boards with 1MB flash Connect your board Compile and flash your module Use Upload and monitor from the target environment you selected to compile and flash your module.",
    "description": "Prepare the development environment Download and install VSCode\nAdd PlatformIO IDE extension to VSCode\nOpen the ESP3D directory folder in VSCode The first time you open the project, vscode need to download all necessary files, so be patient\nESP3D configuration Open esp3d/config.h and set features you want.\n//Customize ESP3D //////////////////////////////////////////////////////////////////////// #define ESP8266_MODEL_NAME \"ESP8266\" #define ESP8266_MODEL_URL \"http://espressif.com/en/products/esp8266/\" #define ESP32_MODEL_NAME \"ESP32\" #define ESP32_MODEL_URL \"https://www.espressif.com/en/products/hardware/esp-wroom-32/overview\" #define ESP_MODEL_NUMBER \"ESP3D 2.1\" #define ESP_MANUFACTURER_NAME \"Espressif Systems\" #define ESP_MANUFACTURER_URL \"http://espressif.",
    "tags": [],
    "title": "VSCode \u0026 Platformio",
    "uri": "/esp3d/v2.x/installation/vscode-platformio/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Installation",
    "content": "Prepare the development environment Download and install VSCode\nAdd PlatformIO IDE extension to VSCode\nOpen the ESP3D directory folder in VSCode The first time you open the project, vscode need to download all necessary files, so be patient\nESP3D configuration Open esp3d/configuration.h and set features you want.\nYou can also generate it, using the ESP3D configurator, which simplify a lot this step. /* Setup station as default, use AP mode first if not done * Note: need both defined to enable it * Uncomment and edit them to define */ //#define STATION_WIFI_SSID \"*********\" //#define STATION_WIFI_PASSWORD \"*********\" /* You can also use a different config file for SSID/password * Just save it in same location as this configuration.h * This file is ignored by github */ #if defined __has_include # if __has_include (\"myconfig.h\") # include \"myconfig.h\" # endif #endif/************************************ * * Serial Communications * * Settings and protocols * ************************************/ /* Serial Communication protocol * RAW_SERIAL // Basic serial protocol, without data change * MKS_SERIAL // This is a MakerBase communication protocol, used with MKS printers and TFT, it encapsulated data in a custom protocol */ #define COMMUNICATION_PROTOCOL RAW_SERIAL /* Main Serial port * which serial ESP use to communicate to printer (ESP32 has 3 serials available, ESP8266 only 2) * USE_SERIAL_0 //for ESP8266/32, also used by bootloader output, so consider to make it quiet * USE_SERIAL_1 //for ESP8266/32 * USE_SERIAL_2 //for ESP32 Only */ //Main serial port #define ESP_SERIAL_OUTPUT USE_SERIAL_0 /* Bridge Serial port (deprecated on esp8266 as second serial is) * which serial ESP use to bridge to another device (ESP32 has 3 serials available, ESP8266 only 2) * USE_SERIAL_0 //for ESP8266/32, also used by bootloader output, so consider to make it quiet * USE_SERIAL_1 //for ESP8266/32 * USE_SERIAL_2 //for ESP32 Only\\ * Comment if not used */ //#define ESP_SERIAL_BRIDGE_OUTPUT USE_SERIAL_1 /* Serial buffer size * Maximum size of the serial buffer */ #define SERIAL_RX_BUFFER_SIZE 512/************************************ * * Target firmware * * Targeted firmware that ESP3D will communicate with * ************************************/ /* Target firmware (default UNKNOWN_FW can be changed later in settings) * UNKNOWN_FW * GRBL * MARLIN * SMOOTHIEWARE * REPETIER */ #define DEFAULT_FW UNKNOWN_FW/************************************ * * Radio mode of ESP3D * * The radio mode ESP3D communicate with the network * ************************************/ /* Use WiFi * Enable wifi communications */ #define WIFI_FEATURE /* Use Ethernet * Enable ethernet communications */ //#define ETH_FEATURE //Ethernet type (Check ETH.h eth_phy_type_t) //TYPE_ETH_PHY_LAN8720 //TYPE_ETH_PHY_TLK110 //TYPE_ETH_PHY_RTL8201 //TYPE_ETH_PHY_DP83848 //TYPE_ETH_PHY_DM9051 //TYPE_ETH_PHY_KSZ8041 //TYPE_ETH_PHY_KSZ8081 #define ESP3D_ETH_PHY_TYPE TYPE_ETH_PHY_LAN8720 //Ethernet board Clock mode // MODE_ETH_CLOCK_GPIO0_IN // MODE_ETH_CLOCK_GPIO0_OUT // MODE_ETH_CLOCK_GPIO16_OUT // MODE_ETH_CLOCK_GPIO17_OUT #define ESP3D_ETH_CLK_MODE MODE_ETH_CLOCK_GPIO17_OUT //Pins of ethernet board #define ESP3D_ETH_PHY_POWER_PIN 12 //#define ESP3D_ETH_PHY_MDC_PIN 23 //#define ESP3D_ETH_PHY_MDIO_PIN 18 //Address of ethernet board //#define ESP3D_ETH_PHY_ADDR 0 /* Use Bluetooth * Enable serial bluetooth communications */ //#define BLUETOOTH_FEATURE /************************************ * * Channels of ESP3D * * The way ESP3D communicate * ************************************/ /* Use Web server * Enable http server */ #define HTTP_FEATURE /* Use telnet server * Enable telnet light (raw tcp) communications */ #define TELNET_FEATURE /* Use Websocket server * Enable websocket communications */ //#define WS_DATA_FEATURE // Enable notifications // Allows to send notifications to the user #define NOTIFICATION_FEATURE /* Notification message when online * The message that will be sent when the ESP is online */ #define NOTIFICATION_ESP_ONLINE \"Hi, %ESP_NAME% is now online at %ESP_IP%\" /* Notification title message * The title of notification */ #define ESP_NOTIFICATION_TITLE \"ESP3D Notification\"/************************************ * * Discovery methods of ESP3D * * The discovery methods of ESP3D * ************************************/ /* Use captive portal * Enable captive portal in AP mode */ #define CAPTIVE_PORTAL_FEATURE /* Use mDNS discovery * This method need `bonjour` protocol on windows, or `avahi` on linux */ #define MDNS_FEATURE /* Use Simple Service Discovery Protocol * It is supported on Windows out of the box */ #define SSDP_FEATURE /************************************ * * SSDP Customization settings * * Customize your ESP3D * ************************************/ /* Model name * Modele name of device */ #define ESP_MODEL_NAME \"ESP Board\" /* Model number * Modele number of device */ #define ESP_MODEL_NUMBER \"ESP3D 3.0\" /* Model url * Modele url of device */ #define ESP_MODEL_URL \"https://www.espressif.com/en/products/devkits\" /* Manufacturer name * Manufacturer name of device */ #define ESP_MANUFACTURER_NAME \"Espressif Systems\" /* Manufacturer url * Manufacturer url of device */ #define ESP_MANUFACTURER_URL \"https://www.espressif.com\" /************************************ * * Flash filesystem * * Filesystem on flash * ************************************/ /* File system type used by ESP3D * Type of file system used by ESP3D to store files * ESP_SPIFFS_FILESYSTEM (Deprecated) * ESP_FAT_FILESYSTEM (ESP32 only with large partitions) * ESP_LITTLEFS_FILESYSTEM (Default) */ #define FILESYSTEM_FEATURE ESP_LITTLEFS_FILESYSTEM /* Enable date/time on files * Set date/time on files using SNTP or last webui connection */ //#define FILESYSTEM_TIMESTAMP_FEATURE /************************************ * * SD filesystem * * Filesystem on SD card * ************************************/ /* SD card connection * ESP_NO_SD //(default) * ESP_DIRECT_SD //Only your ESP board is connected to SDCard * ESP_SHARED_SD //Printer SD Card is also connected to ESP3D * Does your system has SD card and how it is connected to your ESP3D */ //#define SD_DEVICE_CONNECTION ESP_DIRECT_SD /* SD card library * ESP_SD_NATIVE //esp32 / esp8266 * ESP_SDIO //esp32 only * ESP_SDFAT2 //esp8266 / esp32 */ //#define SD_DEVICE ESP_SDFAT2 /* Sdio bit mode * Mode used by SDIO library 1 bit / 4bits * SD_ONE_BIT_MODE * SD_FOUR_BIT_MODE */ //#define SDIO_BIT_MODE SD_ONE_BIT_MODE /* Enable date/time on files * Set date/time on files using SNTP or last webui connection */ //#define SD_TIMESTAMP_FEATURE /************************************ * * SD card pins * ************************************/ /* SD card detect pin * The pin used to detect SD card */ //#define ESP_SD_DETECT_PIN 4 /* SD card detect pin value * State of SD card detect pin when card is present */ //#define ESP_SD_DETECT_VALUE 0 /* SD shared flag pin * The pin used to enable SD card for ESP board */ //#define ESP_FLAG_SHARED_SD_PIN -1 /* SD shared flag pin value * State of SD card shared pin for ESP board */ //#define ESP_FLAG_SHARED_SD_VALUE 0 /* SD card CS pin * The pin used to select SD card in SPI mode */ //#define ESP_SD_CS_PIN 5 /************************************ * * Remote access * * Remote filesystem access * ************************************/ /* Enable global filesystem * Allows to access to all filesystems from same location */ //#define GLOBAL_FILESYSTEM_FEATURE /* WebDav access * Use WebDav to access to your filesystem * FS_ROOT //mount all FS, need GLOBAL_FILESYSTEM_FEATURE * FS_FLASH //mount Flash FS * FS_SD mount SD FS */ //#define WEBDAV_FEATURE FS_ROOT /* FTP access * Use FTP to access to your filesystem (1 connection only) * FS_ROOT //mount all FS, need GLOBAL_FILESYSTEM_FEATURE * FS_FLASH //mount Flash FS * FS_SD //mount SD FS */ //#define FTP_FEATURE FS_ROOT /************************************ * * Reset ESP3D * * Reset ESP3D settings * ************************************/ /* Enable pin reset feature * Use a pin to reset ESP3D settings */ //#define PIN_RESET_FEATURE /* Reset pin * The pin used to reset ESP3D setting if set to low for more than 1 second at start */ #define ESP3D_RESET_PIN 0/************************************ * * Update ESP3D * * Update ESP3D firmware * ************************************/ /* Enable OTA * Over The Air Update (OTA) */ //#define OTA_FEATURE /* Enable Web Update * Update firmware using WebUI, need 4MB of flash */ #define WEB_UPDATE_FEATURE /* Enable SD card Update * Update firmware and settings using file on SDCard */ //#define SD_UPDATE_FEATURE /************************************ * * Display settings * * Rendering screens * ************************************/ /* Printer screen * If your printer has a display */ #define PRINTER_HAS_DISPLAY /* ESP3D screen * Screen connected to ESP board * OLED I2C SSD1306 128X64 * OLED_I2C_SSDSH1106_132X64 * TFT_SPI_ST7789_240X240 * TFT_SPI_ST7789_135X240 */ //#define DISPLAY_DEVICE OLED_I2C_SSD1306_128X64 /* Flip screen * Flip/rotate screen */ //#define DISPLAY_FLIP_VERTICALY /* Display i2C address * Wire address of display */ //#define DISPLAY_I2C_ADDR 0x3c /* Display reset pin * The pin used to reset the screen (optional) */ //#define DISPLAY_I2C_PIN_RST 22 /* TFT led pin * The pin used for the backlight */ //#define DISPLAY_LED_PIN -1 /************************************ * * Audio settings * * Buzzer feature * ************************************/ /* Enable buzzer * Your esp board has a passive buzzer */ //#define BUZZER_DEVICE /* Buzzer pin * The pin used for the passive buzzer */ //#define ESP3D_BUZZER_PIN 33 /************************************ * * Sensor settings * * Sensor feature * ************************************/ /* Sensor pin * The pin used for the sensor */ //#define ESP3D_SENSOR_PIN 34 /* Sensor Unit * Unit of the sensor result */ //#define SENSOR__UNIT \"C\" /************************************ * * Camera settings * * Connected camera * ************************************/ /* Camera type * CAMERA_MODEL_CUSTOM //Edit the pins in include/pins.h * CAMERA_MODEL_ESP_EYE * CAMERA_MODEL_M5STACK_PSRAM * CAMERA_MODEL_M5STACK_V2_PSRAM * CAMERA_MODEL_M5STACK_WIDE * CAMERA_MODEL_AI_THINKER //ESP32-CAM * CAMERA_MODEL_WROVER_KIT * CAMERA_MODEL_ESP32_CAM_BOARD * CAMERA_MODEL_ESP32S2_CAM_BOARD * CAMERA_MODEL_ESP32S3_CAM_LCD * CAMERA_MODEL_ESP32S3_EYE * Camera connected to ESP board, only ones with PSRAM are supported */ //#define CAMERA_DEVICE CAMERA_MODEL_AI_THINKER /* Flip vertically * Flip camera vertically */ //#define CAMERA_DEVICE_FLIP_VERTICALY /************************************ * * Levels of security * * How commands are allowed to be sent to ESP3D * ************************************/ /* Enable serial commands * Allow commands to be sent to ESP3D via serial port */ #define SERIAL_COMMAND_FEATURE /* Allow remote access by enabling cross origin access * check https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS * this should be enabled only in specific cases * like show the camera in web page different than device web server * /if you do not know what is that then better left it commented * Allow to show the camera in web page different than device web server */ //#define ESP_ACCESS_CONTROL_ALLOW_ORIGIN /* Enable authentication * Force usage of authentication for commands */ //#define AUTHENTICATION_FEATURE /************************************ * * Additional features * * Extra settings * ************************************/ /* Enable direct control pin * Controls pins using [ESP201] */ #define DIRECT_PIN_FEATURE/************************************ * * Scripting settings * * Scripting on ESP3D * ************************************/ /* Enable Autostart * Commands to run on startup * Separate commands with ';' or use file */ //#define ESP_AUTOSTART_SCRIPT \"M117 Mounting SD;M21\" //#define ESP_AUTOSTART_SCRIPT_FILE \"autoscript.gco\" /* Enable lua interpreter * Allow to use lua interpreter on ESP3D */ //#define ESP_LUA_INTERPRETER_FEATURE /* Gcode Host Feature * This feature allows to process Gcode files like macros. */ #define GCODE_HOST_FEATURESelect the target in VSCode [env:esp32dev] for ESP32 boards [env:esp32cam] for ESP32 Camera boards [env:esp32-TTGO_T_Display] for ESP32 boards with TTGO_T display [env:esp32-ST7789] for ESP32 boards with ST7789 display [env:esp32-s2]for ESP32-S2 boards [env:esp32-s3]for ESP32-S3 boards [env:esp32-c3]for ESP32-C3 boards [env:esp8266] for ESP8266 boards with 4MB flash [env:esp01s_160mhz] for ESP8266 boards with 1MB flash Connect your board Compile and flash your module Use Upload and monitor from the target environment you selected to compile and flash your module.",
    "description": "Prepare the development environment Download and install VSCode\nAdd PlatformIO IDE extension to VSCode\nOpen the ESP3D directory folder in VSCode The first time you open the project, vscode need to download all necessary files, so be patient\nESP3D configuration Open esp3d/configuration.h and set features you want.\nYou can also generate it, using the ESP3D configurator, which simplify a lot this step. /* Setup station as default, use AP mode first if not done * Note: need both defined to enable it * Uncomment and edit them to define */ //#define STATION_WIFI_SSID \"*********\" //#define STATION_WIFI_PASSWORD \"*********\" /* You can also use a different config file for SSID/password * Just save it in same location as this configuration.",
    "tags": [],
    "title": "VSCode \u0026 Platformio",
    "uri": "/esp3d/v3.x/installation/vscode-platformio/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e API",
    "content": "there are 2\nterminal websocket used to stream data to webUI and exchange internal data\ndata websocket used to exchange data with external client (not used by WebUI)\nTerminal websocket use subprotocol webui-v3 and port is same as web port but use address /ws\ntext mode Reserved messages between webui / ESP Format: \u003clabel\u003e:\u003cmessage\u003e\nfrom ESP to WebUI\ncurrentID:\u003cid\u003e Sent when client is connecting, it is the last ID used and become the active ID\nactiveID:\u003cid\u003e Broadcast current active ID, when new client is connecting, client without this is should close, ESP WS Server close all open WS connections but this one also\nPING:\u003ctime left\u003e:\u003ctime out\u003e It is a response to PING from client to inform the time left if no activity (see below)\nERROR:\u003ccode\u003e:\u003cmessage\u003e If an error raise when doing upload, it informs client it must stop uploading because sometimes the http answer is not possible, or cannot cancel the upload, this is a workaround as there is no API in current webserver to cancel active upload\nNOTIFICATION:\u003cmessage\u003e Forward the message sent by [ESP600] to webUI toast system\nSENSOR: \u003cvalue\u003e[\u003cunit\u003e] \u003cvalue2\u003e[\u003cunit2\u003e] ... The sensor connected to ESP like DHT22\nfrom WebUI to ESP\nPING:\u003ccurrent cookiesessionID / none \u003e if any, or “none” if none binary mode Reserved\nfrom ESP to WebUI stream data from ESP to WebUI\nfrom WEBUI to ESP\n[-\u003e File transfert from WebUI to ESP : not implemented yet]\nData websocket use sub protocol arduino and port same as web port but use address /wsdata\ntext mode This mode is used to transfert all GCODE commands and their answers from printer/cnc\nbinary mode This mode is used to transfert files to / from esp board\nit use frame of 1024 bytes, can be increased after test\nthe frame format is : 2 bytes: for frame type 2 bytes: for frame size to check some integrity, currently as already part of frame no checksume is used x bytes : extra data according frame type\nFrame types Query status frame type: client -\u003e esp Status Request\nS R 0 0 with hexadecimal values:\n0x53 0x52 0 0 Response frame use inverted header: Response Status\nR S 0 1 A with hexadecimal values:\n0x52 0x53 0 1 0x41 the first byte of answer is the state\nCode Hexa Meaning B 0x42 busy O 0x4F idle/ok E 0x45 error A 0x41 abort D 0x44 download ongoing U 0x55 upload ongoing extra data may be added :\nFor Error: error code and string, 1 byte : error code: 0-\u003e255 1 byte : string size 0-\u003e255 XX bytes for the string\nR S x x C 4 X .. .. For Upload: Upload informations: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size 4 bytes : currently processed bytes 4 bytes : last packet id processed\nR S x x U X .. .. X .. .. S1 S1 S1 S1 S2 S2 S2 S2 For Download: Download informations: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size 4 bytes : currently processed bytes 4 bytes : last packet id processed\nR S x x D X .. .. X .. .. S1 S1 S1 S1 S2 S2 S2 S2 Start upload frame header is :\nS U 0 0 the content is: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size\nS U x x D X .. .. X .. .. S1 S1 S1 S1 if answer is :\nU S 0 1 O it means transfert can start\nTransfert upload frame header is :\nU P x x ID ID ID ID .. .. 4 bytes is packet id XXXX bytes is data\nif packet is received the answer is\nP U 0 5 O ID ID ID ID Start dowload frame header is :\nS D 0 0 the content is: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size\nS D x x D X .. .. X .. .. S1 S1 S1 S1 if answer is :\nD S 0 1 O it means transfert can start\nTransfert download frame header is :\nD P x x ID ID ID ID .. .. 4 bytes is packet id XXXX bytes is data\nif packet is received the answer is\nP D 0 5 O ID ID ID ID Command frame header is :\nC M 0 1 X Commands:\nCode Hexa Meaning A 0x41 abort Abort command frame\nC M 0 1 A ",
    "description": "Web Sockets description, messages and parameters",
    "tags": [],
    "title": "Web Sockets",
    "uri": "/esp3d-tft/v1.x/documentation/api/websockets/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation \u003e API",
    "content": "there are 2\nterminal websocket used to stream data to webUI and exchange internal data\ndata websocket used to exchange data with external client (not used by WebUI)\nTerminal websocket use subprotocol webui-v3 the port depend on the firmware, please refer to the firmware documentation\ntext mode Reserved messages between webui / ESP Format: \u003clabel\u003e:\u003cmessage\u003e\nfrom ESP to WebUI\ncurrentID:\u003cid\u003e Sent when client is connecting, it is the last ID used and become the active ID\nactiveID:\u003cid\u003e Broadcast current active ID, when new client is connecting, client without this is should close, ESP WS Server close all open WS connections but this one also\nPING:\u003ctime left\u003e:\u003ctime out\u003e It is a response to PING from client to inform the time left if no activity (see below)\nERROR:\u003ccode\u003e:\u003cmessage\u003e If an error raise when doing upload, it informs client it must stop uploading because sometimes the http answer is not possible, or cannot cancel the upload, this is a workaround as there is no API in current webserver to cancel active upload\nNOTIFICATION:\u003cmessage\u003e Forward the message sent by [ESP600] to webUI toast system\nSENSOR: \u003cvalue\u003e[\u003cunit\u003e] \u003cvalue2\u003e[\u003cunit2\u003e] ... The sensor connected to ESP like DHT22\nfrom WebUI to ESP\nPING:\u003ccurrent cookiesessionID / none \u003e if any, or “none” if none binary mode Reserved\nfrom ESP to WebUI stream data from ESP to WebUI\nfrom WEBUI to ESP\n[-\u003e File transfert from WebUI to ESP : not implemented yet]\nData websocket use sub protocol arduino the port depend on the firmware, please refer to the firmware documentation\ntext mode This mode is used to transfert all GCODE commands and their answers from printer/cnc\nbinary mode This mode is used to transfert files to / from esp board (not implemented yet)\nit use frame of 1024 bytes, can be increased after test\nthe frame format is : 2 bytes: for frame type 2 bytes: for frame size to check some integrity, currently as already part of frame no checksume is used x bytes : extra data according frame type\nFrame types Query status frame type: client -\u003e esp Status Request\nS R 0 0 with hexadecimal values:\n0x53 0x52 0 0 Response frame use inverted header: Response Status\nR S 0 1 A with hexadecimal values:\n0x52 0x53 0 1 0x41 the first byte of answer is the state\nCode Hexa Meaning B 0x42 busy O 0x4F idle/ok E 0x45 error A 0x41 abort D 0x44 download ongoing U 0x55 upload ongoing extra data may be added :\nFor Error: error code and string, 1 byte : error code: 0-\u003e255 1 byte : string size 0-\u003e255 XX bytes for the string\nR S x x C 4 X .. .. For Upload: Upload informations: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size 4 bytes : currently processed bytes 4 bytes : last packet id processed\nR S x x U X .. .. X .. .. S1 S1 S1 S1 S2 S2 S2 S2 For Download: Download informations: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size 4 bytes : currently processed bytes 4 bytes : last packet id processed\nR S x x D X .. .. X .. .. S1 S1 S1 S1 S2 S2 S2 S2 Start upload frame header is :\nS U 0 0 the content is: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size\nS U x x D X .. .. X .. .. S1 S1 S1 S1 if answer is :\nU S 0 1 O it means transfert can start\nTransfert upload frame header is :\nU P x x ID ID ID ID .. .. 4 bytes is packet id XXXX bytes is data\nif packet is received the answer is\nP U 0 5 O ID ID ID ID Start dowload frame header is :\nS D 0 0 the content is: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size\nS D x x D X .. .. X .. .. S1 S1 S1 S1 if answer is :\nD S 0 1 O it means transfert can start\nTransfert download frame header is :\nD P x x ID ID ID ID .. .. 4 bytes is packet id XXXX bytes is data\nif packet is received the answer is\nP D 0 5 O ID ID ID ID Command frame header is :\nC M 0 1 X Commands:\nCode Hexa Meaning A 0x41 abort Abort command frame\nC M 0 1 A ",
    "description": "Web Sockets description, messages and parameters",
    "tags": [],
    "title": "Web Sockets",
    "uri": "/esp3d-webui/v3.x/documentation/api/websockets/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e API",
    "content": "there are 2\nterminal websocket used to stream data to webUI and exchange internal data\ndata websocket used to exchange data with external client (not used by WebUI)\nTerminal websocket use subprotocol webui-v3and port is web port +1 (e.g: 80+1=\u003e81)\ntext mode Reserved messages between webui / ESP Format: \u003clabel\u003e:\u003cmessage\u003e\nfrom ESP to WebUI\ncurrentID:\u003cid\u003e Sent when client is connecting, it is the last ID used and become the active ID\nactiveID:\u003cid\u003e Broadcast current active ID, when new client is connecting, client without this is should close, ESP WS Server close all open WS connections but this one also\nPING:\u003ctime left\u003e:\u003ctime out\u003e It is a response to PING from client to inform the time left if no activity (see below)\nERROR:\u003ccode\u003e:\u003cmessage\u003e If an error raise when doing upload, it informs client it must stop uploading because sometimes the http answer is not possible, or cannot cancel the upload, this is a workaround as there is no API in current webserver to cancel active upload\nNOTIFICATION:\u003cmessage\u003e Forward the message sent by [ESP600] to webUI toast system\nSENSOR: \u003cvalue\u003e[\u003cunit\u003e] \u003cvalue2\u003e[\u003cunit2\u003e] ... The sensor connected to ESP like DHT22\nfrom WebUI to ESP\nPING:\u003ccurrent cookiesessionID / none \u003e if any, or “none” if none binary mode Reserved\nfrom ESP to WebUI stream data from ESP to WebUI\nfrom WEBUI to ESP\n[-\u003e File transfert from WebUI to ESP : not implemented yet]\nData websocket use sub protocol arduino and port is any defined port (e.g: 8282)\ntext mode This mode is used to transfert all GCODE commands and their answers from printer/cnc\nbinary mode This mode is used to transfert files to / from esp board\nit use frame of 1024 bytes, can be increased after test\nthe frame format is : 2 bytes: for frame type 2 bytes: for frame size to check some integrity, currently as already part of frame no checksume is used x bytes : extra data according frame type\nFrame types Query status frame type: client -\u003e esp Status Request\nS R 0 0 with hexadecimal values:\n0x53 0x52 0 0 Response frame use inverted header: Response Status\nR S 0 1 A with hexadecimal values:\n0x52 0x53 0 1 0x41 the first byte of answer is the state\nCode Hexa Meaning B 0x42 busy O 0x4F idle/ok E 0x45 error A 0x41 abort D 0x44 download ongoing U 0x55 upload ongoing extra data may be added :\nFor Error: error code and string, 1 byte : error code: 0-\u003e255 1 byte : string size 0-\u003e255 XX bytes for the string\nR S x x C 4 X .. .. For Upload: Upload informations: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size 4 bytes : currently processed bytes 4 bytes : last packet id processed\nR S x x U X .. .. X .. .. S1 S1 S1 S1 S2 S2 S2 S2 For Download: Download informations: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size 4 bytes : currently processed bytes 4 bytes : last packet id processed\nR S x x D X .. .. X .. .. S1 S1 S1 S1 S2 S2 S2 S2 Start upload frame header is :\nS U 0 0 the content is: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size\nS U x x D X .. .. X .. .. S1 S1 S1 S1 if answer is :\nU S 0 1 O it means transfert can start\nTransfert upload frame header is :\nU P x x ID ID ID ID .. .. 4 bytes is packet id XXXX bytes is data\nif packet is received the answer is\nP U 0 5 O ID ID ID ID Start dowload frame header is :\nS D 0 0 the content is: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size\nS D x x D X .. .. X .. .. S1 S1 S1 S1 if answer is :\nD S 0 1 O it means transfert can start\nTransfert download frame header is :\nD P x x ID ID ID ID .. .. 4 bytes is packet id XXXX bytes is data\nif packet is received the answer is\nP D 0 5 O ID ID ID ID Command frame header is :\nC M 0 1 X Commands:\nCode Hexa Meaning A 0x41 abort Abort command frame\nC M 0 1 A ",
    "description": "Web Sockets description, messages and parameters",
    "tags": [],
    "title": "Web Sockets",
    "uri": "/esp3d/v3.x/documentation/api/websockets/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e API",
    "content": "there are 2\nterminal websocket used to stream data to webUI and exchange internal data\ndata websocket used to exchange data with external client (not used by WebUI)\nTerminal websocket use subprotocol webui-v3 and port is web port +1 (e.g: 80+1=\u003e81)\ntext mode Reserved messages between webui / ESP Format: \u003clabel\u003e:\u003cmessage\u003e\nfrom ESP to WebUI\ncurrentID:\u003cid\u003e Sent when client is connecting, it is the last ID used and become the active ID\nactiveID:\u003cid\u003e Broadcast current active ID, when new client is connecting, client without this is should close, ESP WS Server close all open WS connections but this one also\nPING:\u003ctime left\u003e:\u003ctime out\u003e It is a response to PING from client to inform the time left if no activity (see below)\nERROR:\u003ccode\u003e:\u003cmessage\u003e If an error raise when doing upload, it informs client it must stop uploading because sometimes the http answer is not possible, or cannot cancel the upload, this is a workaround as there is no API in current webserver to cancel active upload\nNOTIFICATION:\u003cmessage\u003e Forward the message sent by [ESP600] to webUI toast system\nSENSOR: \u003cvalue\u003e[\u003cunit\u003e] \u003cvalue2\u003e[\u003cunit2\u003e] ... The sensor connected to ESP like DHT22\nfrom WebUI to ESP\nPING:\u003ccurrent cookiesessionID / none \u003e if any, or “none” if none binary mode Reserved\nfrom ESP to WebUI stream data from ESP to WebUI\nfrom WEBUI to ESP\n[-\u003e File transfert from WebUI to ESP : not implemented yet]\nData websocket use sub protocol arduino and port is any defined port (e.g: 8282)\ntext mode This mode is used to transfert all GCODE commands and their answers from printer/cnc\nbinary mode This mode is used to transfert files to / from esp board\nit use frame of 1024 bytes, can be increased after test\nthe frame format is : 2 bytes: for frame type 2 bytes: for frame size to check some integrity, currently as already part of frame no checksume is used x bytes : extra data according frame type\nFrame types Query status frame type: client -\u003e esp Status Request\nS R 0 0 with hexadecimal values:\n0x53 0x52 0 0 Response frame use inverted header: Response Status\nR S 0 1 A with hexadecimal values:\n0x52 0x53 0 1 0x41 the first byte of answer is the state\nCode Hexa Meaning B 0x42 busy O 0x4F idle/ok E 0x45 error A 0x41 abort D 0x44 download ongoing U 0x55 upload ongoing extra data may be added :\nFor Error: error code and string, 1 byte : error code: 0-\u003e255 1 byte : string size 0-\u003e255 XX bytes for the string\nR S x x C 4 X .. .. For Upload: Upload informations: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size 4 bytes : currently processed bytes 4 bytes : last packet id processed\nR S x x U X .. .. X .. .. S1 S1 S1 S1 S2 S2 S2 S2 For Download: Download informations: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size 4 bytes : currently processed bytes 4 bytes : last packet id processed\nR S x x D X .. .. X .. .. S1 S1 S1 S1 S2 S2 S2 S2 Start upload frame header is :\nS U 0 0 the content is: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size\nS U x x D X .. .. X .. .. S1 S1 S1 S1 if answer is :\nU S 0 1 O it means transfert can start\nTransfert upload frame header is :\nU P x x ID ID ID ID .. .. 4 bytes is packet id XXXX bytes is data\nif packet is received the answer is\nP U 0 5 O ID ID ID ID Start dowload frame header is :\nS D 0 0 the content is: 1 byte : path size 0-\u003e255 XX bytes : the path string 1 byte : the filename size 0-\u003e255 xx bytes : filename string 4 bytes : total file size\nS D x x D X .. .. X .. .. S1 S1 S1 S1 if answer is :\nD S 0 1 O it means transfert can start\nTransfert download frame header is :\nD P x x ID ID ID ID .. .. 4 bytes is packet id XXXX bytes is data\nif packet is received the answer is\nP D 0 5 O ID ID ID ID Command frame header is :\nC M 0 1 X Commands:\nCode Hexa Meaning A 0x41 abort Abort command frame\nC M 0 1 A ",
    "description": "Web Sockets description, messages and parameters",
    "tags": [],
    "title": "Web Sockets",
    "uri": "/esp3dlib/v3.x/documentation/api/websockets/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e Notifications",
    "content": "Email Notification is using SMTP and HTTPS, so you need to collect the following information fof your email supplier\nsmtp server address and https port smtp username/ID smtp password ESP3D use the parameters as follow:\ntoken 1 = ID to login to your email supplier token 2 = Password to login to your email supplier token settings = the_recipient email#smtp_server:port where # and : are fields separators. For example: luc@gmail.com#smtp.gmail.com:465\n1 -Save the token 1, token 2 and token settings in ESP3D, and set EMAIL as notification supplier\n[ESP610]type=EMAIL T1=luc@gmail.com T2=mypassword TS=luc@gmail.com#smtp.gmail.com:465\n2 - Type [ESP610] to verify (T1 and T2 won’t be displayed)\n3 - Try to send message:\n[ESP600]Hi there, test from ESP3D\n4 - Important : if you are using Gmail there is an additional step, as by default https access is disabled.\ngo to : https://myaccount.google.com/lesssecureapps and allow less secure applications to connect ",
    "description": "Email Notification is using SMTP and HTTPS, so you need to collect the following information fof your email supplier\nsmtp server address and https port smtp username/ID smtp password ESP3D use the parameters as follow:\ntoken 1 = ID to login to your email supplier token 2 = Password to login to your email supplier token settings = the_recipient email#smtp_server:port where # and : are fields separators. For example: luc@gmail.com#smtp.gmail.com:465",
    "tags": [],
    "title": " Email Notification",
    "uri": "/esp3d-tft/v1.x/documentation/notifications/email_and_smtp/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Documentation \u003e Notifications",
    "content": "Email Notification is using SMTP and HTTPS, so you need to collect the following information fof your email supplier\nsmtp server address and https port smtp username/ID smtp password ESP3D use the parameters as follow:\ntoken 1 = ID to login to your email supplier token 2 = Password to login to your email supplier token settings = the_recipient email#smtp_server:port where # and : are fields separators. For example: luc@gmail.com#smtp.gmail.com:465\n1 -Save the token 1, token 2 and token settings in ESP3D, and set EMAIL as notification supplier\n[ESP610]type=EMAIL T1=luc@gmail.com T2=mypassword TS=luc@gmail.com#smtp.gmail.com:465\n2 - Type [ESP610] to verify (T1 and T2 won’t be displayed)\n3 - Try to send message:\n[ESP600]Hi there, test from ESP3D\n4 - Important : if you are using Gmail there is an additional step, as by default https access is disabled.\ngo to : https://myaccount.google.com/lesssecureapps and allow less secure applications to connect ",
    "description": "Email Notification is using SMTP and HTTPS, so you need to collect the following information fof your email supplier\nsmtp server address and https port smtp username/ID smtp password ESP3D use the parameters as follow:\ntoken 1 = ID to login to your email supplier token 2 = Password to login to your email supplier token settings = the_recipient email#smtp_server:port where # and : are fields separators. For example: luc@gmail.com#smtp.gmail.com:465",
    "tags": [],
    "title": " Email Notification",
    "uri": "/esp3d/v2.x/documentation/notifications/email_and_smtp/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e Notifications",
    "content": "Email Notification is using SMTP and HTTPS, so you need to collect the following information fof your email supplier\nsmtp server address and https port smtp username/ID smtp password ESP3D use the parameters as follow:\ntoken 1 = ID to login to your email supplier token 2 = Password to login to your email supplier token settings = the_recipient email#smtp_server:port where # and : are fields separators. For example: luc@gmail.com#smtp.gmail.com:465\n1 -Save the token 1, token 2 and token settings in ESP3D, and set EMAIL as notification supplier\n[ESP610]type=EMAIL T1=luc@gmail.com T2=mypassword TS=luc@gmail.com#smtp.gmail.com:465\n2 - Type [ESP610] to verify (T1 and T2 won’t be displayed)\n3 - Try to send message:\n[ESP600]Hi there, test from ESP3D\n4 - Important : if you are using Gmail there is an additional step, as by default https access is disabled.\ngo to : https://myaccount.google.com/lesssecureapps and allow less secure applications to connect ",
    "description": "Email Notification is using SMTP and HTTPS, so you need to collect the following information fof your email supplier\nsmtp server address and https port smtp username/ID smtp password ESP3D use the parameters as follow:\ntoken 1 = ID to login to your email supplier token 2 = Password to login to your email supplier token settings = the_recipient email#smtp_server:port where # and : are fields separators. For example: luc@gmail.com#smtp.gmail.com:465",
    "tags": [],
    "title": " Email Notification",
    "uri": "/esp3d/v3.x/documentation/notifications/email_and_smtp/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e Notifications",
    "content": "Email Notification is using SMTP and HTTPS, so you need to collect the following information fof your email supplier\nsmtp server address and https port smtp username/ID smtp password ESP3D use the parameters as follow:\ntoken 1 = ID to login to your email supplier token 2 = Password to login to your email supplier token settings = the_recipient email#smtp_server:port where # and : are fields separators. For example: luc@gmail.com#smtp.gmail.com:465\n1 -Save the token 1, token 2 and token settings in ESP3D, and set EMAIL as notification supplier\n[ESP610]type=EMAIL T1=luc@gmail.com T2=mypassword TS=luc@gmail.com#smtp.gmail.com:465\n2 - Type [ESP610] to verify (T1 and T2 won’t be displayed)\n3 - Try to send message:\n[ESP600]Hi there, test from ESP3D\n4 - Important : if you are using Gmail there is an additional step, as by default https access is disabled.\ngo to : https://myaccount.google.com/lesssecureapps and allow less secure applications to connect ",
    "description": "Email Notification is using SMTP and HTTPS, so you need to collect the following information fof your email supplier\nsmtp server address and https port smtp username/ID smtp password ESP3D use the parameters as follow:\ntoken 1 = ID to login to your email supplier token 2 = Password to login to your email supplier token settings = the_recipient email#smtp_server:port where # and : are fields separators. For example: luc@gmail.com#smtp.gmail.com:465",
    "tags": [],
    "title": " Email Notification",
    "uri": "/esp3dlib/v3.x/documentation/notifications/email_and_smtp/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Hardware \u003e ESP32-S3 boards",
    "content": " ESP32-S3 based + SDReader + PSRAM + 3.5’ TFT (480x320) with Capacitive touch screen Aliexpress Features ESP32-S3 dual-core Xtensa 32-bit LX7 microprocessor, up to 240 MHz with 384KB ROM, 512KB SRAM. 2.4GHz WiFi and Bluetooth 5 PSRAM: 2MB FLASH: 8MB Micro-SD card slot (SPI) 3.5-inch 480x320 TFT display - ST7796UI (8080 parallel bus - RGB565) Capacitive touch panel - ft5x06 (i2C 0x38) Audio (NS4168) 1 USB-C OTG (DFU/CDC) port Wakeup and reset buttons, Power switch Power Supply: 5V / 1A Dimension: 110 x 61 x 13.5mm 1 Debug interface (7pins): V5 - V3.3 - TX - RX - EN - GPIO 0 - GND / GPIO 14 1 Extended IO interface (8pins): V5 - GND - EXT_IO1- EXT_IO2- EXT_IO3- EXT_IO4- EXT_IO5- EXT_IO6 1 RS485 interface (4pins): RS485-A - RS485-B - GND - V5 Pins ESP Pin GPIO Description 1 GND Ground 2 GPIO04 LCD_RESET / TP_RST (LCD / Touch Screen) 3 GPIO05 TP_SCL (Touch Screen) 4 GPIO06 TP_SDA (Touch Screen) 5 GPIO07 TP_INT (Touch Screen) 6 EN (Debug Pin 5 / Reset Switch) 7 GPIO15 LCD_DB7 (LCD) 8 GPIO16 LCD_DB6 (LCD) 9 GPIO17 LCD_DB5 (LCD) 10 GPIO18 LCD_DB4 (LCD) 11 GPIO08 LCD_DB3 (LCD) 12 GPIO03 LCD_DB2 (LCD) 13 GPIO46 LCD_DB1 (LCD) 14 GPIO19 USB_DN (USB OTG) 15 GPIO20 USB_DP (USB OTG) 16 GPIO09 LCD_DB0 (LCD) 17 GPIO10 EXT_IO1 (Export IO) 18 GPIO11 EXT_IO2 (Export IO) 19 GPIO12 EXT_IO3 (Export IO) 20 GPIO13 EXT_IO4 (Export IO) 21 GPIO14 EXT_IO5 (Export IO) 22 GPIO21 EXT_IO6 (Export IO) 23 GPIO0 BOOT / LCD_RS (Debug Pin 6 / LCD) 24 GPIO47 LCD_WR (LCD) 25 GPIO48 LCD_TE (LCD) 26 VCC +3V3 27 GPIO45 BL_PWM (LCD Blacklight) 28 GPIO35 LRCK (Audio) 29 GPIO36 BCLK (Audio) 30 GPIO37 DOUT (Audio) 31 GPIO38 SD_DO (MISO SD card) 32 GPIO39 SD_CLK (SD card) 33 RX0 RXD0 3.3V TTL Debug Pin 4 34 TX0 TXD0 3.3V TTL Debug Pin 3 35 GPIO40 SD_DI (MOSI SD card) 36 GND Ground 37 GPIO41 SD_CS (SD card) 38 GPIO42 TXD (RS485) 39 GPIO02 RTS (RS485) 40 GPIO01 RXD (RS485) 41 GND Ground ",
    "description": "ESP32-S3 3.5' (480x320) TFT",
    "tags": [],
    "title": "3.5' ZX3D50CE02S-USRC-4832",
    "uri": "/esp3d-tft/v1.x/hardware/esp32-s3/panlee/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation",
    "content": "\rNote\rThe SD transfer is current supported on these configurations:\nMK WiFi modules using MKS Serial Protocol (~110KB/s) MKS Robin MKS TFT Using some sharing solution like : Panucatt WiFi Backpack Panucatt Azteeg X5 ESP3D wireless module Using a direct connection to SD but content is only accessible by ESP and not usable by connected system, like: on ESPCam32 Clarification\rThe M28/M29 protocol is no more supported on ESP3D V3.0, this protocol is slow like hell (0.4 KB/S = 40min for 1MB) so not really usable, often no well managed by FW and suject to error due to external queries.\nPeople usualy after tested once they never use it again and are disappointed and complaining about it.\nSo instead of keeping it using flash space and development time, and having to support it, it has been removed from 3.0, no more M28/M29 support is planned neither add it back.",
    "description": "SD Card usage examples",
    "tags": [],
    "title": "About SD card",
    "uri": "/esp3d/v3.x/documentation/sdtransfer/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Documentation",
    "content": "Web Handlers / (GET) root is the default handler where all files will be served, if no file is defined, it looks for index.html or index.html.gz (compressed) if you call specific file, it will look for the filename and filename.gz (compressed) if no file is defined and there is not index.html(.gz) it will display embedded page another way to show the embedded page is /?forcefallback=yes\n/files (GET/POST) this handler handle all commands for FS, including upload on FS.\npossible options/arguments are:\nquiet=yes can be used when you don’t want list files but just upload them path=... define the path to the file action=... define the action to execute which can be:\n- delete\ndelete the file defined by filename=... it will also use path=... to do full path\n- deletedir\ndelete the directory defined by filename=... it will also use path=... to do full path - createdir create the directory defined by filename=... it will also use path=... to do full path \u003cfilename\u003eS=... give the size of uploaded file with name, need to be set before file is set in upload, POST only the output is a json file:\n```\r{ \"files\":[ //the files list { \"name\":\"index.html.gz\", //the name of the file\r\"size\":\"83.46 KB\", //the formated size of the file \"time\":\"2022-09-04 11:56:05\" //the time when the file was modified last time, this one is optional and depend on (FILESYSTEM_TIMESTAMP_FEATURE)\r},\r{\r\"name\":\"subdir\", //the name of the file / directory\r\"size\":\"-1\", //the size is -1 because it is a directory\r\"time\":\"\" //no time for directories optional as depend on (FILESYSTEM_TIMESTAMP_FEATURE)\r}\r],\r\"path\":\"/\", //current path\r\"occupation\":\"52\", //% of occupation\r\"status\":\"subdir created\", //status \"total\":\"192.00 KB\", //Formated total space of Filesystem\r\"used\":\"100.00 KB\" //Formated used space of Filesystem\r}\r```\r/upload_serial (POST) this handler is for uploading files to printer SD using M28/M29 protocol\n/command (GET) this handler is for all commands the parameter is cmd=... if it is an [ESPXXX] command the answer is the [ESPXXX] response if it is not an [ESPXXX] command the answer is ESP3D says: command forwarded and can be ignored\n/login (GET/POST) this handler is for authentication function if enabled possible options/arguments are:\n- DISCONNECT=YES it will clear current session, remove authentication cookie, set status to disconnected and response code to 401 - SUBMIT=YES to login it will need also PASSWORD=... and USER=..., the answer will be 200 if success and 401 if failed if user is already authenticated it can use NEWPASSWORD=... instead of PASSWORD=... to change his password, if successful answer will be returned with code 200, otherwise code will be 500 if change failed or if password format is invalid\n/config (GET) this handler is a shortcut to [ESP420] command in text mode, to get output in json add json=yes\n/updatefw (POST) this handler is for FW upload and update\n/description.xml (GET) this handler is for SSDP if enabled to present device informations\n\u003croot xmlns=\"urn:schemas-upnp-org:device-1-0\"\u003e\r\u003cspecVersion\u003e\r\u003cmajor\u003e1\u003c/major\u003e\r\u003cminor\u003e0\u003c/minor\u003e\r\u003c/specVersion\u003e\r\u003cURLBase\u003ehttp://192.168.2.178:80/\u003c/URLBase\u003e\r\u003cdevice\u003e\r\u003cdeviceType\u003eurn:schemas-upnp-org:device:upnp:rootdevice:1\u003c/deviceType\u003e\r\u003cfriendlyName\u003eesp3d\u003c/friendlyName\u003e\r\u003cpresentationURL\u003e/\u003c/presentationURL\u003e\r\u003cserialNumber\u003e52332\u003c/serialNumber\u003e\r\u003cmodelName\u003eESP Board\u003c/modelName\u003e\r\u003cmodelDescription/\u003e\r\u003cmodelNumber\u003eESP3D 3.0\u003c/modelNumber\u003e\r\u003cmodelURL\u003ehttps://www.espressif.com/en/products/devkits\u003c/modelURL\u003e\r\u003cmanufacturer\u003eEspressif Systems\u003c/manufacturer\u003e\r\u003cmanufacturerURL\u003ehttps://www.espressif.com\u003c/manufacturerURL\u003e\r\u003cUDN\u003euuid:38323636-4558-4dda-9188-cda0e600cc6c\u003c/UDN\u003e\r\u003cserviceList/\u003e\r\u003ciconList/\u003e\r\u003c/device\u003e\r\u003c/root\u003eCaptive portal bypass handlers to avoid a redirect to index.html and so a refresh of the page, some classic handler have been added so they all go to / handler actually\n/generate_204 /gconnectivitycheck.gstatic.com /fwlink/ Web Socket Only for WebUI not for bridge data\nuse subprotocol arduino and web port +1 (e.g: 80+1=\u003e81)\ntext mode Reserved messages between webui / ESP Format: \u003clabel\u003e:\u003cmessage\u003e\nfrom ESP to WebUI\nCURRENT_ID:\u003cid\u003e Sent when client is connecting, it is the last ID used and become the active ID\nACTIVE_ID:\u003cid\u003e Broadcast current active ID, when new client is connecting, client without this is should close, ESP WS Server close all open WS connections but this one also\nERROR:\u003ccode\u003e:\u003cmessage\u003e If an error raise when doing upload, it informs client it must stop uploading because sometimes the http answer is not possible, or cannot cancel the upload, this is a workaround as there is no API in current webserver to cancel active upload\nDHT: \u003cvalue\u003eC The DHT sensor connected to ESP like DHT22\nbinary mode Reserved\nfrom ESP to WebUI serial stream data from ESP to WebUI\nfrom WEBUI to ESP\n[Not used]",
    "description": "API description",
    "tags": [],
    "title": "API",
    "uri": "/esp3d/v2.x/documentation/api/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "The board has footprint for an ESP01 connector\nBoard pins voltage 3.3v Board firmware Smoothieware Board configuration note Enable second serial port in the config.txt ESP3D configuration note Raw serial, no SD ",
    "description": "Socket available",
    "tags": [],
    "title": "AZSMZ LCD board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/azsmz_lcd/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 2.1.X \u003e Documentation",
    "content": "To be able to generate file from sources you need to install nodejs, gulp and some addons. 1 - Install current nodejs LTS (v10.15.3) 2 - Install gulp-cli globaly npm install --global gulp-cli\n3 - Install gulp globaly npm install --global gulp@4.0.0\n4 - Install all addons npm install\nYou should have something like this :\nE:\\github\\ESP3D-WEBUI\u003enode -v\rv10.14.0\rE:\\github\\ESP3D-WEBUI\u003egulp -v\r[22:17:03] CLI version 2.0.1\r[22:17:03] Local version 4.0.0\rE:\\github\\ESP3D-WEBUI\u003enpm -v\r6.4.15 - Do the code modification you want, then launch gulp package.\nE:\\github\\ESP3D-WEBUI\u003egulp package\r[15:17:13] Using gulpfile E:\\github\\ESP3D-WEBUI\\gulpfile.js\r[15:17:13] Starting 'package'...\r[15:17:13] Starting 'clean'...\r[15:17:13] Finished 'clean' after 5.6 ms\r[15:17:13] Starting 'lint'...\r[15:17:13] Finished 'lint' after 144 ms\r[15:17:13] Starting 'Copy'...\r[15:17:13] Finished 'Copy' after 21 ms\r[15:17:13] Starting 'concatApp'...\r[15:17:14] Finished 'concatApp' after 53 ms\r[15:17:14] Starting 'includehtml'...\r[15:17:14] Finished 'includehtml' after 7.91 ms\r[15:17:14] Starting 'includehtml'...\r[15:17:14] Finished 'includehtml' after 6.18 ms\r[15:17:14] Starting 'replaceSVG'...\r[15:17:14] Finished 'replaceSVG' after 5.36 ms\r[15:17:14] Starting 'minifyApp'...\r\\style.css: 125691\r\\style.css: 102958\r[15:17:16] Finished 'minifyApp' after 2.2 s\r[15:17:16] Starting 'smoosh'...\r[15:17:16] Finished 'smoosh' after 117 ms\r[15:17:16] Starting 'compress'...\r[15:17:16] Finished 'compress' after 26 ms\r[15:17:16] Starting 'clean2'...\r[15:17:16] Finished 'clean2' after 3.83 ms\r[15:17:16] Finished 'package' after 2.61 sIf no issue, a file called index.html.gz will be generated at the root of repository, so you just need to upload it like described in installation page\nBy default is build a multilanguage file, if file is too big for your flash size you can build with only english and one additional language:\ngulp package --lang en will only build english gulp package --lang fr will only build french + english gulp package --lang es will only build spanish + english gulp package --lang it will only build italian + english gulp package --lang de will only build german + english etc… ",
    "description": "Commands and syntax",
    "tags": [],
    "title": "Compilation",
    "uri": "/esp3d-webui/v2.x/documentation/compilation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X",
    "content": "The documentation section will help you on: ESP3D commandsSyntax and parameters\nAuthenticationWhat is authentication in ESP3D-TFT?\nNotificationsSetup and configuration\nCamera supportCamera configuration\nCompilation GuideCompilation Guide\nUpdate supportUpdate feature description\nAbout FTPFTP usage and configuration\nAbout WebDAVWebDav usage and API\nFAQFrequent asked questions and their answers\nAPIAPI description",
    "description": "The documentation section will help you on: ESP3D commandsSyntax and parameters\nAuthenticationWhat is authentication in ESP3D-TFT?\nNotificationsSetup and configuration\nCamera supportCamera configuration\nCompilation GuideCompilation Guide\nUpdate supportUpdate feature description\nAbout FTPFTP usage and configuration\nAbout WebDAVWebDav usage and API\nFAQFrequent asked questions and their answers\nAPIAPI description",
    "tags": [],
    "title": "Documentation",
    "uri": "/esp3d-tft/v1.x/documentation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 2.1.X",
    "content": "Browser compatibility for ESP3D 2.1.X OS Browser Support Comment Action Win7/Win10 IE 11 Limited Dashboard is has one column due to no grid layout support Defined as limitation Win7 Safari 5.1.7 2012 Low Dashboard is has one column due to no grid layout support / not good SVG support so no Jog UI Defined as limitation Win10 Edge Ok Win7 /Win10 Chrome Ok Win7 Opera Ok Win7 Firefox Ok Android Chrome Ok OSX Safari 11.1.2 2018 Ok The documentation section will help you on: TranslationsSteps and supported languages\nCamera supportCamera configuration\nCompilationCommands and syntax",
    "description": "Browser compatibility for ESP3D 2.1.X OS Browser Support Comment Action Win7/Win10 IE 11 Limited Dashboard is has one column due to no grid layout support Defined as limitation Win7 Safari 5.1.7 2012 Low Dashboard is has one column due to no grid layout support / not good SVG support so no Jog UI Defined as limitation Win10 Edge Ok Win7 /Win10 Chrome Ok Win7 Opera Ok Win7 Firefox Ok Android Chrome Ok OSX Safari 11.",
    "tags": [],
    "title": "Documentation",
    "uri": "/esp3d-webui/v2.x/documentation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X",
    "content": "The documentation section will help you on: TranslationsSteps and supported languages\nCompilation GuideCompilation Guide\nUpdate supportUpdate feature description\nCamera supportCamera configuration\nExtra ContentExtra Content Documentation\nMacros DocumentationMacros Documentation\nPolling commandsList of polling commands\nThemesThemes description\nAPIAPI description",
    "description": "The documentation section will help you on: TranslationsSteps and supported languages\nCompilation GuideCompilation Guide\nUpdate supportUpdate feature description\nCamera supportCamera configuration\nExtra ContentExtra Content Documentation\nMacros DocumentationMacros Documentation\nPolling commandsList of polling commands\nThemesThemes description\nAPIAPI description",
    "tags": [],
    "title": "Documentation",
    "uri": "/esp3d-webui/v3.x/documentation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X",
    "content": "The documentation section will help you on: ESP3D commandsSyntax and parameters\nNotificationsSetup and configuration\nAPIAPI description\nAbout SD cardSD Card support",
    "description": "The documentation section will help you on: ESP3D commandsSyntax and parameters\nNotificationsSetup and configuration\nAPIAPI description\nAbout SD cardSD Card support",
    "tags": [],
    "title": "Documentation",
    "uri": "/esp3d/v2.x/documentation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X",
    "content": "The documentation section will help you on: ESP3D commandsSyntax and parameters\nAuthenticationWhat is authentication in ESP3D?\nNotificationsSetup and configuration\nAbout SD cardSD Card usage examples\nCamera supportCamera configuration\nCompilation GuideCompilation Guide\nUpdate supportUpdate feature description\nAbout FTPFTP usage and configuration\nAbout WebDAVWebDav usage and configuration\nFAQFrequent asked questions and their answers\nAPIAPI description",
    "description": "The documentation section will help you on: ESP3D commandsSyntax and parameters\nAuthenticationWhat is authentication in ESP3D?\nNotificationsSetup and configuration\nAbout SD cardSD Card usage examples\nCamera supportCamera configuration\nCompilation GuideCompilation Guide\nUpdate supportUpdate feature description\nAbout FTPFTP usage and configuration\nAbout WebDAVWebDav usage and configuration\nFAQFrequent asked questions and their answers\nAPIAPI description",
    "tags": [],
    "title": "Documentation",
    "uri": "/esp3d/v3.x/documentation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X",
    "content": "The documentation section will help you on: ESP3D commandsSyntax and parameters",
    "description": "The documentation section will help you on: ESP3D commandsSyntax and parameters",
    "tags": [],
    "title": "Documentation",
    "uri": "/esp3dlib/v1.x/documentation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X",
    "content": "The documentation section will help you on: ESP3D commandsSyntax and parameters\nAuthenticationWhat is authentication in ESP3D?\nNotificationsSetup and configuration\nCompilation GuideCompilation Guide\nUpdate supportUpdate feature description\nAbout FTPFTP usage and configuration\nAbout WebDAVWebDav usage and configuration\nFAQFrequent asked questions and their answers\nAPIAPI description",
    "description": "The documentation section will help you on: ESP3D commandsSyntax and parameters\nAuthenticationWhat is authentication in ESP3D?\nNotificationsSetup and configuration\nCompilation GuideCompilation Guide\nUpdate supportUpdate feature description\nAbout FTPFTP usage and configuration\nAbout WebDAVWebDav usage and configuration\nFAQFrequent asked questions and their answers\nAPIAPI description",
    "tags": [],
    "title": "Documentation",
    "uri": "/esp3dlib/v3.x/documentation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-C3 boards",
    "content": "Specifications\nSpecs ESP32-C3 (single-core) with 4MB flash memory, ceramic antenna, USB port is USB not UART Warning\rThis board has been reporting having hardware issues, please check the forum for more information.\nA workaround is to add or enable in configuration.h:\n#define ESP32_WIFI_TX_POWER WIFI_POWER_15dBm\nYou may also need to lower the value if not working, the possible values are WIFI_POWER_5dBm, WIFI_POWER_8_5dBm, WIFI_POWER_15dBm",
    "description": "ESP-C3-Super-Mini",
    "tags": [],
    "title": "ESP-C3-Super-Mini",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-c3/esp-c3-super-mini/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 in ESP01 format (8 pins, VCC/CH_DP internally bridged ) with 1MB flash memory, ceramic antenna Note\rBecause flash is only 1MB, OTA/Web Update are not possible\nPinout 1 2 3 4 GND IO02 IO0 RXD TXD CH_PD RESET VCC ",
    "description": "ESP01S 1M",
    "tags": [],
    "title": "ESP01S 1M",
    "uri": "/esp3d/v2.x/hardware/esp8266/esp01s-1m/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 in ESP01 format (8 pins, VCC/CH_DP internally bridged ) with 1MB flash memory, ceramic antenna Note\rBecause flash is only 1MB, OTA/Web Update are not possible\nPinout 1 2 3 4 GND IO02 IO0 RXD TXD CH_PD RESET VCC ",
    "description": "ESP01S 1M",
    "tags": [],
    "title": "ESP01S 1M",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/esp01s-1m/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware",
    "content": "\rDev Kit V1Dev Kit V1\nDev Kit C V4Dev Kit C V4\nHeltec Dev boardHeltec Dev board",
    "description": " ",
    "tags": [],
    "title": "ESP32 boards",
    "uri": "/esp3d/v2.x/hardware/esp32/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards",
    "content": "\rDev Kit V1Dev Kit V1\nDev Kit C V4Dev Kit C V4\nTTGO/LILYGO V7 miniTTGO/LILYGO V7 mini\nWemos D1 R32Wemos D1 R32\nTTGO T8TTGO T8\nLolin D32 ProLolin D32 Pro\nHeltec Dev boardHeltec Dev board\nTTGO T DisplayTTGO Display\nTTGO T96 OledTTGO T96 Oled\nBigtreetech ESP32E moduleBigtreetech ESP32UEmodule\nBigtreetech ESP32U moduleBigtreetech ESP32U module\nESP32-CamESP32-Cam\nOlimex ESP32-GatewayOlimex ESP32-Gateway\nOlimex ESP32-POEOlimex ESP32-POE\nWT32-ETH1WT32-ETH1",
    "description": " ",
    "tags": [],
    "title": "ESP32 boards",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem",
    "content": "What is ESP3D-TFT ? ESP3D-TFT is a firmware for ESP32 boards from espressif with a TFT and a SD Card, allowing to control a 3D Printer or CNC by serial or USB depending of ESP32 board used.\nFirmware support different target firmwares according version.\nESP3D-TFT use idf framework and expressif Visual Code extension.\nThere is not yet currently any production version, but only one development version - actively developed.\nCybersecurity concerns If you plan to have access to you ESP from outside of your private network than you need to apply some basic security rules to avoid anybody to be able to access your ESP.\nDisclaimer : this is for reference - you are responsible of your board and internet network, we are not responsible for any damage to any of your network appliances.\nRecommendations Following steps must be done before your ESP is visible from public internet:\nActivate authentication in comfiguration file before flashing Change default user and password (this can be done with commands or webui) Is also strongly recommended to:\nUse strong passwords Use unique passwords, not same as for other accounts Change password regularly Configure box to redirect a different port than 80 to the port 80 of ESP Use DMZ feature of your box Additional tips Remember the web server is not https, this means the server will never be fully secure. In particular, avoid to connect to your printer from any public network you do not own. Stick to your 4G network or other safe places to avoid MITM attack ",
    "description": "What is ESP3D-TFT ? ESP3D-TFT is a firmware for ESP32 boards from espressif with a TFT and a SD Card, allowing to control a 3D Printer or CNC by serial or USB depending of ESP32 board used.\nFirmware support different target firmwares according version.\nESP3D-TFT use idf framework and expressif Visual Code extension.\nThere is not yet currently any production version, but only one development version - actively developed.\nCybersecurity concerns If you plan to have access to you ESP from outside of your private network than you need to apply some basic security rules to avoid anybody to be able to access your ESP.",
    "tags": [],
    "title": "ESP3D-TFT",
    "uri": "/esp3d-tft/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-S3 boards",
    "content": "Github\nSpecs ESP32-S3 with 8MB flash memory, 8MB PSRAM (opi), ceramic antenna, RGB led, Camera and SD card reader (SDIO 1bit) Pinout SD:\nFunction GPIO CMD 38 CLK 39 D0 40 Camera: CAMERA_MODEL_ESP32S3_EYE\nRGB Led: WS2812_PIN 48\nWarning\rThis board may have a significant grounding or EMI issue.\nIf you experience poor performance when PSRAM is enabled, such as the web UI taking 20 seconds to load in the browser or camera lag, you can try a workaround:\nPlug the board into a breadboard, making sure that each pin does not connect to any others, in order to shield the external pins. Additionally, apply pressure to the ESP shield with your finger. The performance should return to normal within a couple of seconds.\nSolution found by @levak",
    "description": "Freenove ESP32 S3",
    "tags": [],
    "title": "Freenove ESP32 S3",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-s3/freenove/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Installation",
    "content": "Connection between ESP and printer board needs 4 wires:\nESP Tx needs to connect to Rx on MCU of printer board. ESP Rx needs to connect to Tx on MCU of printer board. You also need to power supply ESP board with with GND and 3V3 or 5V. Connecting ESP board to target board Be aware that ESP MCU is 3.3V on GPIO pin and some target board can be 3.3V and others 5V, so you may not be able to directly connect ESP board to target board.\nDisclaimer : this wiki is for reference - you are responsible of your board supporting or not 5V, we are not responsible for any damage of wrong wiring.\nESP32 and ESP8266 MCU are only supporting 3.3V. Power supply them with 5V will likelly fry them immediatelly. As MCU is supplied at 3.3V, Tx and Rx signals will be at 3.3V even when board is supplied with 5V. Wether Rx pin is supporting 5V is controversial so we will keep on the safe side and only take datahseet as reference. It’s not recommended to have any signal (including Rx) be higher than power supply (3.3V here).\nThere are several points to take care. One should check that\nMCU1 Tx voltage is lower than MCU2 supply voltage Voh_min of Tx is higher than Vih_min of Rx (to check both ways) Vol_max of Tx is lower than Vil_max of Rx (to check both ways) 1 is mandatory and resistor voltage divider bridge or level shiffter is recommended\n2 \u0026 3 are not destructive there is just a slight risk signals are not read correctly. But it will work in most case as the limit values given by datasheets are rarelly met in mild conditions (using near 25°C and low current flowing from Tx to Rx)\nFor the divider bridge a value of R1=1k and R2=2.2k will be fine. You could also use 10k and 22k or anything near a factor 2.\nConnection diagrams for some printers and ESP boards Printer motherboards Anet A8 boards Anycubic i3 mega - Trigorilla 8bit board AZSMZ LCD board AZSMZ-mini board Azteeg X5 mini board BIQU KFB2.0 board Creality CR10 Ender 3 board Creality Ender 4 board Davinci 1.0/2.0 board Davinci 1.0A board MKS boards MKS Smoothieware board RADDS board RAMPS 1.4/Re-ARM board Smoothieboard board SKR Mini E3 board Weedo Tina2 board For printer boards not listed here ESP boards ESP-01 ESP-01 serial wifi module ESP-12E/F ESP 12F serial wifi module ESP32-Cam NodeMCU V2/V3 Sonoff Wemos D1 mini Printer motherboards Anet boards up to v1.5 Step 1 You will also have to unsolder the resistors R52 and R53 – they are zero ohm resistors, and serve no other purpose than connecting the atmega chip directly to the onboard USB to UART converter (the CH340 chip). Do it VERY careful – you don’t want to damage your board. If you don’t feel confident – don’t do it.\nStep 2 Now prepare the printer’s motherboard. It requires a simple modification, that does not interfere with it’s operation afterwards – just solder 3 pin x 2 row male header on J8, and add 2 jumpers (or jumper wires) as shown on the picture:\nStep 3 Connect the ESP to J3 repsecting pinout\nESP J3 Tx Rx Rx Tx GND GND VCC 3.3V CH_PD 3.3V For more Info check lokster | space\nFor connecting version 1.7 Anet boards Unlike older boards this board does not require you to remove any resistors.\nYou will have to solder two wires from number 9 and number 10 its recommender to connect these to pin 1 and 2 of J3 connector.\nAnycubic i3 mega - Trigorilla 8bit board To connect the ESP12e to the UART0. (Credits:197-murdock).\n(Green = RX, Blue = TX)\n5V (buck to 3.3v if directly connect to ESP - most development ESP boards already have this voltage limited built-in - but check!) and GND can be taken from the AUX3 exposed connector.\nUART0 is normally used by USB port so don’t use both together - so this hack piggybacks on that same port at UART level.\nAZSMZ LCD board AZSMZ-mini board If you don’t have the soldering skills to grab the connectors from the unpopulated ethernet connection, you can also get 3.3v and GND from the ISP header (bottom left on the diagram above).\nAzteeg X5 mini board BIQU KFB2.0 board all in one Ramps1.4/Mega2560 R3 controller based\nCreality CR10 Ender 3 board For the Sanguino based CR-10 and Ender printers you will need to solder to any of the via circled (can also be done in the backside of board), or to the legs of the Arduino or ftdi. Connect TX from the board to RX of Wemos D1 mini and RX from board to TX of Wemos D1 mini. 5v and GND are located in the six pin header next to the LCD connector.\nSince soldering might be difficult because the solder points are so close to each other, another option is to scrape off the insulation from the traces on the backside and solder there. Be extra careful not to scrape the surrounding ground plane. You need suitable fine scraping tools for this. The picture below shows an Ender-2 PCB.\nCreality Ender 4 board You will need to solder to small circle, or to the legs of the ATmega2560 (RXD0 pin 2, TXD0 pin 3)\nDavinci 1.0/2.0 board Davinci 1.0A board Alternate Module placement for increased WiFi range (outside metal chassis, antenna has vertical polarization)\nMKS boards To connect the ESP3D to the MKS GEN v1.2 (but the v1.3 and above 1.4 is the most used today).\nAn ESP12E with the standard schematics, the two resistor connected to the RX pin are substituted by a 1N4148 diode, like in the Adafruit Huzzah board.\nESP12E is connected to the AUX1\nESP12E RX is connected to the pin NEAR GND of the upper row (Marked TXD on pinout.)\nESP12E TX is connected to the adiacent pin at the end of the upper row (Marked RXD on pinout.)\nMKS Smoothieware board RADDS board RAMPS 1.4/Re-ARM board Ramps 1.4 can be used on Arduino Mega (repetier/marlin) and Re-ARM for ramps boards (smoothieware/marlin)\nAlternative pins if use Re-ARM (J4/UART port)\nSmoothieboard board SKR Mini E3 board This board is from Bigtreetech and went through various hardware revisions; all of them still feature a TFT pin header which is where you can tap the TX and RX needed. The wiring below is made with a 1.2 board, but the same applies for the other revisions as well; if you need the exact schematic for your mainboard version, you can check Bigtreetech’s github repository.\nYou literally cannot miss it because the TFT connector is labeled on the board; you can use dupont connectors for the wiring job, no soldering skills needed as long as your ESP comes with pre soldered headers. Just a heads up: the TFT connector provides 5V DC, so be sure to provide them on the correct ESP pin and, most importantly, if your ESP can work with 5 volts as input. You should also pay attention on the board orientation in the schematic, although I oriented it the same way as the actual picture on the left so it’s easier for you.\nWeedo Tina2 board This printer is also brand labelled as Monoprice MP cadet 3D printer\nIn marlin this connection is serial port 3.\nNote the Mega2560 is 5V powered and ESP is 3V3 powered.\nFor printer boards not listed here Vast majority of printers have an USB port that is converted to UART before going to MCU. Many printers also have additional (unused) UART port you can use. When possible, always use the additional port for connecting ESP to printer board. When no additional UART port is available you might use the Tx and Rx lines between USB/UART converter and MCU but it’s recommended to cut (in a reversible way) the line to USB/UART converter to avoid conflicts.\nIf the board is ATmega based the simplest way to find a usable UART port for the ESP is to open ATmega datasheet.\nESP boards ESP-01 Use GPIO2 to ground to reset all settings in hard way - 2-6 sec after boot / not before!! Set GPIO2 to ground before boot change boot mode and go to special boot that do not reach FW. Currently boot take 10 sec - giving 8 seconds to connect GPIO2 to GND and do an hard recovery for settings Use GPIO0 to ground to be in update mode ESP-01 serial wifi module more info about the Breakout PCB: keyestudio\nESP-12E/F ESP need 3.3v, it is not 5v tolerant, if printer board use more than 3.3V like 5V on ramps.\nyou can also use Logic LevelConverter Bi-Directional\nIn order to flash some ESP12E/F boards via their UART interface, the following pins need to be connected:\nVCC to GPIO2 GND to GPIO0 This has been tested with ESP-12-E boards labeled “ESP8266 For ESP3D FYSETC.COM”\nESP 12F serial wifi module ESP-12F based serial wifi module (eg from aliexpress ) contains built in 2-way levelshifter/bi-directional logic level converter. So it can be powered via 5V uart from the target’ motherboard.\nWe need to manualy ground the IO0 while powering up to start in flash mode while powering up (there is no switch for that, neither for reset) Use FTDI adapter as usb2serial Need to see in console/serial monitor boot mode is (1,7). baudrate: 74880 rst cause:2, boot mode:(3,7) Then flash like other esp based board for esp3d ESP32-Cam Note: 5V is power supply input and 3V3 is output from regulator. UART Tx and RX signals will be 3.3V\nNodeMCU V2/V3 Sonoff Relay is connected by GPIO12, it can be handled using ESP201 command:\n*Get/Set pin value\r[ESP201]P\u003cpin\u003e V\u003cvalue\u003e [PULLUP=YES RAW=YES]\rif no V\u003cvalue\u003e get P\u003cpin\u003e value\rif V\u003cvalue\u003e 0/1 set INPUT_PULLUP value, but for GPIO16 INPUT_PULLDOWN_16\rGPIO1 and GPIO3 cannot be used as they are used for serial\rif PULLUP=YES set input pull up, if not set input\rif RAW=YES do not set pinmode just read value\rSo [ESP201]P12 V0 should be off and [ESP201]P12 V1 should be on\nWemos D1 mini Connection with logic level conveter:\nexample:\nprinted cases:\nhttps://www.thingiverse.com/thing:4128593 https://www.thingiverse.com/thing:2671591 ",
    "description": "Connection between ESP and printer board needs 4 wires:\nESP Tx needs to connect to Rx on MCU of printer board. ESP Rx needs to connect to Tx on MCU of printer board. You also need to power supply ESP board with with GND and 3V3 or 5V. Connecting ESP board to target board Be aware that ESP MCU is 3.3V on GPIO pin and some target board can be 3.",
    "tags": [],
    "title": "Hardware connection",
    "uri": "/esp3d/v2.x/installation/wiring/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Installation",
    "content": "Connection between ESP and printer board needs 4 wires:\nESP Tx needs to connect to Rx on MCU of printer board. ESP Rx needs to connect to Tx on MCU of printer board. You also need to power supply ESP board with with GND and 3V3 or 5V. Connecting ESP board to target board Be aware that ESP MCU is 3.3V on GPIO pin and some target board can be 3.3V and others 5V, so you may not be able to directly connect ESP board to target board.\nDisclaimer : this wiki is for reference - you are responsible of your board supporting or not 5V, we are not responsible for any damage of wrong wiring.\nESP32 and ESP8266 MCU are only supporting 3.3V. Power supply them with 5V will likelly fry them immediatelly. As MCU is supplied at 3.3V, Tx and Rx signals will be at 3.3V even when board is supplied with 5V. Wether Rx pin is supporting 5V is controversial so we will keep on the safe side and only take datahseet as reference. It’s not recommended to have any signal (including Rx) be higher than power supply (3.3V here).\nThere are several points to take care. One should check that\nMCU1 Tx voltage is lower than MCU2 supply voltage Voh_min of Tx is higher than Vih_min of Rx (to check both ways) Vol_max of Tx is lower than Vil_max of Rx (to check both ways) 1 is mandatory and resistor voltage divider bridge or level shiffter is recommended\n2 \u0026 3 are not destructive there is just a slight risk signals are not read correctly. But it will work in most case as the limit values given by datasheets are rarelly met in mild conditions (using near 25°C and low current flowing from Tx to Rx)\nFor the divider bridge a value of R1=1k and R2=2.2k will be fine. You could also use 10k and 22k or anything near a factor 2.\nConnection diagrams examples for some ESP boards ESP boards ESP-01 ESP-01 serial wifi module ESP-12E/F ESP 12F serial wifi module ESP32-Cam NodeMCU V2/V3 Sonoff Wemos D1 mini ESP boards ESP-01 Use GPIO2 to ground to reset all settings in hard way - 2-6 sec after boot / not before!! Set GPIO2 to ground before boot change boot mode and go to special boot that do not reach FW. Currently boot take 10 sec - giving 8 seconds to connect GPIO2 to GND and do an hard recovery for settings Use GPIO0 to ground to be in update mode ESP-01 serial wifi module more info about the Breakout PCB: keyestudio\nESP-12E/F ESP need 3.3v, it is not 5v tolerant, if printer board use more than 3.3V like 5V on ramps.\nyou can also use Logic LevelConverter Bi-Directional\nIn order to flash some ESP12E/F boards via their UART interface, the following pins need to be connected:\nVCC to GPIO2 GND to GPIO0 This has been tested with ESP-12-E boards labeled “ESP8266 For ESP3D FYSETC.COM”\nESP 12F serial wifi module ESP-12F based serial wifi module (eg from aliexpress ) contains built in 2-way levelshifter/bi-directional logic level converter. So it can be powered via 5V uart from the target’ motherboard.\nWe need to manualy ground the IO0 while powering up to start in flash mode while powering up (there is no switch for that, neither for reset) Use FTDI adapter as usb2serial Need to see in console/serial monitor boot mode is (1,7). baudrate: 74880 rst cause:2, boot mode:(3,7) Then flash like other esp based board for esp3d ESP32-Cam Note: 5V is power supply input and 3V3 is output from regulator. UART Tx and RX signals will be 3.3V\nNodeMCU V2/V3 Sonoff Relay is connected by GPIO12, it can be handled using ESP201 command:\n*Get/Set pin value\r[ESP201]P\u003cpin\u003e V\u003cvalue\u003e [PULLUP=YES RAW=YES]\rif no V\u003cvalue\u003e get P\u003cpin\u003e value\rif V\u003cvalue\u003e 0/1 set INPUT_PULLUP value, but for GPIO16 INPUT_PULLDOWN_16\rGPIO1 and GPIO3 cannot be used as they are used for serial\rif PULLUP=YES set input pull up, if not set input\rif RAW=YES do not set pinmode just read value\rSo [ESP201]P12 V0 should be off and [ESP201]P12 V1 should be on\nWemos D1 mini Connection with logic level conveter:\nexample:\nprinted cases:\nhttps://www.thingiverse.com/thing:4128593 https://www.thingiverse.com/thing:2671591 ",
    "description": "Connection between ESP and printer board needs 4 wires:\nESP Tx needs to connect to Rx on MCU of printer board. ESP Rx needs to connect to Tx on MCU of printer board. You also need to power supply ESP board with with GND and 3V3 or 5V. Connecting ESP board to target board Be aware that ESP MCU is 3.3V on GPIO pin and some target board can be 3.",
    "tags": [],
    "title": "Hardware connection",
    "uri": "/esp3d/v3.x/installation/wiring/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, ceramic antenna/ipex connector, 40 pins ",
    "description": "TTGO/LILYGO V7 mini",
    "tags": [],
    "title": "TTGO/LILYGO V7 mini",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/ttgo_v7_mini/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-S3 boards",
    "content": "AliExpress\nSpecs ESP32-S3 with 16MB flash memory, 8MB PSRAM (qspi), 3D antenna, RGB led, Camera and SD card reader (SDIO 1bit) Pinout SD:\nFunction GPIO CMD 39 CLK 42 D0 41 Camera: CAMERA_MODEL_UICPAL_ESP32S3\nRGB Led: WS2812_PIN 33\nWarning\rThe UART converter on this board requires DTR and RTS to be disabled in order to receive Serial output.\nIn Platform.io, add the following lines:\nmonitor_dtr = 0\rmonitor_rts = 0Or if using arduino-cli, use the following arguments:\n$ arduino-cli monitor --port COM5 -c baudrate=115200,rts=off,dtr=offArduino IDE does not support this board invidually and hacking the system files feels too much efforts. An easy workaround is to temporarily switch to “ESP Dev Module” when debugging and switch back to “ESPS3 Dev Module” when compiling.\nSolution found by @levak",
    "description": "UICPAL ESP32 S3",
    "tags": [],
    "title": "UICPAL ESP32 S3",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-s3/uicpal/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation \u003e API",
    "content": "Several variables are available depending WebUI target\nCNC From output:\n[PRB:0.000,0.000,0.000:0]\n#prb_x#, #prb_y#,#prb_z#\noptional according axis definition #prb_a#,#prb_b#,#prb_c#\nfrom ? report MPos:0.000,0.000,0.000,0.000,0.000,0.000\n#pos_x#, #pos_y#, #pos_z#, #pos_a#, #pos_b#, #pos_c#, #pos_wx#, #pos_wy#, #pos_wz#, #pos_wa#, #pos_wb#, #pos_wc#,\noptional according axis definition #pos_u#,#pos_v#,#pos_w#, #pos_wu#,#pos_wv#,#pos_ww#\nNote: if variable is unknown, then it is set to 0\nFrom UI\nProbe Panel\nProbe thickness : #probe_thickness#\nSelected axis : #selected_axis#\nLaser CNC Panel\nMaximum value of laser: #laser_max#",
    "description": "Description and syntax",
    "tags": [],
    "title": "Variables list",
    "uri": "/esp3d-webui/v3.x/documentation/api/variableslist/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib",
    "content": "\rThis version is the development version, features can change anytime, feedback, PR and suggestions are welcome.\nThis version need currently a fork of Marlin\nIt is already part of Marlin distribution, check how to enable it",
    "description": "This version is the development version, features can change anytime, feedback, PR and suggestions are welcome.\nThis version need currently a fork of Marlin\nIt is already part of Marlin distribution, check how to enable it",
    "tags": [],
    "title": "Version 3.X",
    "uri": "/esp3dlib/v3.x/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-S2 boards",
    "content": "\rDocumentation\nSpecs ESP32-S2 (single-core) with 4MB flash memory, 2MB PSRAM ceramic antenna ",
    "description": "Wemos S2 mini",
    "tags": [],
    "title": "Wemos S2 mini",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-s2/wemos-s2-mini/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e Notifications",
    "content": "IFTTT is free service up to 5 applets\nIFTTT is a wrapper that allows several kind of notifications, please refer to it documentation.\nESP3D use the webhook method.\n1 - If you do not have IFTTT account you can create for free to use up to 5 applets. 2 - Create New applet\nCreate new trigger\nThe trigger is a webhook\nChoose Web request\nSet the event name Define the action you want Select the service you want to use\nAs you can see there are a lot, let use email as example, but you can select any one that fit your needs Define the message\nIFTTT allows some variables:\ntitle from ESP3D –\u003e value1 message from ESP3D –\u003e value2 ESP3D hostname –\u003e value3 Applet is created 3 - Retrieve the webhook key\nGo to settings Select service Select webhook Choose documentation Copy the key 4 - Save the generate token and chatID in ESP3D, and set IFTTT as notification supplier\n[ESP610]type=IFTTT T1={event} T2={webhooks_key}\n5 - type [ESP610] to verify (T1/T2 won’t be displayed)\n6 - Try to send message:\n[ESP600]Hi there, test from ESP3D\n7 - Verify the workflow\nGo to Applets\nSelect Activity\nSelect the flow to display\nNote: This documentation is not exaustive due to huge features of IFTTT notifications service but base is always same :\nIFThis =\u003e webhooks based on webrequest\rTHENThat =\u003e IFTTT notification service",
    "description": "IFTTT is free service up to 5 applets\nIFTTT is a wrapper that allows several kind of notifications, please refer to it documentation.\nESP3D use the webhook method.\n1 - If you do not have IFTTT account you can create for free to use up to 5 applets. 2 - Create New applet\nCreate new trigger\nThe trigger is a webhook\nChoose Web request\nSet the event name Define the action you want Select the service you want to use",
    "tags": [],
    "title": " IFTTT Notification",
    "uri": "/esp3d-tft/v1.x/documentation/notifications/ifttt/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Documentation \u003e Notifications",
    "content": "IFTTT is free service up to 5 applets\nIFTTT is a wrapper that allows several kind of notifications, please refer to it documentation.\nESP3D use the webhook method.\n1 - If you do not have IFTTT account you can create for free to use up to 5 applets. 2 - Create New applet\nCreate new trigger\nThe trigger is a webhook\nChoose Web request\nSet the event name Define the action you want Select the service you want to use\nAs you can see there are a lot, let use email as example, but you can select any one that fit your needs Define the message\nIFTTT allows some variables:\ntitle from ESP3D –\u003e value1 message from ESP3D –\u003e value2 ESP3D hostname –\u003e value3 Applet is created 3 - Retrieve the webhook key\nGo to settings Select service Select webhook Choose documentation Copy the key 4 - Save the generate token and chatID in ESP3D, and set IFTTT as notification supplier\n[ESP610]type=IFTTT T1={event} T2={webhooks_key}\n5 - type [ESP610] to verify (T1/T2 won’t be displayed)\n6 - Try to send message:\n[ESP600]Hi there, test from ESP3D\n7 - Verify the workflow\nGo to Applets\nSelect Activity\nSelect the flow to display\nNote: This documentation is not exaustive due to huge features of IFTTT notifications service but base is always same :\nIFThis =\u003e webhooks based on webrequest\rTHENThat =\u003e IFTTT notification service",
    "description": "IFTTT is free service up to 5 applets\nIFTTT is a wrapper that allows several kind of notifications, please refer to it documentation.\nESP3D use the webhook method.\n1 - If you do not have IFTTT account you can create for free to use up to 5 applets. 2 - Create New applet\nCreate new trigger\nThe trigger is a webhook\nChoose Web request\nSet the event name Define the action you want Select the service you want to use",
    "tags": [],
    "title": " IFTTT Notification",
    "uri": "/esp3d/v2.x/documentation/notifications/ifttt/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e Notifications",
    "content": "IFTTT is free service up to 5 applets\nIFTTT is a wrapper that allows several kind of notifications, please refer to it documentation.\nESP3D use the webhook method.\n1 - If you do not have IFTTT account you can create for free to use up to 5 applets. 2 - Create New applet\nCreate new trigger\nThe trigger is a webhook\nChoose Web request\nSet the event name Define the action you want Select the service you want to use\nAs you can see there are a lot, let use email as example, but you can select any one that fit your needs Define the message\nIFTTT allows some variables:\ntitle from ESP3D –\u003e value1 message from ESP3D –\u003e value2 ESP3D hostname –\u003e value3 Applet is created 3 - Retrieve the webhook key\nGo to settings Select service Select webhook Choose documentation Copy the key 4 - Save the generate token and chatID in ESP3D, and set IFTTT as notification supplier\n[ESP610]type=IFTTT T1={event} T2={webhooks_key}\n5 - type [ESP610] to verify (T1/T2 won’t be displayed)\n6 - Try to send message:\n[ESP600]Hi there, test from ESP3D\n7 - Verify the workflow\nGo to Applets\nSelect Activity\nSelect the flow to display\nNote: This documentation is not exaustive due to huge features of IFTTT notifications service but base is always same :\nIFThis =\u003e webhooks based on webrequest\rTHENThat =\u003e IFTTT notification service",
    "description": "IFTTT is free service up to 5 applets\nIFTTT is a wrapper that allows several kind of notifications, please refer to it documentation.\nESP3D use the webhook method.\n1 - If you do not have IFTTT account you can create for free to use up to 5 applets. 2 - Create New applet\nCreate new trigger\nThe trigger is a webhook\nChoose Web request\nSet the event name Define the action you want Select the service you want to use",
    "tags": [],
    "title": " IFTTT Notification",
    "uri": "/esp3d/v3.x/documentation/notifications/ifttt/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e Notifications",
    "content": "IFTTT is free service up to 5 applets\nIFTTT is a wrapper that allows several kind of notifications, please refer to it documentation.\nESP3D use the webhook method.\n1 - If you do not have IFTTT account you can create for free to use up to 5 applets. 2 - Create New applet\nCreate new trigger\nThe trigger is a webhook\nChoose Web request\nSet the event name Define the action you want Select the service you want to use\nAs you can see there are a lot, let use email as example, but you can select any one that fit your needs Define the message\nIFTTT allows some variables:\ntitle from ESP3D –\u003e value1 message from ESP3D –\u003e value2 ESP3D hostname –\u003e value3 Applet is created 3 - Retrieve the webhook key\nGo to settings Select service Select webhook Choose documentation Copy the key 4 - Save the generate token and chatID in ESP3D, and set IFTTT as notification supplier\n[ESP610]type=IFTTT T1={event} T2={webhooks_key}\n5 - type [ESP610] to verify (T1/T2 won’t be displayed)\n6 - Try to send message:\n[ESP600]Hi there, test from ESP3D\n7 - Verify the workflow\nGo to Applets\nSelect Activity\nSelect the flow to display\nNote: This documentation is not exaustive due to huge features of IFTTT notifications service but base is always same :\nIFThis =\u003e webhooks based on webrequest\rTHENThat =\u003e IFTTT notification service",
    "description": "IFTTT is free service up to 5 applets\nIFTTT is a wrapper that allows several kind of notifications, please refer to it documentation.\nESP3D use the webhook method.\n1 - If you do not have IFTTT account you can create for free to use up to 5 applets. 2 - Create New applet\nCreate new trigger\nThe trigger is a webhook\nChoose Web request\nSet the event name Define the action you want Select the service you want to use",
    "tags": [],
    "title": " IFTTT Notification",
    "uri": "/esp3dlib/v3.x/documentation/notifications/ifttt/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Hardware \u003e ESP32-S3 boards",
    "content": " ESP32-S3 based + SDReader + PSRAM + 4.3’ TFT (800x480) with Capacitive touch screen Aliexpress Features ESP32-S3 dual-core Xtensa 32-bit LX7 microprocessor, up to 240 MHz with 384KB ROM, 512KB SRAM. 2.4GHz WiFi and Bluetooth 5 PSRAM: 2MB FLASH: 8MB Micro-SD card slot (SPI) 4.3-inch 800x480 TFT display - RM68120 (8080 parallel bus) Capacitive touch panel - ft5x06 (i2C 0x38) Audio amplifier RealNetworks (i2C 0x68) Speaker Built-in microphone 1 USB-C OTG (DFU/CDC) port 1 USB-C debug port 3-axis accelerometer / 3-axis gyroscope mpu6050 (i2C) temperature and humidity sensors hdc1080 / htu21 (i2C) I2C / SPI / GPIOs Wakeup and reset buttons, Power switch Power Supply: 5V / 1A Dimension: 110 x 61 x 13.5mm Header 1 (10 pins): GND, 5V, EXT_IO2, EXT_IO1, 3.3V, RXD, TXD, GND, SCL, SDA Header 2 (10 pins): GND, MOSI, CLK, MISO, CS, IO33, IO46, IO0, EXT_IO0 Pins Pin Usage GPIO 0 Upload mode GPIO 1 LCD_D0 GPIO 2 LCD_D2 GPIO 3 LCD_D4 GPIO 4 LCD_D6 GPIO 5 LCD_D8 GPIO 6 LCD_D10 GPIO 7 LCD_D12 GPIO 8 LCD_D14 GPIO 9 LCD_D1 GPIO 10 LCD_D3 GPIO 11 LCD_D5 GPIO 12 LCD_D7 GPIO 13 LCD_D9 GPIO 14 LCD_D11 GPIO 15 LCD_D13 GPIO 16 LCD_D15 GPIO 17 LCD_WR GPIO 18 BAT_ADC GPIO 19 ESP_USB_DM GPIO 20 ESP_USB_DP GPIO 21 LCD_RST GPIO 33 GPIO 33 GPIO 34 ESP_SPI_CS_SD GPIO 35 ESP_SPI_MOSI GPIO 36 ESP_SPI_CLK GPIO 37 ESP_SPI_MISO GPIO 38 LCD_RS GPIO 39 ESP_I2C_SCL GPIO 40 ESP_I2C_SDA GPIO 41 ESP_I2S0_ASDOUT GPIO 42 ESP_I2S0_SCLK GPIO 43 U0TXD GPIO 44 U0RXD GPIO 45 ESP_I2S0_MCLK GPIO 46 GPIO 46 GPIO 47 ESP_I2S0_DSDIN GPIO 48 ESP_I2SS0_LRCK ",
    "description": "ESP32-S3 4.3' (800x480) TFT",
    "tags": [],
    "title": "4.3' HMI-V3",
    "uri": "/esp3d-tft/v1.x/hardware/esp32-s3/hmis3/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Documentation",
    "content": "\rWarning\rThe SD transfer use the GCODE protocol based on M28/M29 commands, this protocol is often broken by external queries or even auto reporting. Additionnaly the SD transfer is very slow: ~0.4KB/s, which make it almost unusable.\nSo this protocol is no more supported in ESP3D, and feature is provided as it is.\nThe only existing reliable solution to be used in addition of ESP3D 2.1X, is to use a WiFi SD card like Toshiba FlashAir, which is no more produced.\nESP3D 3.0 has some existing solution and some ongoing plan for better SD support depending on hardware used.",
    "description": "SD Card support",
    "tags": [],
    "title": "About SD card",
    "uri": "/esp3d/v2.x/documentation/sdtransfer/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "If you don’t have the soldering skills to grab the connectors from the unpopulated ethernet connection, you can also get 3.3v and GND from the ISP header (bottom left on the diagram above).\nBoard pins voltage 3.3v Board firmware Smoothieware Board configuration note Enable second serial port in the config.txt ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "AZSMZ mini board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/azsmz_mini/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 in ESP7 format with 4MB flash memory, ceramic antenna/ipex connector Pinout 1 2 RESET TX ADC RX CH_PD IO5 IO16 IO4 IO14 IO0 IO12 IO2 IO13 IO15 3.3V GND ",
    "description": "ESP07",
    "tags": [],
    "title": "ESP07",
    "uri": "/esp3d/v2.x/hardware/esp8266/esp07/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 in ESP7 format with 4MB flash memory, ceramic antenna/ipex connector Pinout 1 2 RESET TX ADC RX CH_PD IO5 IO16 IO4 IO14 IO0 IO12 IO2 IO13 IO15 3.3V GND ",
    "description": "ESP07",
    "tags": [],
    "title": "ESP07",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/esp07/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 in ESP12 format with 4MB flash memory, ceramic antenna, and voltage regulator Pinout 1 2 RST TX ADC RX CH_PD IO5 IO16 IO4 IO14 IO0 IO12 IO2 IO13 IO15 VCC GND ",
    "description": "ESP12 e/f",
    "tags": [],
    "title": "ESP12 e/f",
    "uri": "/esp3d/v2.x/hardware/esp8266/esp12ex/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 in ESP12 format with 4MB flash memory, ceramic antenna, and voltage regulator Pinout 1 2 RST TX ADC RX CH_PD IO5 IO16 IO4 IO14 IO0 IO12 IO2 IO13 IO15 VCC GND ",
    "description": "ESP12 e/f",
    "tags": [],
    "title": "ESP12 e/f",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/esp12ex/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Hardware",
    "content": "\r3.5' RotricsESP32 3.5' (480x320) TFT\n3.5' ESP32-3248S035R/CESP32 - 3.5' (480x320) TFT\n2.8' ESP32-2432S028RESP32 - 2.8' (320x240) TFT",
    "description": " ",
    "tags": [],
    "title": "ESP32 boards",
    "uri": "/esp3d-tft/v1.x/hardware/esp32/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards",
    "content": "\rFYSETC SD-WIFI-PROFYSETC SD-WIFI-PRO",
    "description": " ",
    "tags": [],
    "title": "ESP32-Pico boards",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-pico/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Hardware",
    "content": "\r3.5' ZX3D50CE02S-USRC-4832ESP32-S3 3.5' (480x320) TFT\n4.3' HMI-V3ESP32-S3 4.3' (800x480) TFT\n7.0' ESP32-8048S070CESP32-S3 7' (800×480) TFT\n5.0' ESP32-8048S050CESP32-S3 5' (800x480) IPS TFT\n4.3' ESP32-8048S043CESP32-S3 4.3' (800x480) IPS TFT\n4.3' ESP32-4827S043R/CESP32-S3 4.3' (480x272) TFT\n3.5' BZM-V1ESP32 - 3.5' (480x320) TFT",
    "description": " ",
    "tags": [],
    "title": "ESP32-S3 boards",
    "uri": "/esp3d-tft/v1.x/hardware/esp32-s3/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem",
    "content": "What is ESP3D-WEBUI ? ESP3D-WEBUI is a web interface designed to work with ESP3D, ESPDLib, ESP3D-TFT and grblHAL\nWarning\rThe version to be used depend on firmware version itself, please refer to the firmware version page to know what Web UI to use.",
    "description": "What is ESP3D-WEBUI ? ESP3D-WEBUI is a web interface designed to work with ESP3D, ESPDLib, ESP3D-TFT and grblHAL\nWarning\rThe version to be used depend on firmware version itself, please refer to the firmware version page to know what Web UI to use.",
    "tags": [],
    "title": "ESP3D-WEBUI",
    "uri": "/esp3d-webui/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X",
    "content": "\rESP32 boards 3.5' RotricsESP32 3.5' (480x320) TFT\n3.5' ESP32-3248S035R/CESP32 - 3.5' (480x320) TFT\n2.8' ESP32-2432S028RESP32 - 2.8' (320x240) TFT\nESP32-S3 boards 3.5' ZX3D50CE02S-USRC-4832ESP32-S3 3.5' (480x320) TFT\n4.3' HMI-V3ESP32-S3 4.3' (800x480) TFT\n7.0' ESP32-8048S070CESP32-S3 7' (800×480) TFT\n5.0' ESP32-8048S050CESP32-S3 5' (800x480) IPS TFT\n4.3' ESP32-8048S043CESP32-S3 4.3' (800x480) IPS TFT\n4.3' ESP32-4827S043R/CESP32-S3 4.3' (480x272) TFT\n3.5' BZM-V1ESP32 - 3.5' (480x320) TFT",
    "description": "ESP32 boards 3.5' RotricsESP32 3.5' (480x320) TFT\n3.5' ESP32-3248S035R/CESP32 - 3.5' (480x320) TFT\n2.8' ESP32-2432S028RESP32 - 2.8' (320x240) TFT\nESP32-S3 boards 3.5' ZX3D50CE02S-USRC-4832ESP32-S3 3.5' (480x320) TFT\n4.3' HMI-V3ESP32-S3 4.3' (800x480) TFT\n7.0' ESP32-8048S070CESP32-S3 7' (800×480) TFT\n5.0' ESP32-8048S050CESP32-S3 5' (800x480) IPS TFT\n4.3' ESP32-8048S043CESP32-S3 4.3' (800x480) IPS TFT\n4.3' ESP32-4827S043R/CESP32-S3 4.3' (480x272) TFT\n3.5' BZM-V1ESP32 - 3.5' (480x320) TFT",
    "tags": [],
    "title": "Hardware",
    "uri": "/esp3d-tft/v1.x/hardware/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X",
    "content": "\rESP32 generic controllerESP32 R1 controller from Simon Jouet\nFYSETC-E4FYSETC-E4\nMKS TinybeeMKS Tinybee V1\nMRR-ESPAMRR-ESPA\nMRR-ESPEMRR-ESPE\nPanda Zhu/M4Panda Zhu/M4",
    "description": "ESP32 generic controllerESP32 R1 controller from Simon Jouet\nFYSETC-E4FYSETC-E4\nMKS TinybeeMKS Tinybee V1\nMRR-ESPAMRR-ESPA\nMRR-ESPEMRR-ESPE\nPanda Zhu/M4Panda Zhu/M4",
    "tags": [],
    "title": "Hardware",
    "uri": "/esp3dlib/v1.x/hardware/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X",
    "content": "\rFYSETC-E4FYSETC-E4\nMKS TinybeeMKS Tinybee V1\nMRR-ESPAMRR-ESPA\nMRR-ESPEMRR-ESPE\nPanda Zhu/M4Panda Zhu/M4",
    "description": "FYSETC-E4FYSETC-E4\nMKS TinybeeMKS Tinybee V1\nMRR-ESPAMRR-ESPA\nMRR-ESPEMRR-ESPE\nPanda Zhu/M4Panda Zhu/M4",
    "tags": [],
    "title": "Hardware",
    "uri": "/esp3dlib/v3.x/hardware/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation \u003e API",
    "content": "Real time commands are not printable commands most of the time so it can be tricky to type them in terminal or to see them in terminal as echo. To workaround this you can use and see the text equivalent variables\ngrbl 0x18 (ctrl-x) : Soft-Reset : #SOFTRESET# 0x84 : Safety Door #SAFETYDOOR# 0x85 : Jog Cancel #JOGCANCEL# Feed Overrides 0x90 : Set 100% of programmed rate. #FO100# 0x91 : Increase 10% #FO+10# 0x92 : Decrease 10% #FO-10# 0x93 : Increase 1% #FO+1# 0x94 : Decrease 1% #FO-1# Rapid Overrides 0x95 : Set to 100% full rapid rate. #RO100# 0x96 : Set to 50% of rapid rate. #RO50# 0x97 : Set to 25% of rapid rate. #RO25# Spindle Speed Overrides 10%-\u003e200% 0x99 : Set 100% of programmed spindle speed #SSO100# 0x9A : Increase 10% #SSO+10# 0x9B : Decrease 10% #SSO-10# 0x9C : Increase 1% #SSO+1# 0x9D : Decrease 1% #SSO-1# Toggle commands 0x9E : Toggle Spindle Stop #T-SPINDLESTOP# 0xA0 : Toggle Flood Coolant #T-FLOODCOOLANT# 0xA1 : Toggle Mist Coolant #T-MISTCOOLANT# grblHAL 0x18 (ctrl-x) : Soft-Reset : #SOFTRESET# 0x80 : Instead of ? for requesting a real-time report #STATUSREPORT# 0x81 : Instead of ~ for requesting cycle start #CYCLESTART# 0x82 : Instead of ! for requesting feed hold “#FEEDHOLD# 0x83 : Request parser state report #PARSERREPORT# 0x84 : Safety Door #SAFETYDOOR# 0x85 : Jog Cancel #JOGCANCEL# 0x87 : Request a complete real-time report #COMPLETEREPORT# 0x88 : Toggle the virtual optional stop switch #T-STOPSWITCH# Feed Overrides 0x90 : Set 100% of programmed rate. #FO100# 0x91 : Increase 10% #FO+10# 0x92 : Decrease 10% #FO-10# 0x93 : Increase 1% #FO+1# 0x94 : Decrease 1% #FO-1# Rapid Overrides 0x95 : Set to 100% full rapid rate. #RO100# 0x96 : Set to 50% of rapid rate. #RO50# 0x97 : Set to 25% of rapid rate. #RO25# Spindle Speed Overrides 10%-\u003e200% 0x99 : Set 100% of programmed spindle speed #SSO100# 0x9A : Increase 10% #SSO+10# 0x9B : Decrease 10% #SSO-10# 0x9C : Increase 1% #SSO+1# 0x9D : Decrease 1% #SSO-1# Toggles and extras 0x9E : Toggle Spindle Stop #T-SPINDLESTOP# 0xA0 : Toggle Flood Coolant #T-FLOODCOOLANT# 0xA1 : Toggle Mist Coolant #T-MISTCOOLANT# 0xA2 : Request a PID report #PIDREPORT# 0xA3 : Acknowledge a tool change request #TOOLCHANGE# 0xA4 : Toggle the virtual optional probe connected switch #T-PROBE# ",
    "description": "Description and supported firmwares",
    "tags": [],
    "title": "Real time commands",
    "uri": "/esp3d-webui/v3.x/documentation/api/realtimecmd/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Showcase",
    "uri": "/esp3d-tft/v1.x/showcase/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 2.1.X",
    "content": "Full UI Terminal panel Jog panel Macro dialog Extruders panel Temperatures panel SD panel Repetier / smoothieware Long names support Marlin Short names only Camera tab ESP3D tab Status dialog Flash filesystem dialog Firmware update dialog Target Firmware settings Repetier Smoothieware ",
    "description": "Full UI Terminal panel Jog panel Macro dialog Extruders panel Temperatures panel SD panel Repetier / smoothieware Long names support Marlin Short names only Camera tab ESP3D tab Status dialog Flash filesystem dialog Firmware update dialog Target Firmware settings Repetier Smoothieware ",
    "tags": [],
    "title": "Showcase",
    "uri": "/esp3d-webui/v2.x/showcase/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X",
    "content": "Full 3D Printer UI Camera extra panel Full CNC UI ESP3D page Settings page ESP3D Interface All settings Polling commands Macros Extra panels Informations page Target Firmware settings Marlin Repetier Smoothieware GRBL grblHAL Themes from @MonoAnji ",
    "description": "Full 3D Printer UI Camera extra panel Full CNC UI ESP3D page Settings page ESP3D Interface All settings Polling commands Macros Extra panels Informations page Target Firmware settings Marlin Repetier Smoothieware GRBL grblHAL Themes from @MonoAnji ",
    "tags": [],
    "title": "Showcase",
    "uri": "/esp3d-webui/v3.x/showcase/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X",
    "content": "On a Davinci 2.0 ",
    "description": "On a Davinci 2.0 ",
    "tags": [],
    "title": "Showcase",
    "uri": "/esp3d/v2.x/showcase/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Showcase",
    "uri": "/esp3d/v3.x/showcase/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Showcase",
    "uri": "/esp3dlib/v1.x/showcase/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Showcase",
    "uri": "/esp3dlib/v3.x/showcase/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e API",
    "content": "\rInfo\rThis document is a receipe of conventions that may not be currently implemented yet, but will be from now, current code will be updated according to it before beta state.\nStyle should be also applied also\nC++ Style Use Clang-format Download the tool according your system https://releases.llvm.org/ Install client extension CLang-Format from Xaver Hellauer Define the style set Google as default style General Avoid abreviation as much as possible Avoid unnecessary long name ESP3D is always uppercase in code, esp3d is valid only for filename, any mixing case is proscribed (e.g.:Esp3D/esp3D/Esp3d) ESP command is always uppercase, so any reference to it (e.g.: ESP100) should be uppercase to avoid confusion, only filename can be lowercase, any mixing case is proscribed File name Use lower case for file names Use underscores as words separators\ne.g: esp3d_settings.cpp Directory name Use lower case for directory names Use underscores as words separators\ne.g: esp3d_commansds Target directories are the only names that use full uppercase unlike others directories\ne.g: ESP32S3_ZX3D50CE02S_USRC_4832 Variable Any name should begin with an alphabet. The first character should be lowercase. Use upper case letters as words separators Digits may be used in the name but only after the alphabet. No special symbols can be used in names. No keywords can be used as names. Pointer variables should be prepended with ‘p’ and place the asterisk ‘*’ close to the name instead of the pointer type. Static variables should be prepended with ‘s’. always initialize the variable\ne.g:\nchar adminPassword[20]{0};\nchar *pAdminLogin = nullptr; Constant Any name should begin with an alphabet. The first character should be k. Use upper case letters as words separators Digits may be used in the name but only after the alphabet. No special symbols can be used in names. No keywords can be used as names.\ne.g: const int kTopLimit 100; Define Define use uppercase letters only and underscores as words separators, dash is not allowed. e.g: #define LOWER_LIMIT 10;\nEnum Enum should use enum class not plain enum neither enum struct If enum is used by several file, enum should be defined in separate file to avoid repeated definitions, and add _type suffix to file name The first character in the enum name must be in upper case. Use upper case letters as word separators. No underscores (‘_’) are permitted in the enum name. Enum values are lower case and use underscores as words separators. No need to typedef enum Use type as much as possible to clarify any casting if necessary Define enum values as much as possible to ensure consistency when doing update Do not use #ifdef in enum unless all enum values are explicitly defined e.g: esp3d_gcode_host_type.h\nnot explicitly defined enum class Esp3dGcodeHostWait : uint8_t {\rno_wait = 0,\rwait_ack,\rwait_busy,\rwait_processing,\rwait_heating\r};Usage example: Esp3dGcodeHostWait::no_wait\nexplicitly defined enum class Status: char\r{\rhigh = 'h',\rlow = 'l'\r}; Usage example: Status::low\nStruct/Union If struct/union is used by several file, struct should be defined in separate file to avoid repeated definitions, and add _type suffix to file name The first character in the struct name must be in upper case. Use upper case letters as word separators Struct values are lower case and use underscores as words separators if variables. No need to typedef for struct As we use C++20, initialize struct explicitly e.g: setting_description_type.h\nstruct SettingDescription{\ruint16_t size = 0;\rconst char* defaultVal = nullptr;\r} ;usage example: SettingDescription notificationSetting;\nClass The class name should be a noun. Use upper case letters as word separators, and lower case for the rest of the word in the class name. The first character in the class name must be in upper case. No underscores (‘_’) are permitted in the class name. The private and protected attribute name in class should be prepended with the character underscore (‘_’). Each method/ function name should begin with a verb. The first character of function/ method argument names should be lowercase. Use upper case letter as word separator Any name should begin with an alphabet. Digits may be used in the name but only after the alphabet. No special symbols can be used in names except for the underscore(‘_’). No keywords can be used as names. Pointer variables should be prepended with ‘p’ and place the asterisk ‘*’ close to the name instead of the pointer type. Static variables should be prepended with ‘s’. Getter should use same name as attribute name. Setter should use same name as attribute name with set prefix and upper case the first letter of name. e.g:\nclass Esp3dAuthenticationService {\rpublic:\rbool begin();\rbool isAdmin (const char *pwd);\rchar * getPassword ();\rprivate:\rstd::string _adminPwd;\rchar *_pName;\rstatic char _sLogin; }Function/Procedure Each Function/Procedure name should begin with a verb. The first character of argument names should be lowercase. Use upper case letter as word separator Any name should begin with an alphabet. Digits may be used in the name but only after the alphabet. No special symbols can be used in names except for the underscore(‘_’). No keywords can be used as names. Namespace Namespace names are all lower-case, with words separated by underscores. Do not use using but full namespace instead for clarity\ne.g: namespace esp3d_hal{\rint64_t millis();\r}usage example: esp3d_hal::millis();\ntypedef If variable Use lower case for names Use underscores as words separators Add suffix _t e.g: typedef int setting_index_t If function Follow function naming syntax Add suffix _t e.g: typedef std::function\u003cbool(const char*, const char*,const char*)\u003e processingFunction_t; 0 and nullptr/NULL Use nullptr for pointers, and ‘\\0’ for chars (and not the 0 literal).\nFor pointers (address values), use nullptr, as this provides type-safety.\nUse ‘\\0’ for the null character. Using the correct type makes the code more readable.\nsizeof Prefer sizeof(varname) to sizeof(type). sizeof(varname) will update appropriately if someone changes the variable type either now or later.\nauto type Only use auto type if no need to to do type deduction, C++ code is usually clearer when types are explicit, especially when type deduction would depend on information from distant parts of the code.\nCasting Use C++-style casts\ne.g: static_cast\u003cfloat\u003e(double_value) Do not use C cast unless the cast is to void\ne.g: (int)3.5; Initialization Do not mix brace initialization and = for readibility Lambda Expressions //TODO\nInspired from :\nNaming Convention in C++ Google C++ Style Guide ",
    "description": "Syntax conventions in used languages",
    "tags": [],
    "title": "Syntax conventions",
    "uri": "/esp3d-tft/v1.x/documentation/api/conventions/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation \u003e API",
    "content": "\rInfo\rThis document is a receipe of conventions that may not be currently implemented yet, but will be from now, current code will be updated according to it before beta state.\nStyle should be also applied also\nJavascript Style Install prettier extension `Prettier - Code formatter from Prettier Define configuration file Select .prettierrc is present on root directory General Use DOM as much as possible, do not use document.getElementById Avoid switch statement, use object with corresponding method instead Native HTML tags must be lowercased File name Use one file or directory per main component Split compoment as much as possible in multiple components Use same file name as component name If file does not contain components first letter of file name should be lower case JSON file name / directory are lower case Variable The first character of name should be lowercase. Use upper case letter as word separator Any name should begin with an alphabet. Digits may be used in the name but only after the alphabet. No special symbols / keywords can be used in names Constant The first character of name should be lowercase. Use upper case letter as word separator Any name should begin with an alphabet. Digits may be used in the name but only after the alphabet. No special symbols / keywords can be used in names JSON object Start name by upper case first letter Use upper case first letter for words separation Do not use underscore / dash in name Component Do not use class / render but Fragments / Elements Start name by upper case first letter Use upper case first letter for words separation Do not use underscore / dash in name Only export what is needed Function/Procedure The first character of name should be lowercase if more than one letter, or should be upper case. Use upper case letter as word separator. Any name should begin with an alphabet. Digits may be used in the name but only after the alphabet. No special symbols / keywords can be used in names Inspired from :\nGoogle JavaScript Style Guide+ Naming Conventions in React JS - Upbeat Code 10-react-naming-conventions-best-practices ",
    "description": "Syntax conventions in used languages",
    "tags": [],
    "title": "Syntax conventions",
    "uri": "/esp3d-webui/v3.x/documentation/api/conventions/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-S3 boards",
    "content": "From Lilygo\nSpecs ESP32-S3 with 16MB flash memory, 8MB PSRAM, ipex connector antenna, OV2640 camera ",
    "description": "T-SIMCAM",
    "tags": [],
    "title": "T-SIMCAM",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-s3/tsimcam/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation",
    "content": "In ESP3D page your can update Web UI and Firmware of ESP board.",
    "description": "Update feature description",
    "tags": [],
    "title": "Update support",
    "uri": "/esp3d-webui/v3.x/documentation/update/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Hardware \u003e ESP32-S3 boards",
    "content": " ESP32-S3 based + SDReader + PSRAM + 7’ TFT (800x480) with Capacitive touch screen Makerfabs Aliexpress Features ESP32-S3 dual-core Xtensa 32-bit LX7 microprocessor, up to 240 MHz with 384KB ROM, 512KB SRAM. 2.4GHz WiFi and Bluetooth 5 FLASH: 16MB PSRAM: 8MB Micro-SD card slot (SPI) 7-inch 800x480 TFT display - EK9716 (Parallel RGB-565 interface) Capacitive touch panel - GT911 (i2C - 0x5D or 0x14) Audio amplifier MAX98357 (i2s) Speaker 1 USB-C to Serial 0 (CH340C) I2C / SPI / GPIOs Boot and reset buttons Dimension: 181.0mm x 108.0mm Header P1 (4 pins) (UART): Gnd, Rx, Tx, +5V Header P2 (4 pins) (SPI): IO13, IO12, IO11, IO19 Header P3 (4 pins) (USB/UART): IO20, IO19, IO18, IO17 Header P4 (4 pins) : IO18, IO17, +3.3v, Gnd Header P5 (4 pins) : IO18, IO17, +3.3v, Gnd Header P6 (2 pins) Speaker: (+) (-) Pins Pin Usage GPIO 0 BOOT_BTN / I2S_BCLK (v1.1) GPIO 1 LCD_G5 GPIO 2 TFT_BL GPIO 3 LCD_G2 GPIO 4 LCD_B4 GPIO 5 LCD_B3 GPIO 6 LCD_B2 GPIO 7 LCD_B1 GPIO 8 LCD_G3 GPIO 9 LCD_G0 GPIO 10 SD_CS GPIO 11 SD_MOSI GPIO 12 SD_SCK GPIO 13 SD_MISO GPIO 14 LCD_R0 GPIO 15 LCD_B0 GPIO 16 LCD_G4 GPIO 17 I2S_DIN GPIO 18 CTP_INT* / I2S_LRCLK GPIO 19 CTP_SDA / I2S_BCLK (v1.0) GPIO 20 CTP_SCL GPIO 21 LCD_R1 GPIO 33 NA GPIO 34 NA GPIO 35 NC / NA GPIO 36 NC / NA GPIO 37 NC / NA GPIO 38 CTP_RST GPIO 39 LCD_HSYNC GPIO 40 LCD_VSYNC GPIO 41 LCD_DE GPIO 42 LCD_PCLK GPIO 43 U0TXD GPIO 44 U0RXD GPIO 45 LCD_R4 GPIO 46 LCD_G1 GPIO 47 LCD_R2 GPIO 48 LCD_R3 * Requires Hardware Mod\nHardware Mod (Add Hardware Interrupt for GT911) NOTE: This only applies to the screen with the Capacitive touch panel (ESP32_8048S070C)\nBy default, this board does not connect the Capacitive Touch Screen’s GT911 Interrupt pin to any GPIO pins. This means that the code has to use polling instead of hardware interrupts to determine when the screen is being touched. This results in excessive CPU utilization of greater than 80%. Making the below modifications results in a significantly reduced CPU utilization of under 10% on avg (on static screens).\nSteps (see picture) Install a 0 ohm resistor or solder bridge across R17. This connects the GT911’s INT pin to GPIO18. (If installed) Remove (pull-up) resistor R5 (GPIO18 to 3V3). The GT911’s INT pin is not strong enough to drive GPIO18 low with this resistor installed. (If installed) Remove U1 (XPT2046). This is not needed for the Capacitive touch panel and may conflict with GPIO18 if left on the board. NOTE: Remember to enable the HARDWARE_MOD_GT911_INT option in CMakeLists.txt",
    "description": "ESP32-S3 7' (800×480) TFT",
    "tags": [],
    "title": " 7.0' ESP32-8048S070C",
    "uri": "/esp3d-tft/v1.x/hardware/esp32-s3/sunton-70-8048/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e Notifications",
    "content": "Telegram is free service\nConsidering you have Telegram account and you already installed Telegram on you phone/PC:\nYou need a bot token and a channel id:\n1 - Create a bot with BotFather\nOpen telegram application and open chat with Botfather. Type or select /newbot\n![image]/images/notifications/telegram/newbot.jpg) Type the name of the bot (2) and its username (3)\nDoing this you will get your bot token (4) that you need for T1=\u003cbot token\u003e 2 - Create a public channel\nIn telegram select new channel\nType channel name (1) and description (2)\nMake channel public and create your channelid/chatid Now you have your chatid without the @ 3 - Assign your bot as administrator of your channel so it can use it Press your channel title, the top banner will expand\nSelet manage channel Push Administrators\nLook for your bot in search and add it\nValidate bot can have access to channel Validate bot can admin the channel 4 - Save the generate token and chatID in ESP3D, and set Telegram as notification supplier\n[ESP610]type=TELEGRAM T1=\u003cbot token\u003e T2=\u003c@chatID\u003e\n5 - Type [ESP610] to verify (T1/T2 won’t be displayed)\n6 - Try to send message:\n[ESP600]Hi there, test from ESP3D",
    "description": "Telegram is free service\nConsidering you have Telegram account and you already installed Telegram on you phone/PC:\nYou need a bot token and a channel id:\n1 - Create a bot with BotFather\nOpen telegram application and open chat with Botfather. Type or select /newbot\n![image]/images/notifications/telegram/newbot.jpg) Type the name of the bot (2) and its username (3)\nDoing this you will get your bot token (4) that you need for T1=\u003cbot token\u003e 2 - Create a public channel",
    "tags": [],
    "title": " Telegram Notification",
    "uri": "/esp3d-tft/v1.x/documentation/notifications/telegram/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e Notifications",
    "content": "Telegram is free service\nConsidering you have Telegram account and you already installed Telegram on you phone/PC:\nYou need a bot token and a chat/channel id:\n1 - Create a bot with BotFather\nOpen telegram application and open chat with Botfather. Type or select /newbot\nType the name of the bot (2) and its username (3)\nDoing this you will get your bot token (4) that you need for T1=\u003cbot token\u003e You can have notifications directly from your bot by finding the numeric chatid. In order to find it you need to say something to your bot: Copy this url into your browser and modify it with your bot’s token https://api.telegram.org/bot\u003cTOKEN\u003e/getUpdates?offset=-1 You can quickly find your numeric chat id T2=\u003cnumeric chat id\u003e 2 - Alternatively you may create a public channel if you want to share your printer. If isn’t the case proceed to step 4.\nIn telegram select new channel\nType channel name (1) and description (2)\nMake channel public and create your channelid/chatid Now you have your chatid without the @ 3 - Assign your bot as administrator of your channel so it can use it\nPress your channel title, the top banner will expand\nSelet manage channel Push Administrators\nLook for your bot in search and add it\nValidate bot can have access to channel Validate bot can admin the channel 4 - Save the generate token and chatID in ESP3D, and set Telegram as notification supplier\n[ESP610]type=TELEGRAM T1=\u003cbot token\u003e T2=\u003cnumeric chat id\u003e\n[ESP610]type=TELEGRAM T1=\u003cbot token\u003e T2=\u003c@chatID\u003e (for channel)\n5 - Type [ESP610] to verify (T1/T2 won’t be displayed)\n6 - Try to send message:\n[ESP600]Hi there, test from ESP3D",
    "description": "Telegram is free service\nConsidering you have Telegram account and you already installed Telegram on you phone/PC:\nYou need a bot token and a chat/channel id:\n1 - Create a bot with BotFather\nOpen telegram application and open chat with Botfather. Type or select /newbot\nType the name of the bot (2) and its username (3)\nDoing this you will get your bot token (4) that you need for T1=\u003cbot token\u003e You can have notifications directly from your bot by finding the numeric chatid.",
    "tags": [],
    "title": " Telegram Notification",
    "uri": "/esp3d/v3.x/documentation/notifications/telegram/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e Notifications",
    "content": "Telegram is free service\nConsidering you have Telegram account and you already installed Telegram on you phone/PC:\nYou need a bot token and a channel id:\n1 - Create a bot with BotFather\nOpen telegram application and open chat with Botfather. Type or select /newbot\n![image]/images/notifications/telegram/newbot.jpg) Type the name of the bot (2) and its username (3)\nDoing this you will get your bot token (4) that you need for T1=\u003cbot token\u003e 2 - Create a public channel\nIn telegram select new channel\nType channel name (1) and description (2)\nMake channel public and create your channelid/chatid Now you have your chatid without the @ 3 - Assign your bot as administrator of your channel so it can use it Press your channel title, the top banner will expand\nSelet manage channel Push Administrators\nLook for your bot in search and add it\nValidate bot can have access to channel Validate bot can admin the channel 4 - Save the generate token and chatID in ESP3D, and set Telegram as notification supplier\n[ESP610]type=TELEGRAM T1=\u003cbot token\u003e T2=\u003c@chatID\u003e\n5 - Type [ESP610] to verify (T1/T2 won’t be displayed)\n6 - Try to send message:\n[ESP600]Hi there, test from ESP3D",
    "description": "Telegram is free service\nConsidering you have Telegram account and you already installed Telegram on you phone/PC:\nYou need a bot token and a channel id:\n1 - Create a bot with BotFather\nOpen telegram application and open chat with Botfather. Type or select /newbot\n![image]/images/notifications/telegram/newbot.jpg) Type the name of the bot (2) and its username (3)\nDoing this you will get your bot token (4) that you need for T1=\u003cbot token\u003e 2 - Create a public channel",
    "tags": [],
    "title": " Telegram Notification",
    "uri": "/esp3dlib/v3.x/documentation/notifications/telegram/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "The board has an ESP-12E module on board Board pins voltage 3.3v Board firmware Smoothieware Board configuration note Enable second serial port in the config.txt ESP3D configuration note Raw serial, no SD ",
    "description": "ESP is part of the board",
    "tags": [],
    "title": "Azteeg X5 mini board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/azteeg_x5_wifi/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "\rSpecs ESP8266 with 4MB flash memory, ceramic antenna github\nNote\rBecause there is no serial connection to printer and the sd connection is based on this project: https://github.com/ardyesp/ESPWebDAV which is a not reliable hack, the boards is not supported",
    "description": "Bigtreetech Cloud ",
    "tags": [],
    "title": "Bigtreetech Cloud",
    "uri": "/esp3d/v2.x/hardware/esp8266/bttcloud/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "\rSpecs ESP8266 with 4MB flash memory, ceramic antenna github\nNote\rBecause there is no serial connection to printer and the sd connection is based on this project: https://github.com/ardyesp/ESPWebDAV which is a not reliable hack, the boards is not supported",
    "description": "Bigtreetech Cloud ",
    "tags": [],
    "title": "Bigtreetech Cloud",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/bttcloud/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation",
    "content": "\rNote\rOnly camera with PSRAM are supported in ESP3D due to performances issue without PSRAM.\nThe camera does not actually stream a video stream but only frames. The purpose is to provide more time toesp mcu to monitor and control the target system. The maximum frame rate is 5 frames per second, which is more than enough to capture states for timelapse or for monitoring.\nIf you want a continuous stream use a separate camera dedicated to this function and add the stream to the web interface.",
    "description": "Camera configuration",
    "tags": [],
    "title": "Camera support",
    "uri": "/esp3d-tft/v1.x/documentation/camera/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation",
    "content": "You can display your camera stream using an extra panel or an extra page.\nESPCAM32 If your board is an ESPCAM32 board and you enabled the camera feature, you can configure as following Note\rDo not put refresh under 200ms because it will not be processed so fast and will just do several retry before succeed\nIn Dashboard it will be displayed External IP Camera Any camera with an IP address and a stream page will be supported, in that case you do not need to use any refresh setting.\nIf your camera is streaming mjpg stream (many jpeg frames), use these settings, using address corresponding tou your camera.\ne.g:\nIf your camera has a web page to display streaming output, use these settings, using address corresponding tou your camera.\ne.g:",
    "description": "Camera configuration",
    "tags": [],
    "title": "Camera support",
    "uri": "/esp3d-webui/v3.x/documentation/camera/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation",
    "content": "\rNote\rOnly camera with PSRAM are supported in ESP3D due to performances issue without PSRAM.\nThe camera does not actually stream a video stream but only frames. The purpose is to provide more time toesp mcu to monitor and control the target system. The maximum frame rate is 5 frames per second, which is more than enough to capture states for timelapse or for monitoring.\nIf you want a continuous stream use a separate camera dedicated to this function and add the stream to the web interface.",
    "description": "Camera configuration",
    "tags": [],
    "title": "Camera support",
    "uri": "/esp3d/v3.x/documentation/camera/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation",
    "content": "Code Formating How to do code formating? .c/.cpp/.h/.ino files of main and hardware directories of esp3d-tft directory The code must be formatted using the clang-format tool. The configuration style is Google, no other extra customization is necessary. The tool can be added as extension in vscode, and will format one active file at once per request or during saving process according your vscode settings.\nA python script is also available in the repository, in root directory tools: format_sources.py, this script can be used to format all files of the directories main and hardware, and all subdirectories at once.\n.js/.css files of embedded directory The code must be formatted using the prettier tool. The configuration style is .prettierrc present in the root of embedded directory. The configuration file is as follows:\n{ \"printWidth\": 80, \"tabWidth\": 4, \"useTabs\": false, \"semi\": true, \"singleQuote\": false, \"trailingComma\": \"es5\", \"bracketSpacing\": true, \"bracketSameLine\": false, \"arrowParens\": \"always\", \"requirePragma\": false, \"insertPragma\": false, \"proseWrap\": \"preserve\", \"overrides\": [ { \"files\": \"*.js\", \"options\": { \"parser\": \"babel\" } }, {\"files\": \"*.scss\", \"options\": { \"parser\": \"css\" } } ] }The tool can be added as extension in vscode, and installed using :\nnpx install -G prettierPrettier will format one active file at once per request or during saving process according your vscode settings.\nA python script is also available in the repository, in directory embedded/tools: format_sources.py, this script can be used to format all files of the directories embedded/config and embedded/src, and all subdirectories at once.\nWhen to do code formating? Before any pull request or before submit any code, the code must be formatted. The CI will check the code formatting, and will eventually fail if the code is not formatted correctly.",
    "description": "Compilation Guide",
    "tags": [],
    "title": "Compilation Guide",
    "uri": "/esp3d-tft/v1.x/documentation/compilation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation",
    "content": "Code Formating How to do code formating? .cpp/.h/.ino files of esp3d directory The code must be formatted using the clang-format tool. The configuration style is Google, no other extra customization is necessary. The tool can be added as extension in vscode, and will format one active file at once per request or during saving process according your vscode settings.\nA python script is also available in the repository, in directory tools: format_sources.py, this script can be used to format all files of the directory esp3d, and all subdirectories at once.\n.js/.css files of embedded directory The code must be formatted using the prettier tool. The configuration style is .prettierrc present in the root of embedded directory. The configuration file is as follows:\n{ \"printWidth\": 80, \"tabWidth\": 4, \"useTabs\": false, \"semi\": true, \"singleQuote\": false, \"trailingComma\": \"es5\", \"bracketSpacing\": true, \"bracketSameLine\": false, \"arrowParens\": \"always\", \"requirePragma\": false, \"insertPragma\": false, \"proseWrap\": \"preserve\", \"overrides\": [ { \"files\": \"*.js\", \"options\": { \"parser\": \"babel\" } }, {\"files\": \"*.scss\", \"options\": { \"parser\": \"css\" } } ] }The tool can be added as extension in vscode, and installed using :\nnpx install -G prettierPrettier will format one active file at once per request or during saving process according your vscode settings.\nA python script is also available in the repository, in directory embedded/tools: format_sources.py, this script can be used to format all files of the directories embedded/config and embedded/src, and all subdirectories at once.\nWhen to do code formating? Before any pull request or before submit any code, the code must be formatted. The CI will check the code formatting, and will eventually fail if the code is not formatted correctly.",
    "description": "Compilation Guide",
    "tags": [],
    "title": "Compilation Guide",
    "uri": "/esp3d/v3.x/documentation/compilation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation",
    "content": "Code Formating How to do code formating? .cpp/.h/.ino files of src directory The code must be formatted using the clang-format tool. The configuration style is Google, no other extra customization is necessary. The tool can be added as extension in vscode, and will format one active file at once per request or during saving process according your vscode settings.\nA python script is also available in the repository, in directory tools: format_sources.py, this script can be used to format all files of the directory src, and all subdirectories at once.\n.js/.css files of embedded directory The code must be formatted using the prettier tool. The configuration style is .prettierrc present in the root of embedded directory. The configuration file is as follows:\n{ \"printWidth\": 80, \"tabWidth\": 4, \"useTabs\": false, \"semi\": true, \"singleQuote\": false, \"trailingComma\": \"es5\", \"bracketSpacing\": true, \"bracketSameLine\": false, \"arrowParens\": \"always\", \"requirePragma\": false, \"insertPragma\": false, \"proseWrap\": \"preserve\", \"overrides\": [ { \"files\": \"*.js\", \"options\": { \"parser\": \"babel\" } }, {\"files\": \"*.scss\", \"options\": { \"parser\": \"css\" } } ] }The tool can be added as extension in vscode, and installed using :\nnpx install -G prettierPrettier will format one active file at once per request or during saving process according your vscode settings.\nA python script is also available in the repository, in directory embedded/tools: format_sources.py, this script can be used to format all files of the directories embedded/config and embedded/src, and all subdirectories at once.\nWhen to do code formating? Before any pull request or before submit any code, the code must be formatted. The CI will check the code formatting, and will eventually fail if the code is not formatted correctly.",
    "description": "Compilation Guide",
    "tags": [],
    "title": "Compilation Guide",
    "uri": "/esp3dlib/v3.x/documentation/compilation/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards",
    "content": "\rESP-C3-32S-KitESP-C3-32S-Kit\nLILYGO T-01C3LILYGO T-01C3\nESP-C3-Super-MiniESP-C3-Super-Mini",
    "description": " ",
    "tags": [],
    "title": "ESP32-C3 boards",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-c3/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation",
    "content": "Overview The ESP3D-WebUI provides a comprehensive set of extra content features that allow users to extend the functionality and customization of the web interface. These features enable users to display a variety of additional information, controls, and specialized interfaces within the application, tailoring the experience to their specific needs.\nThe extra content can be integrated into the main user interface in two ways: through in-panel rendering on the Dashboard or as a dedicated page. This flexibility allows users to access supplementary content either directly within the current context or on a separate, more expansive view.\nThe supported types of extra content include HTML content, extension-based content, image content, and ESP32-CAM snapshots. Each type offers unique capabilities and use cases, empowering users to leverage the most appropriate format for their requirements.\nSetting up Extra Content Accessing the Setup Extra Content Interface The setup extra content interface can be accessed through a dedicated “Extra content” panel within the tab Settings/Interface of ESP3D-WebUI. This panel allows users to view, create, and manage their extra content. Extra Content Visibility and Customization The extra content can be set to “Show” to control the visibility of the panels and pages. The setting “Visible when starting” only affexct extra content that is displayed on the Dashboard. This allows users to manage the display extra content based on their preferences and workflow needs.\nCreating a New Extra Content To add a new extra content, click the “Add content” button in the extra content panel interface. It will create a new extra content with default settings.\nProvide a name for the content and select an icon to represent it.\nSelect the output type of the content, which can be one of the following types:\nIn-Panel Rendering (Dashboard): Extra content can be displayed directly within a panel of the Dashboard. This is useful for quickly accessing and viewing additional information or functionality without leaving the current context. Dedicated Page: Extra content can also be presented on a separate, dedicated page within the web application. This approach is suitable for more complex or extensive extra content that requires a larger display area.\nDefine the URL Address where the extra content is located. Be noted that the syntax URL depend on the type of content you want to display.\nSelect the types of Extra Content The ESP3D-WebUI supports four main types of extra content:\nContent: This type of extra content is displayed as pure HTML content. If the URL does not start with “http”, it means the content is stored on the system’s flash memory or SD card. For content stored on the SD card, the URL should start with “/sd”. Extension: This type of extra content is also HTML-based, but it utilizes the extension API. The extension API allows the extra content to inject CSS styles and interact with the main web UI through a extension API. Image: This type of extra content can be used to display an image or a snapshot from a remote IP camera. The URL can point to a local image file or a remote IP camera feed. ESP32-CAM Snapshot: If an ESP32-CAM device is detected, this type of extra content can be used to display a live snapshot from the camera. The url will be automatically be set to “/snap”. For some content you may need to define the refresh rate of the content. This is necessary for esp32-cam snapshot and remote IP camera feed. Editing an Extra Content To modify an existing extra content , click on the content button you wish to update. This will open the configuration interface, where you can make changes to the name, icon, output, URL, type, and refresh time. Deleting an Extra Content To remove an extra content, click on the “Trash” button next to the extra content you wish to delete. Using Extra Content Accessing Content from the menu Each extra content using dedicated page as output will be displayed as a menu item in the menu bar.\nAnd selecting the menu item will display the content in a dedicated page.\nAccessing Content from the Dashboard Each extra content using panel as output will be displayed as a panel in dashboard.\nWarning\rAn extra content act as independent content, so when panel / page is close the connection to the content is closed. A new connection will be open when the panel / page is displayed again.\nConclusion By leveraging the extra content features, users can extend the functionality and capabilities of the ESP3D-WebUI to suit their specific needs. Whether displaying supplementary information, custom controls, or specialized interfaces, the extra content options provide a flexible and extensible platform for enhancing the user experience. The ability to create, edit, and delete extra content on-the-fly empowers users to continuously optimize and personalize their 3D printing workflow within the ESP3D-WebUI.",
    "description": "Extra Content Documentation",
    "tags": [],
    "title": "Extra Content",
    "uri": "/esp3d-webui/v3.x/documentation/extra/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem",
    "content": " Discovery tools to get ip of your esp device SD tools to manage your SD card ",
    "description": " Discovery tools to get ip of your esp device SD tools to manage your SD card ",
    "tags": [],
    "title": "Extra tools",
    "uri": "/tools/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation \u003e API",
    "content": "The file upload is done using a multipart form data POST request.\n------WebKitFormBoundaryYz6fcTCJfjQG8Wp6\rContent-Disposition: form-data; name=\"path\"\r/\r------WebKitFormBoundaryYz6fcTCJfjQG8Wp6\rContent-Disposition: form-data; name=\"/8822552.jpgS\"\r3308\r------WebKitFormBoundaryYz6fcTCJfjQG8Wp6\rContent-Disposition: form-data; name=\"/8822552.jpgT\"\r2022-08-24T20:17:30\r------WebKitFormBoundaryYz6fcTCJfjQG8Wp6\rContent-Disposition: form-data; name=\"myfiles\"; filename=\"/8822552.jpg\"\rContent-Type: image/jpeg\r------WebKitFormBoundaryYz6fcTCJfjQG8Wp6--All parameters are sent before the file data itself.\nFor each file:\nThe path parameter (required) The path parameter is the path where the file will be uploaded. It is an absolute path starting from the root of the filesystem and do not contain the filename.\nThe file size parameter (optional but recommended) The file size parameter is the size of the file to upload. It is used to check if the file can be uploaded and is used to check if the file is fully uploaded. The argument name is the full file path with filename with a S suffix. The value is the size of the file in bytes.\nThe file time parameter (optional) The file time parameter is the last modified time of the file to upload. It is optional but allow to set right time on file on ESP that has not time synchronization. The argument name is the full file path with filename with a T suffix. The value format is ISO 8601 (YYYY-MM-DDThh:mm:ss) without timezone.\nThe file data binary (required) The file data binary is the file data itself. It is the last parameter of the multipart form data POST request, and it also contains the full file name.",
    "description": "File upload parameters",
    "tags": [],
    "title": "File upload",
    "uri": "/esp3d-webui/v3.x/documentation/api/fileupload/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "\rSpecs ESP8266 with 4MB flash memory, ceramic antenna github\nNote\rBecause there is no serial connection to printer and the sd connection is based on this project: https://github.com/ardyesp/ESPWebDAV which is a not reliable hack, the boards is not supported",
    "description": "FYSETC-SD-WIFI",
    "tags": [],
    "title": "FYSETC-SD-WIFI",
    "uri": "/esp3d/v2.x/hardware/esp8266/fysetcwifisd/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "\rSpecs ESP8266 with 4MB flash memory, ceramic antenna github\nNote\rBecause there is no serial connection to printer and the sd connection is based on this project: https://github.com/ardyesp/ESPWebDAV which is a not reliable hack, the boards is not supported",
    "description": "FYSETC-SD-WIFI",
    "tags": [],
    "title": "FYSETC-SD-WIFI",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/fysetcwifisd/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation",
    "content": "Overview Macros are a powerful feature that allow users to automate and streamline common tasks or workflows within the application. A macro is a customizable button or shortcut that can be configured to perform a specific set of actions, such as executing G-code commands, loading files from storage, or triggering remote devices.\nThe available macro types can depend on the targeted system and its capabilities. This documentation is applicable to applications like ESP3D, ESP3DLib, ESP3D-TFT, or GrblHAL, which utilize the ESP3D-webUI for their user interface.\nSetting up Macros Accessing the Setup Macros Interface The setup macros interface can be accessed through a dedicated “Macros” panel within the tab Settings/Interface of ESP3D-WebUI. This panel allows users to view, create, and manage their custom macros. Macro Visibility and Customization The macros panel can be set to “Show” or “Visible when starting” to control the visibility of the macros. This allows users to manage the display of macros based on their preferences and workflow needs.\nCreating a New Macro To add a new macro, click the “Add macro” button in the macros interface. It will create a new macro with default settings. Provide a name for the macro and select an icon to represent it.\nConfigure the macro’s action, which can be one of the following types:\nGCODE Command: Enter a single G-code command or a sequence of commands separated by semicolons. It’s recommended to use a file type instead if there are multiple commands. Flash File: Specify a file stored in the system’s flash memory that will be sent to the target device.\nSD Card File: Select a file stored on the system’s SD card to be sent to the target device. This is the preferred option over using the flash memory due to limited space. URL Address: Input a URL that will be accessed when the macro is triggered. 4 . Optionally, assign a keyboard shortcut (e.g., “Shift+H”) to quickly execute the macro.\nEditing a Macro To modify an existing macro, click on the macro button you wish to update. This will open the macro configuration interface, where you can make changes to the macro’s name, icon, action, and keyboard shortcut. Deleting a Macro To remove a macro, click on the “Trash” button next to the macro you wish to delete. Using Macros Accessing Macros from the Dashboard Once macros are set up, they will be displayed as buttons on the application’s main dashboard. Users can simply click on the macro buttons to trigger the corresponding actions. In the mobile view, the macro name may not be displayed to save UI space, and only the icon will be shown. Executing Macros using Keyboard Shortcuts If a keyboard shortcut has been assigned to a macro, users can press the specified key combination to execute the macro quickly. An help is available to show the list of available shortcuts, including macro’s ones. Conclusion By leveraging the macros feature, users can streamline their interactions with the application, automating repetitive tasks and accessing frequently used commands or functionalities with just a few clicks or keystrokes. The flexibility to configure macros of various types ensures that users can tailor the system to their specific requirements and enhance their overall productivity.",
    "description": "Macros Documentation",
    "tags": [],
    "title": "Macros Documentation",
    "uri": "/esp3d-webui/v3.x/documentation/macros/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation",
    "content": "WebUI support autoreporting but in case there is a need to get some information on demand, you can use polling commands.\nA polling command is a GCode command that will be sent to the printer and the response will be parsed and displayed in the WebUI each xxxxms.\nA refresh time of 3000ms is usally enough , shorter polling commands refreshtime may not be processed properly due to network latency.\nSeveral polling commands for same refresh time can be added at once separated added by ;\nNote: A refresh time of 0 means polling will be done only once when webui start.\nHere the list of polling commands available per firmware type:\nMarlin Command Description M105 Get temperatures M114 Get current positions M27 Get SD print status M27 C Get current file name M220 Get feedrate M221 Get flowrate M106 Get fan speed M115 Get printer capabilities M31 Get print time [ESP701]json Get current streaming status Repetier Command Description M105 Get temperatures M114 Get current positions M27 Get SD print status M27 C Get current file name M220 Get feedrate M221 Get flowrate M106 Get fan speed M115 Get printer capabilities [ESP701]json Get current streaming status Smoothieware Command Description M105 Get temperatures M114 Get current positions M27 Get SD print status M220 Get feedrate M221 Get flowrate M115 Get printer capabilities [ESP701]json Get current streaming status Grbl Command Description ? Get current status $G View GCode parser state $# View GCode Parameters [ESP701]json Get current streaming status grblHAL Command Description ? Get current status $G View GCode parser state $# View GCode Parameters ESP3D-TFT Command Description [ESP701]json Get current streaming status ",
    "description": "List of polling commands",
    "tags": [],
    "title": "Polling commands",
    "uri": "/esp3d-webui/v3.x/documentation/polling/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-S3 boards",
    "content": "\rDocumentation\nSpecs ESP32-S3 with 8MB flash memory, 8MB PSRAM (opi), ipex connector antenna, oV2640 camera, Digital Microphone, SD Card reader SD:\nFunction GPIO CS 21 CLK 7 MISO 8 MOSI 9 Camera: CAMERA_MODEL_XIAO_ESP32S3",
    "description": "Seeed Studio XIAO ESP32S3 Sense",
    "tags": [],
    "title": "Seeed Studio XIAO ESP32S3 Sense",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-s3/xiao-s3-sense/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, ceramic antenna, Arduino UNO form factor ",
    "description": "Wemos D1 R32",
    "tags": [],
    "title": "Wemos D1 R32",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/wemos_d1_r32/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Hardware \u003e ESP32-S3 boards",
    "content": " ESP32-S3 based + SDReader + PSRAM + 5’ IPS TFT (800x480) with Capacitive touch screen Aliexpress Features ESP32-S3 dual-core Xtensa 32-bit LX7 microprocessor, up to 240 MHz with 384KB ROM, 512KB SRAM. 2.4GHz WiFi and Bluetooth 5 FLASH: 16MB PSRAM: 8MB Micro-SD card slot (SPI) 5-inch 800x480 IPS TFT display - ST7262 (Parallel RGB-565 interface) Capacitive touch panel - GT911 (i2C - 0x5D or 0x14) Audio amplifier MAX98357 (i2s) Speaker 1 USB-C to Serial 0 (CH340C) I2C / SPI / GPIOs Boot and reset buttons Dimension: 181.0mm x 108.0mm Header P1 (4 pins) (UART): Gnd, Rx, Tx, +5V Header P2 (4 pins) (SPI): IO13, IO12, IO11, IO19 Header P3 (4 pins) (USB/UART): IO20, IO19, IO18, IO17 Header P4 (4 pins) : IO18, IO17, +3.3v, Gnd Header P5 (4 pins) : IO18, IO17, +3.3v, Gnd Header P6 (2 pins) Speaker: (+) (-) Pins Pin Usage GPIO 0 BOOT_BTN / I2S_BCLK (v1.1) GPIO 1 LCD_B4 GPIO 2 TFT_BL GPIO 3 LCD_B1 GPIO 4 LCD_G5 GPIO 5 LCD_G0 GPIO 6 LCD_G1 GPIO 7 LCD_G2 GPIO 8 LCD_B0 GPIO 9 LCD_B3 GPIO 10 SD_CS GPIO 11 SD_MOSI GPIO 12 SD_SCK GPIO 13 SD_MISO GPIO 14 LCD_R4 GPIO 15 LCD_G3 GPIO 16 LCD_G4 GPIO 17 I2S_DIN GPIO 18 CTP_INT* / I2S_LRCLK GPIO 19 CTP_SDA / I2S_BCLK (v1.0) GPIO 20 CTP_SCL GPIO 21 LCD_R3 GPIO 33 NA GPIO 34 NA GPIO 35 NC / NA GPIO 36 NC / NA GPIO 37 NC / NA GPIO 38 CTP_RST GPIO 39 LCD_HSYNC GPIO 40 LCD_DE GPIO 41 LCD_VSYNC GPIO 42 LCD_PCLK GPIO 43 U0TXD GPIO 44 U0RXD GPIO 45 LCD_R0 GPIO 46 LCD_B2 GPIO 47 LCD_R2 GPIO 48 LCD_R1 * Requires Hardware Mod\nHardware Mod (Add Hardware Interrupt for GT911) NOTE: This only applies to the screen with the Capacitive touch panel (ESP32_8048S050C)\nBy default, this board does not connect the Capacitive Touch Screen’s GT911 Interrupt pin to any GPIO pins. This means that the code has to use polling instead of hardware interrupts to determine when the screen is being touched. This results in excessive CPU utilization of greater than 80%. Making the below modifications results in a significantly reduced CPU utilization of under 10% on avg (on static screens).\nSteps (see picture) Install a 0 ohm resistor or solder bridge across R17. This connects the GT911’s INT pin to GPIO18. (If installed) Remove (pull-up) resistor R5 (GPIO18 to 3V3). The GT911’s INT pin is not strong enough to drive GPIO18 low with this resistor installed. (If installed) Remove U1 (XPT2046). This is not needed for the Capacitive touch panel and may conflict with GPIO18 if left on the board. NOTE: Remember to enable the HARDWARE_MOD_GT911_INT option in CMakeLists.txt",
    "description": "ESP32-S3 5' (800x480) IPS TFT",
    "tags": [],
    "title": " 5.0' ESP32-8048S050C",
    "uri": "/esp3d-tft/v1.x/hardware/esp32-s3/sunton-50-8048/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 in ESP12 format with 4MB flash memory, ceramic antenna, 16 pins Pinout 1 2 RST TX ADC RX EN IO5 IO16 IO4 SCK(IO14) IO0 MISO(IO12) IO2 MOSI(IO13) IO15 3.3V GND ",
    "description": "Bigtreetech WiFi module",
    "tags": [],
    "title": "Bigtreetech WiFi module",
    "uri": "/esp3d/v2.x/hardware/esp8266/bttwifi/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 in ESP12 format with 4MB flash memory, ceramic antenna, 16 pins Pinout 1 2 RST TX ADC RX EN IO5 IO16 IO4 SCK(IO14) IO0 MISO(IO12) IO2 MOSI(IO13) IO15 3.3V GND ",
    "description": "Bigtreetech WiFi module",
    "tags": [],
    "title": "Bigtreetech WiFi module",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/bttwifi/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "The board is an all in one Ramps1.4/Mega2560 R3 controller based Board pins voltage 5v Board firmware Marlin Board configuration note Enable second serial port in the marlin configuration file ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "BIQU KFB2.0 board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/biqu_kfb_2_0/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards",
    "content": "\rLILYGO T8 ESP32-S2 V1.1LILYGO T8 ESP32-S2 V1.1\nESP32-S2-Saola-1ESP32-S2-Saola-1\nWemos S2 miniWemos S2 mini",
    "description": " ",
    "tags": [],
    "title": "ESP32-S2 boards",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-s2/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e API",
    "content": "Clients The Gcode Stream Client is the actual streaming service, it is the only one that send msg to output client. On another way the GcodeStreamClient is only one of the active clients which will get the msg from the output client. The GcodeStreamClient use the GCodeParser to parse in/out commands and handle messages correctly.\nComponents 1 - Streaming Types There are several types of streaming services:\nA - Unknown\nThe type is not yet defined, this type cannot be streamed until it is identified.\nB - Single Command\rThis is for any normal GCODE or ESPXXX command coming from any client, this type cannot be interrupted once started, ESP700 / ESP701 do not support it. This type will be added to the script queue and processed FIFO. C - Multiple Commands\rThis is used by scripts stored in EEPROM (resume/pause/abort), this type cannot be interrupted, and all commands will be executed one after another until the end, ESP700 / ESP701 do not support it. This type will be added to the script queue and processed FIFO\rD - Flash File Stream\rThis is the one that will be used to stream a file from flash, this type can be interrupted only between each command execution.\rThis type will put in hold if any command is present in scripts queue and resumed when the scripts queue is empty.\rThis type is used with the command [ESP700]stream=/fs/mystream.gco\rthe file name must have the /fs/ prefix to be sure that the file is handled properly, the [ESP701] commands can handle it but only between commands commands execution, that the purpose of the stream= tag. This type will be added to the stream queue and processed FIFO.\rE - Flash File script\rThis is the one that will be used to stream a file from flash, unlike previous type this type cannot be interrupted and will be excuted until the end. This one is used with the command [ESP700]/fs/myfile.gco\rThe file name must have the /fs/ prefix to be sure that the file is handled properly. The [ESP701] command do not handle it. The file should only contain few commands and it is used by macros only\rThis type will be added to the script queue and processed FIFO\rF - SD File Stream\rThis is the one that will be used to stream a file from sd card, this type can be interrupted only between each command execution.\rThis type will put in hold if any command is present in scripts queue and resumed when the scripts queue is empty.\rThis type is used with the command [ESP700]stream=/sd/mystream.gco\rthe file name must have the /sd/ prefix to be sure that the file is handled properly, the [ESP701] commands can handle it but only between commands commands execution, that the purpose of the stream= tag. This type will be added to the stream queue and processed FIFO.\rG - SD File script\rThis is the one that will be used to stream a file from sd card, unlike previous type this type cannot be interrupted and will be excuted until the end. This one is used with the command [ESP700]/sd/myfile.gco\rThe file name must have the /sd/ prefix to be sure that the file is handled properly. The [ESP701] command do not handle it. The file should only contain few commands and it is used by macros only\rThis type will be added to the script queue and processed FIFO\rE- Invalid\rThe type is not yet identified, this type cannot be streamed and will raise an error.\r2 - Streaming Queues There are 3 types of queues for streams A - Stream queue This queue contain sd streams and fs streams, this queue has lower processing priority than script queue, which mean when the stream reach some state it can be interrupted, put in hold, and resumed. The active stream of this queue can be monitored and controlled with the command [ESP701] B - Script queue This queue contains single commands, multiple commands, sd scripts and fs scripts. The queue has higher priority than script queue and will be processed before the stream queue. There is not control of this queue from user point of view.\nC - Emmergency Queue =\u003e TBC\rThis queue contain single commands that will be executed as soon as possible.\r3 - Streaming queue states The stream states only applied streams queue and only to the active stream, not to scripts queue. A - idle The streams queue is empty, but the scripts queue may not be empty B - processing It means at least one stream in streams queue is being processed, even in hold due to scripts queue not being empty. C - paused The current stream in stream queue is paused. D - error Currently not implemented because when a stream go to error it is removed from stream queue to process the next one in stream queue if any.\n3 - Stream command states The stream command states cover all states of a processed command. A - Undefined The state is undefined and the command will go to error state. B - Start This is the state to start a command or resume it. Next state is normally Ready to read cursor.\nC - Ready to read cursor\rThis is the state before really processing command, this is the state used to put a stream in hold to allow scripts queue or to respond to external change of state for stream like pause/abort. If not change state requested then the next state will be read cursor state\rD - Read Cursor\rThis state read coming processing command from file/multiple commands line or single command.\rAccording to the command the next state will be send gcode command state or send esp command state.\rE - Send gcode command\rSend gcode command to the output client, the command may have been completed with line number and checksum if is requested.\rDepending of the command the next state will be wait for ack if an ack is requested or ready to read next command if no ack is requested.\rF - Send esp command\rThe command has been identified as ESP command, so it will be handled internaly and response will be sent to the original client\rThe next state will be ready to read next command.\rG - Wait for ack\rIf the command has been identified as GCode command and this command will send an ack, this state it to wait for it, if no ack received before a specific timout the next state will be the error state, if the ack is received before timeout then the next state will be ready to read next command.\rH - Resend gcode command\rIn case of GCode command that is completed with line number and checksum and if there a checksum error received, this state will be resend the current gcode command again, ater a specific amount of failure the command will go to the error state.\rI - Pause\rThis state will make the current stream queue on hold and process add a specific script to scripts queue if defined in settings, the next state will be paused.\rJ - Paused\rThis state will be waiting for resume or abort request to complete the stream.\rK - Resume\rIf the current stream is paused it will resume it by adding a specific script to scripts queue if .defined in settings, and changing the next state as ready to read next command\rL - Abort\rThis state will abort the current stream by adding a specific script to scripts queue if .defined in settings and changing the next state as end for the next command.\rM - End\rThis state will close the current stream and remove it from the corresponding queue.\rN - Error\rIf there is an error during the stream processing the error state will be raised, this state will notify the user about the error and the next state will be end state to remove failing stream.\rOperations the streaming is a loop of different operations 1 - Check external notifications / requests This will check if there is an external request for change stream status e.g: pause or resume or abort\n2 - Check what is the current active stream This will check if there is a need of switching between queues and so switch between active streams, emmergency commands queue \u003e scripts queue \u003e streams queue\n3 - Check what is the current active stream state This will check if there is a need of changing the current state of the current active stream and applied it\n4 - Check the client rx queue and process it This will check if there is response / command in the rx queue, parse the response if necessary to search for a command ack, add any external command to the stream queue coming, etc…",
    "description": "Streaming desctiption and API",
    "tags": [],
    "title": "GCode streaming API",
    "uri": "/esp3d-tft/v1.x/documentation/api/streamingservice/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, 8MB PSRAM, ceramic antenna, SD card reader (SPI and SDIO) ",
    "description": "TTGO T8",
    "tags": [],
    "title": "TTGO T8",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/ttgo_t8/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation",
    "content": "You can update ESP3D-TFT using the maintenance page, the web ui and the SD Card and OTA process.\nMaintenance page You can update/manage flash file system content and update firmware.\nThis page is automaticaly available if no index.html / index.html.gz is present on flash filesystem. Another way to access it, is to add the parameter ?forcefallback=yes to your IP address in browser.\nWeb UI You need to have webupdate feature enabled.\nYou can update/manage flash file system content and update firmware.\nSD Card You need to have sd card enabled and sd update feature enabled in configuration.h.\nSettings You can update all esp3d settings when board is starting using an ini file named esp3dcnf.ini at root of SD card.\n[network] #Hostname string of 32 chars max hostname = myesp #Radio mode BT, STA, AP, SETUP, OFF radio_mode = STA #Station fallback mode BT, SETUP, OFF sta_fallback = SETUP #Active when boot device or not Yes / No Radio_enabled = Yes #STA SSID string of 32 chars max STA_SSID = myssid #STA Password string of 64 chars max, minimum 0 or 8 chars STA_Password = ******* #STA IP Mode DHCP / STATIC STA_IP_mode = DHCP #STA static IP STA_IP = 192.168.0.2 #STA static gateway STA_GW = 192.168.0.1 #STA static mask STA_MSK = 255.255.255.0 #STA static dns STA_DNS = 192.168.0.1 #AP SSID string of 32 chars max AP_SSID = myssid #AP Password string of 64 chars max, minimum 0 or 8 chars AP_Password = 12345678 #AP static IP AP_IP = 192.168.0.1 #AP channel 1~14 AP_channel = 11 [services] #Active or not HTTP Yes / No HTTP_active = Yes #HTTP Port HTTP_Port = 80 #Active or not Telnet Yes / No TELNET_active = Yes #Telnet Port TELNET_Port = 23 #Active or not WebSocket Yes / No WebSocket_active = Yes #WebSocket Port WebSocket_Port = 8282 #Active or not WebDav Yes / No WebDav_active = Yes #WebSocket Port WebDav_Port = 8282 #Active or not FTP Yes / No FTP_active = Yes #FTP control Port FTP_Control_Port = 21 #FTP active Port FTP_Active_Port = 20 #FTP passive Port FTP_Passive_Port = 55600 #Auto notification AUTONOTIFICATION = Yes #Notification type None / PushOver / Line / Email / Telegram /IFTTT NOTIF_TYPE = None #Notification token 1 string of 64 chars max NOTIF_TOKEN1 = #Notification token 2 string of 64 chars max NOTIF_TOKEN2 = #Notification settings string of 127 chars max NOTIF_TOKEN_Settings= #SD card Speed factor 1 2 4 6 8 16 32 SD_SPEED = 4 #Check update from SD Yes / No CHECK_FOR_UPDATE = Yes #Enable Buzzer Yes / No Active_buzzer = yes #Active Internet time Yes / No Active_Internet_time = yes #Time servers string of 127 chars max Time_server1 = 1.pool.ntp.org Time_server2 = 2.pool.ntp.org Time_server3 = 3.pool.ntp.org #time zone +/-HH:mm Time_zone = +08:00 #Authentication passwords string of 20 chars max ADMIN_PASSWORD = xxxxxxx USER_PASSWORD = xxxxxxx #session time out in min Sesion_timeout = 3 [system] #Target Firmware: Marlin / Repetier / Smoothieware / GRBL / grblHAL / HP_GL TargetFW=Marlin #Output: SERIAL / USB output=SERIAL #Baud Rate Baud_rate = 115200 #Baud Rate USB_Serial_Baud_rate = 115200Once update is done all passwords set in file will be replaced by ********.\nAttachments\resp3dcnf.ini (2 KB)\rFirmware You can update esp3d firmware when board is starting using a binary image file of firmware esp3dfw.bin at root of SD card. If update is sucessful the file will be renamed to esp3dfw.ok, if esp3dfw.ok already exists, it will be first renamed using some index. If update fail the file is renamed to esp3dfw.bad to avoid to try to update at each boot.\nFlash filesystem You can update esp3d flash filesystem when board is starting using a binary image file of filesystem esp3dfs.bin at root of SD card. If update is sucessful the file will be renamed to esp3dfs.ok, if esp3dfs.ok already exists, it will be first renamed using some index. If update fail the file is renamed to esp3dfs.bad to avoid to try to update at each boot.",
    "description": "Update feature description",
    "tags": [],
    "title": "Update support",
    "uri": "/esp3d-tft/v1.x/documentation/update/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation",
    "content": "You can update ESP3D using the maintenance page, the web ui and the SD Card and OTA process.\nMaintenance page You can update/manage flash file system content and update firmware.\nThis page is automaticaly available if no index.html / index.html.gz is present on flash filesystem. Another way to access it, is to add the parameter ?forcefallback=yes to your IP address in browser.\nWeb UI You need to have webupdate feature enabled.\nYou can update/manage flash file system content and update firmware.\nSD Card You need to have sd card enabled and sd update feature enabled in configuration.h.\nSettings You can update all esp3d settings when board is starting using an ini file named esp3dcnf.ini at root of SD card.\n[network] #hostname string of 32 chars max hostname = myesp #radio mode bt, wifi-sta, wifi-ap, eth-sta, off radio_mode = wifi-sta #station fallback mode bt, wifi-ap, off sta_fallback = wifi-ap #active when boot device or not yes / no radio_enabled = yes #sta ssid string of 32 chars max sta_ssid = myssid #sta password string of 64 chars max, minimum 0 or 8 chars sta_password = ******* #sta ip mode dhcp / static sta_ip_mode = dhcp #sta static ip sta_ip = 192.168.0.2 #sta static gateway sta_gw = 192.168.0.1 #sta static mask sta_msk = 255.255.255.0 #sta static dns sta_dns = 192.168.0.1 #ap ssid string of 32 chars max ap_ssid = myssid #ap password string of 64 chars max, minimum 0 or 8 chars ap_password = 12345678 #ap static ip ap_ip = 192.168.0.1 #ap channel 1~14 ap_channel = 11 [services] #active or not serial bridge yes / no serial_bridge_active = yes # serial bridge baudrate serial_bridge_baud = 115200 #active or not http yes / no http_active = yes #http port http_port = 80 #active or not telnet yes / no telnet_active = yes #telnet port telnet_port = 23 #active or not websocket yes / no websocket_active = yes #websocket port websocket_port = 8282 #active or not webdav yes / no webdav_active = yes #websocket port webdav_port = 8282 #active or not ftp yes / no ftp_active = yes #ftp control port ftp_control_port = 21 #ftp active port ftp_active_port = 20 #ftp passive port ftp_passive_port = 55600 #auto notification autonotification = yes #notification type none / pushover / line / email / telegram /ifttt notif_type = none #notification token 1 string of 64 chars max notif_token1 = #notification token 2 string of 64 chars max notif_token2 = #notification settings string of 127 chars max notif_token_settings= #sd card speed factor 1 2 4 6 8 16 32 sd_speed = 4 #check update from sd yes / no check_for_update = yes #enable buzzer yes / no active_buzzer = yes #active internet time yes / no active_internet_time = yes #time servers string of 127 chars max time_server1 = 1.pool.ntp.org time_server2 = 2.pool.ntp.org time_server3 = 3.pool.ntp.org #time zone -12~12 time_zone = 2 #is dst yes/no time_dst = no #authentication passwords string of 20 chars max admin_password = xxxxxxx user_password = xxxxxxx #session time out in min sesion_timeout = 3 #sensor type if enabled none / dht11 / dht22 / analog / bmp280 / bme280 sensor_type = none #sensor poiling interval in ms sensor_interval = 30000 [system] #target firmware marlin / repetier / marlinkimbra / smoothieware / grbl targetfw=marlin #baud rate baud_rate = 115200 #boot delay in ms boot_delay = 5000 #boot verbose yes / no boot_verbose = no #outputs #printer screen yes / no active_remote_screen = yes #esp3d screen yes / no active_esp3d_screen = yes #esp3d serial yes / no active_serial = yes #serial bridge yes / no active_serial_bridge = yes #websocket yes / no active_websocket = yes #telnet yes / no active_telnet = yes #bluetooth yes / no active_bt = yesOnce update is done all passwords set in file will be replaced by ********.\nAttachments\resp3dcnf.ini (3 KB)\rFirmware You can update esp3d firmware when board is starting using a binary image file of firmware esp3dfw.bin at root of SD card. If update is sucessful the file will be renamed to esp3dfw.ok, if esp3dfw.ok already exists, it will be first renamed using some index. If update fail the file is renamed to esp3dfw.bad to avoid to try to update at each boot.\nFlash filesystem You can update esp3d flash filesystem when board is starting using a binary image file of filesystem esp3dfs.bin at root of SD card. If update is sucessful the file will be renamed to esp3dfs.ok, if esp3dfs.ok already exists, it will be first renamed using some index. If update fail the file is renamed to esp3dfs.bad to avoid to try to update at each boot.\nOTA (Arduino IDE / PlatformIO) This feature need to be enabled in configuration.h\nArduino IDE esp8266 Arduino IDE esp32 PlatformIO esp8266 PlatformIO esp32 ",
    "description": "Update feature description",
    "tags": [],
    "title": "Update support",
    "uri": "/esp3d/v3.x/documentation/update/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation",
    "content": "You can update Marlin with ESP3DLib using the maintenance page, the web ui and the SD Card and OTA process.\nMaintenance page You can update/manage flash file system content and update firmware.\nThis page is automaticaly available if no index.html / index.html.gz is present on flash filesystem. Another way to access it, is to add the parameter ?forcefallback=yes to your IP address in browser.\nWeb UI You need to have webupdate feature enabled.\nYou can update/manage flash file system content and update firmware.\nSD Card You need to have sd card enabled and sd update feature enabled in configuration.h.\nSettings You can update all ESP3DLib settings when board is starting using an ini file named esp3dcnf.ini at root of SD card.\n[network] #hostname string of 32 chars max hostname = myesp #radio mode bt, wifi-sta, wifi-ap, eth-sta, off radio_mode = wifi-sta #station fallback mode bt, wifi-ap, off sta_fallback = wifi-ap #active when boot device or not yes / no radio_enabled = yes #sta ssid string of 32 chars max sta_ssid = myssid #sta password string of 64 chars max, minimum 0 or 8 chars sta_password = ******* #sta ip mode dhcp / static sta_ip_mode = dhcp #sta static ip sta_ip = 192.168.0.2 #sta static gateway sta_gw = 192.168.0.1 #sta static mask sta_msk = 255.255.255.0 #sta static dns sta_dns = 192.168.0.1 #ap ssid string of 32 chars max ap_ssid = myssid #ap password string of 64 chars max, minimum 0 or 8 chars ap_password = 12345678 #ap static ip ap_ip = 192.168.0.1 #ap channel 1~14 ap_channel = 11 [services] #active or not serial bridge yes / no serial_bridge_active = yes # serial bridge baudrate serial_bridge_baud = 115200 #active or not http yes / no http_active = yes #http port http_port = 80 #active or not telnet yes / no telnet_active = yes #telnet port telnet_port = 23 #active or not websocket yes / no websocket_active = yes #websocket port websocket_port = 8282 #active or not webdav yes / no webdav_active = yes #websocket port webdav_port = 8282 #active or not ftp yes / no ftp_active = yes #ftp control port ftp_control_port = 21 #ftp active port ftp_active_port = 20 #ftp passive port ftp_passive_port = 55600 #auto notification autonotification = yes #notification type none / pushover / line / email / telegram /ifttt notif_type = none #notification token 1 string of 64 chars max notif_token1 = #notification token 2 string of 64 chars max notif_token2 = #notification settings string of 127 chars max notif_token_settings= #sd card speed factor 1 2 4 6 8 16 32 sd_speed = 4 #check update from sd yes / no check_for_update = yes #enable buzzer yes / no active_buzzer = yes #active internet time yes / no active_internet_time = yes #time servers string of 127 chars max time_server1 = 1.pool.ntp.org time_server2 = 2.pool.ntp.org time_server3 = 3.pool.ntp.org #time zone -12~12 time_zone = 2 #is dst yes/no time_dst = no #authentication passwords string of 20 chars max admin_password = xxxxxxx user_password = xxxxxxx #session time out in min sesion_timeout = 3 #sensor type if enabled none / dht11 / dht22 / analog / bmp280 / bme280 sensor_type = none #sensor poiling interval in ms sensor_interval = 30000 [system] #target firmware marlin / repetier / marlinkimbra / smoothieware / grbl targetfw=marlin #baud rate baud_rate = 115200 #boot delay in ms boot_delay = 5000 #boot verbose yes / no boot_verbose = no #outputs #printer screen yes / no active_remote_screen = yes #esp3d screen yes / no active_esp3d_screen = yes #esp3d serial yes / no active_serial = yes #serial bridge yes / no active_serial_bridge = yes #websocket yes / no active_websocket = yes #telnet yes / no active_telnet = yes #bluetooth yes / no active_bt = yesOnce update is done all passwords set in file will be replaced by ********.\nAttachments\resp3dcnf.ini (3 KB)\rFirmware You can update Marlin with ESP3DLib firmware when board is starting using a binary image file of firmware esp3dfw.bin at root of SD card. If update is sucessful the file will be renamed to esp3dfw.ok, if esp3dfw.ok already exists, it will be first renamed using some index. If update fail the file is renamed to esp3dfw.bad to avoid to try to update at each boot.\nFlash filesystem You can update Marlin with ESP3DLib flash filesystem when board is starting using a binary image file of filesystem esp3dfs.bin at root of SD card. If update is sucessful the file will be renamed to esp3dfs.ok, if esp3dfs.ok already exists, it will be first renamed using some index. If update fail the file is renamed to esp3dfs.bad to avoid to try to update at each boot.\nOTA (Arduino IDE / PlatformIO) This feature need to be enabled in configuration.h\nArduino IDE esp8266 Arduino IDE esp32 PlatformIO esp8266 PlatformIO esp32 ",
    "description": "Update feature description",
    "tags": [],
    "title": "Update support",
    "uri": "/esp3dlib/v3.x/documentation/update/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Hardware \u003e ESP32-S3 boards",
    "content": " ESP32-S3 based + SDReader + PSRAM + 4.3’ IPS TFT (800x480) with Capacitive touch screen Aliexpress Features ESP32-S3 dual-core Xtensa 32-bit LX7 microprocessor, up to 240 MHz with 384KB ROM, 512KB SRAM. 2.4GHz WiFi and Bluetooth 5 FLASH: 16MB PSRAM: 8MB Micro-SD card slot (SPI) 4.3-inch 800x480 IPS TFT display - ST7262 (Parallel RGB-565 interface) (https://lang-ship.com/blog/work/esp32-4827s043/) Capacitive touch panel - GT911 (i2C - 0x5D or 0x14) 1 USB-C to Serial 0 (CH340C) I2C / SPI / GPIOs Boot and reset buttons Dimension: 181.0mm x 108.0mm Header P1 (4 pins) (UART): Gnd, Rx, Tx, +5V Header P2 (4 pins) (SPI): IO13, IO12, IO11, IO19 Header P3 (4 pins) (USB/UART): IO20, IO19, IO18, IO17 Header P4 (4 pins) : IO18, IO17, +3.3v, Gnd Pins Pin Usage GPIO 0 BOOT_BTN GPIO 1 LCD_B4 GPIO 2 TFT_BL GPIO 3 LCD_B1 GPIO 4 LCD_G5 GPIO 5 LCD_G0 GPIO 6 LCD_G1 GPIO 7 LCD_G2 GPIO 8 LCD_B0 GPIO 9 LCD_B3 GPIO 10 SD_CS GPIO 11 SD_MOSI GPIO 12 SD_SCK GPIO 13 SD_MISO GPIO 14 LCD_R4 GPIO 15 LCD_G3 GPIO 16 LCD_G4 GPIO 17 NC GPIO 18 CTP_INT* GPIO 19 CTP_SDA GPIO 20 CTP_SCL GPIO 21 LCD_R3 GPIO 33 NA GPIO 34 NA GPIO 35 NC / NA GPIO 36 NC / NA GPIO 37 NC / NA GPIO 38 CTP_RST GPIO 39 LCD_HSYNC GPIO 40 LCD_DE GPIO 41 LCD_VSYNC GPIO 42 LCD_PCLK GPIO 43 U0TXD GPIO 44 U0RXD GPIO 45 LCD_R0 GPIO 46 LCD_B2 GPIO 47 LCD_R2 GPIO 48 LCD_R1 * Requires Hardware Mod\nHardware Mod (Add Hardware Interrupt for GT911) NOTE: This only applies to the screen with the Capacitive touch panel (ESP32_8048S043C)\nBy default, this board does not connect the Capacitive Touch Screen’s GT911 Interrupt pin to any GPIO pins. This means that the code has to use polling instead of hardware interrupts to determine when the screen is being touched. This results in excessive CPU utilization of greater than 80%. Making the below modifications results in a significantly reduced CPU utilization of under 10% on avg (on static screens).\nSteps (see picture) Install a 0 ohm resistor or solder bridge across R17. This connects the GT911’s INT pin to GPIO18. (If installed) Remove (pull-up) resistor R5 (GPIO18 to 3V3). The GT911’s INT pin is not strong enough to drive GPIO18 low with this resistor installed. (If installed) Remove U1 (XPT2046). This is not needed for the Capacitive touch panel and may conflict with GPIO18 if left on the board. NOTE: Remember to enable the HARDWARE_MOD_GT911_INT option in CMakeLists.txt",
    "description": "ESP32-S3 4.3' (800x480) IPS TFT",
    "tags": [],
    "title": " 4.3' ESP32-8048S043C",
    "uri": "/esp3d-tft/v1.x/hardware/esp32-s3/sunton-43-8048/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation",
    "content": "\rNote\rFTP server accept only one connection at once, be sure you have limited the number of connections in your client settings\nThe FTP server can serve flash only, sd only or both at once.\nNot yet implemented",
    "description": "FTP usage and configuration",
    "tags": [],
    "title": "About FTP",
    "uri": "/esp3d-tft/v1.x/documentation/ftp/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation",
    "content": "\rNote\rFTP server accept only one connection at once, be sure you have limited the number of connections in your client settings\nThe FTP server can serve flash only, sd only or both at once, but the sd support is limited direct sd and shared sd connections, serial connection is not supported (e.g. MKS protocol)",
    "description": "FTP usage and configuration",
    "tags": [],
    "title": "About FTP",
    "uri": "/esp3d/v3.x/documentation/ftp/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation",
    "content": "\rNote\rFTP server accept only one connection at once, be sure you have limited the number of connections in your client settings\nThe FTP server can serve flash only, sd only or both at once, but the sd support is limited direct sd and shared sd connections, serial connection is not supported (e.g. MKS protocol)",
    "description": "FTP usage and configuration",
    "tags": [],
    "title": "About FTP",
    "uri": "/esp3dlib/v3.x/documentation/ftp/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation",
    "content": "The WebDAV server serve filees on flash and sd at once through /webdav.\nThe authentication is not implemented yet.\nWebDav rely on existing http server, so port is same as http server (80).\nSo access it is based on this URI: http://\u003cyour - ip\u003e/webdav\nTested on Windows 11 and also on Filezilla Pro.",
    "description": "WebDav usage and API",
    "tags": [],
    "title": "About WebDAV",
    "uri": "/esp3d-tft/v1.x/documentation/webdavservice/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation",
    "content": "The WebDAV server can serve flash only, sd only or both at once, but the sd support is limited direct sd and shared sd connections, serial connection is not supported (e.g. MKS protocol)",
    "description": "WebDav usage and configuration",
    "tags": [],
    "title": "About WebDAV",
    "uri": "/esp3d/v3.x/documentation/webdav/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation",
    "content": "The WebDAV server can serve flash only, sd only or both at once, but the sd support is limited direct sd and shared sd connections, serial connection is not supported (e.g. MKS protocol)",
    "description": "WebDav usage and configuration",
    "tags": [],
    "title": "About WebDAV",
    "uri": "/esp3dlib/v3.x/documentation/webdav/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "The wifi connector is for BTT WIFI module (16 pins)\nBoard pins voltage 3.3v Board firmware Marlin Board configuration note Enable second serial port (3) in the marlin configuration file ESP3D configuration note Raw serial, no SD ",
    "description": "Socket avvailable",
    "tags": [],
    "title": "Bigtreetech Octopus 1.1 board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/btt_octopus_1_1/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna/ipex connector From DM",
    "description": "Diymore",
    "tags": [],
    "title": "Diymore",
    "uri": "/esp3d/v2.x/hardware/esp8266/diymore/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna/ipex connector From DM",
    "description": "Diymore",
    "tags": [],
    "title": "Diymore",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/diymore/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards",
    "content": "\rDevKitC-1 v1.0DevKitC-1 v1.0\nDevKitM-1 v1.0DevKitM-1 v1.0\nFreenove ESP32 S3Freenove ESP32 S3\nUICPAL ESP32 S3UICPAL ESP32 S3\nT-SIMCAMT-SIMCAM\nSeeed Studio XIAO ESP32S3 SenseSeeed Studio XIAO ESP32S3 Sense",
    "description": " ",
    "tags": [],
    "title": "ESP32-S3 boards",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-s3/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation",
    "content": " Make boot silent Make boot silent At start the ESP board bootloader generate a report displayed on serial, this report may disturb communication with connected board. It may vary depending on boards but generally look like this:\nets Jun 8 2016 00:22:57\rrst:0x1 (POWERON_RESET),boot:0x17 (SPI_FAST_FLASH_BOOT)\rconfigsip: 0, SPIWP:0xee\rclk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00\rmode:DIO, clock div:2\rload:0x3fff0030,len:1184\rload:0x40078000,len:13104\rload:0x40080400,len:3036\rentry 0x400805e4So make it silent is a must.\nOn ESP32 Bootloader report is not displayed if GPIO15 is connected to GND at startup.\nOn ESP32-S3 On ESP32-S3 bootloader report is always displayed by default, changing the behavior can be done only once for the pin GPIO46 in sdkconfig file change :\n#\r# Boot ROM Behavior\r#\rCONFIG_BOOT_ROM_LOG_ALWAYS_ON=y\r# CONFIG_BOOT_ROM_LOG_ALWAYS_OFF is not set\r# CONFIG_BOOT_ROM_LOG_ON_GPIO_HIGH is not set\r# CONFIG_BOOT_ROM_LOG_ON_GPIO_LOW is not set\r# end of Boot ROM Behaviorby\n#\r# Boot ROM Behavior\r#\r# CONFIG_BOOT_ROM_LOG_ALWAYS_ON=y\r# CONFIG_BOOT_ROM_LOG_ALWAYS_OFF is not set\rCONFIG_BOOT_ROM_LOG_ON_GPIO_HIGH=y\r# CONFIG_BOOT_ROM_LOG_ON_GPIO_LOW is not set\r# end of Boot ROM BehaviorThen flash the board, you can reverse the change in SDK config file after as it won’t take in account anymore because the change is only allowed once. On Panlee and HMI S3 the pin that trigger the bootloader report is the GPIO 46 and it is low at boot.",
    "description": "Frequent asked questions and their answers",
    "tags": [],
    "title": "FAQ",
    "uri": "/esp3d-tft/v1.x/documentation/faq/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation",
    "content": " Make boot silent Make boot silent At start the ESP board bootloader generate a report displayed on serial, this report may disturb communication with connected board. It may vary depending on boards but generally look like this:\nets Jun 8 2016 00:22:57\rrst:0x1 (POWERON_RESET),boot:0x17 (SPI_FAST_FLASH_BOOT)\rconfigsip: 0, SPIWP:0xee\rclk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00\rmode:DIO, clock div:2\rload:0x3fff0030,len:1184\rload:0x40078000,len:13104\rload:0x40080400,len:3036\rentry 0x400805e4So make it silent is a must.\nOn ESP32 Bootloader report is not displayed if GPIO15 is connected to GND at startup.\nOn ESP32-S3 / ESP32-S2 / ESP32-C3 On ESP32-S3/S2/C3 bootloader report is always displayed by default, changing the behavior can be done only once for the pin GPIO46.\nUse [ESP999]QUIETBOOT pwd=\u003cadmin/user password\u003e\nOn ESP8266 It is not possible to make the boot silent on ESP8266.",
    "description": "Frequent asked questions and their answers",
    "tags": [],
    "title": "FAQ",
    "uri": "/esp3d/v3.x/documentation/faq/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation",
    "content": "",
    "description": "Frequent asked questions and their answers",
    "tags": [],
    "title": "FAQ",
    "uri": "/esp3dlib/v3.x/documentation/faq/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e API",
    "content": "The WebDAV server serve flash and sd at once.\nIntroduction The protocol is based on HTTP and is designed to allow clients to perform remote Web content authoring operations.\nWebDav protocol provides facilities to copy, move, delete resources, to query and set properties on resources.\nThis protocol has several features but many are useless for the purpose of this project, so the protocol will be followed but using only the features that are needed.\nThe authentication is not implemented yet.\nIf no namespace is supposed ok for xml tags because there is no possible conflict in webdav requests/responses, Windows seems request them so they have been added.\nAs it is embedded system on local network, the header Date is not supported, indeed it make no sense to give 1970 based year date, if system date is not initialized.\nWebDav version The version of WebDav that will be used is 1 because we do not need PROPATCH, LOCK and UNLOCK methods. The DAV header will be set to 1. The allow header will be set to GET, HEAD, PUT, DELETE, OPTIONS, PROPFIND, MKCOL, COPY, MOVE.\nTime format Date format for WebDav like last modified and creation date is the GMT time format with name of day and month in english: Thu, 01 Jan 1970 00:04:34 GMT, because even if the rfc says if can be in this format :1997-12-01T17:42:21-08:00, it seems not usable on Filezilla Pro neither Windows, so english date is a must.\nGET method The GET method is used to retrieve information about the resource identified by the Request-URI. And the content of the resource is returned as the response body. The necessary headers in response are:\nDAV Allow Last-Modified Content-Length (if the resource is a file) Content-Type (if the resource is a file) The content of the reponse is:\nthe file if the resource is a file empty if the resource is a directory The response code is:\n200 if the resource is a file or a directory and the request was successful 404 if the resource does not exist 500 if any error during the file streaming 503 if any error accessing the local file system (e.g. access denied) HEAD method The HEAD method is used to retrieve information about the resource identified by the Request-URI. The necessary headers in response are:\nDAV Allow Last-Modified Content-Length (if the resource is a file) Content-Type (if the resource is a file) Unlike GET method, the HEAD method does not return the content of the resource.\nThe response code is:\n200 if the resource is a file or a directory and the request was successful 404 if the resource does not exist 500 if any error during the file streaming 503 if any error accessing the local file system (e.g. access denied) OPTIONS method The OPTIONS method is used to retrieve the communication options for WebDav. The necessary headers in response are:\nDAV Allow No content The response code is always 200. DELETE method The DELETE method is used to delete the resource identified by the Request-URI. The necessary headers in response are:\nDAV Allow No content The response code is: 204 if success 404 if the resource does not exist 503 if any error accessing the local file system (e.g. access denied) 500 if any error during the file/dir deletion 400 if the resource is / or /sd or /fs MKCOL method The MKCOL method is used to create a new collection resource at the location specified by the Request-URI. The request has the following headers:\nDestination is the path of the resource to create. to be used instead of the Request-URI if present. The necessary headers in response are: DAV Allow No content The response code is: 201 if success 409 if the resource already exists 503 if any error accessing the local file system (e.g. access denied) 500 if any error during the dir creation 400 if the resource is / or /sd or /fs PUT method The PUT method is used to create a new non-collection resource at the location specified by the Request-URI. The request has the following headers:\nContent-Length is the size of the file. Content-Type is the type of the file. no Overwrite header because we always overwrite the file.\nthe request content is the content of the resource to create. The necessary headers in response are:\nDAV Allow Last-Modified No content The response code is: 201 if success and file is created 204 if success and file is overwritten 412 if the resource is a directory 503 if any error accessing the local file system (e.g. access denied) 500 if any error during the file creation 507 if the file is too big for the targeted file system PROPFIND method The PROPFIND method retrieves properties defined on the resource identified by the Request-URI, if the Request-URI is a collection it returns the properties of the collection and the properties of the members of the collection. The request has the following headers:\nDepth can be 0 or 1 or infinity but we do not support infinity so instead we use 1 and that will be returned as the depth in the PROPFIND response Content-Type is the type of the request body. It can be text/xml or application/xml or application/x-www-form-urlencoded or multipart/form-data but we only support text/xml. this content can be ignored because we will always return the same content type. Content-Length is the size of the request body. The request body can be ignored because we will always return the same content\nThe necessary headers in response are:\nDAV Allow Content-Type is text/xml Connection: close Content-Length is the size of the response body but because it is not possible to know the size of the response body before generating it because we do not know the number of resources in the directory, we will use chunked transfer encoding. so this header will not be present in the response. depth=1 will only be added in case of a request of depth=infinity The response body is an xml document containing the properties of the resource.\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e \u003cD:multistatus xmlns:D=\"DAV:\"\u003e \u003cD:response xmlns:esp3d=\"DAV:\"\u003e \u003cD:href\u003e/webdav\u003c/D:href\u003e \u003cD:propstat\u003e \u003cD:status\u003eHTTP/1.1 200 OK\u003c/D:status\u003e \u003cD:prop\u003e \u003cesp3d:getlastmodified\u003eWed, 25 Oct 2023 04:44:55 GMT\u003c/esp3d:getlastmodified\u003e \u003cesp3d:creationdate\u003eWed, 25 Oct 2023 04:44:55 GMT\u003c/esp3d:creationdate\u003e \u003cD:resourcetype\u003e \u003cD:collection/\u003e \u003c/D:resourcetype\u003e \u003cesp3d:displayname\u003e/\u003c/esp3d:displayname\u003e \u003c/D:prop\u003e \u003c/D:propstat\u003e \u003c/D:response\u003e \u003cD:response xmlns:esp3d=\"DAV:\"\u003e \u003cD:href\u003e/webdav/fs\u003c/D:href\u003e \u003cD:propstat\u003e \u003cD:status\u003eHTTP/1.1 200 OK\u003c/D:status\u003e \u003cD:prop\u003e \u003cesp3d:getlastmodified\u003eWed, 31 Dec 1969 23:59:59 GMT\u003c/esp3d:getlastmodified\u003e \u003cesp3d:creationdate\u003eThu, 01 Jan 1970 00:00:00 GMT\u003c/esp3d:creationdate\u003e \u003cD:resourcetype\u003e \u003cD:collection/\u003e \u003c/D:resourcetype\u003e \u003cesp3d:displayname\u003efs\u003c/esp3d:displayname\u003e \u003c/D:prop\u003e \u003c/D:propstat\u003e \u003c/D:response\u003e \u003cD:response xmlns:esp3d=\"DAV:\"\u003e \u003cD:href\u003e/webdav/sd\u003c/D:href\u003e \u003cD:propstat\u003e \u003cD:status\u003eHTTP/1.1 200 OK\u003c/D:status\u003e \u003cD:prop\u003e \u003cesp3d:getlastmodified\u003eThu, 01 Jan 1970 00:00:00 GMT\u003c/esp3d:getlastmodified\u003e \u003cesp3d:creationdate\u003eThu, 01 Jan 1970 00:00:00 GMT\u003c/esp3d:creationdate\u003e \u003cD:resourcetype\u003e \u003cD:collection/\u003e \u003c/D:resourcetype\u003e \u003cesp3d:displayname\u003esd\u003c/esp3d:displayname\u003e \u003c/D:prop\u003e \u003c/D:propstat\u003e \u003c/D:response\u003e \u003c/D:multistatus\u003eThe response code is:\n207 if success 404 if the resource does not exist 503 if any error accessing the local file system (e.g. access denied) COPY method The COPY method is used to copy the resource identified by the Request-URI to the destination URI. The copy is allowed only for a file and not for a directory. Only move /fs to /fs and /sd to /sd\nThe request has the following headers:\nDestination is the path of the resource to create. to be used instead of the Request-URI if present. Overwrite is a boolean that indicates if the destination resource should be overwritten if it already exists. If the header is not present, the default value is false. Depth can be 0 or 1 or infinity but we do not support collection copy so this header is ignored The necessary headers in response are:\nDAV Allow No content\nThe response code is:\n201 if success and file is created 204 if success and file is overwritten 404 if the resource does not exist 413 if the resource is a directory 412 if the destination resource already exists and overwrite is false 409 if overwrite is true and the destination and source are different types (file or directory) 503 if any error accessing the local file system (e.g. access denied) 500 if any error during the file creation 507 if the file is too big for the targeted file system 400 if source or destination is / or /sd or /fs, or try to /sd to /fs or /fs to /sd MOVE method The MOVE method is used to move the resource identified by the Request-URI to the destination URI. There is no merge of the destination resource and the source resource but the destination resource is overwritten/replaced if it already exists. Only move /fs to /fs and /sd to /sd\nThe request has the following headers:\nDestination is the path of the resource to create. to be used instead of the Request-URI if present. Overwrite is a boolean that indicates if the destination resource should be overwritten if it already exists. If the header is not present, the default value is false. The necessary headers in response are:\nDAV Allow No content\nThe response code is:\n201 if success and file is created 204 if success and file is overwritten 404 if the resource does not exist 412 if the destination resource already exists and overwrite is false 409 if overwrite is true and the destination and source are different types (file or directory) 503 if any error accessing the local file system (e.g. access denied) 500 if any error during the file creation 400 if source or destination is / or /sd or /fs, or try to move /sd to /fs or /fs to /sd ",
    "description": "WebDav usage and API",
    "tags": [],
    "title": "WebDAV API",
    "uri": "/esp3d-tft/v1.x/documentation/api/webdavservice/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna Pinout 1 2 RESET TX ADC RX IO16 IO5 IO14 IO4 IO12 IO0 IO13 IO2 IO15 GND 3.3V 5V ",
    "description": "Wemos D1 mini",
    "tags": [],
    "title": "Wemos D1 mini",
    "uri": "/esp3d/v2.x/hardware/esp8266/d1mini/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna Pinout 1 2 RESET TX ADC RX IO16 IO5 IO14 IO4 IO12 IO0 IO13 IO2 IO15 GND 3.3V 5V ",
    "description": "Wemos D1 mini",
    "tags": [],
    "title": "Wemos D1 mini",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/d1mini/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 16MB flash memory, ceramic antenna/ipx connector Pinout 1 2 RESET TX ADC RX IO16 IO5 IO14 IO4 IO12 IO0 IO13 IO2 IO15 GND 3.3V 5V ",
    "description": "Wemos D1 mini Pro",
    "tags": [],
    "title": "Wemos D1 mini Pro",
    "uri": "/esp3d/v2.x/hardware/esp8266/d1minipro/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 16MB flash memory, ceramic antenna/ipx connector Pinout 1 2 RESET TX ADC RX IO16 IO5 IO14 IO4 IO12 IO0 IO13 IO2 IO15 GND 3.3V 5V ",
    "description": "Wemos D1 mini Pro",
    "tags": [],
    "title": "Wemos D1 mini Pro",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/d1minipro/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Hardware \u003e ESP32-S3 boards",
    "content": " ESP32-S3 based + SDReader + PSRAM + 4.3’ TFT (470x272) with Resistive or Capacitive touch screen Aliexpress Features ESP32-S3 dual-core Xtensa 32-bit LX7 microprocessor, up to 240 MHz with 384KB ROM, 512KB SRAM. 2.4GHz WiFi and Bluetooth 5 FLASH: 16MB PSRAM: 8MB Micro-SD card slot (SPI) 4.3-inch 480x272 TFT display - ILI9485 (Parallel RGB-565 interface) (https://lang-ship.com/blog/work/esp32-4827s043/) Touch panel options: ESP32-4827S043R - Resistive touch panel - XPT2046 (SPI) - not yet supported ESP32-4827S043C - Capacitive touch panel - GT911 (i2C - 0x5D or 0x14) 1 USB-C to Serial 0 (CH340C) I2C / SPI / GPIOs Boot and reset buttons Dimension: 181.0mm x 108.0mm Header P1 (4 pins) (UART): Gnd, Rx, Tx, +5V Header P2 (4 pins) (SPI): IO13, IO12, IO11, IO19 Header P3 (4 pins) (USB/UART): IO20, IO19, IO18, IO17 Header P4 (4 pins) : IO18, IO17, +3.3v, Gnd Pins Pin Usage GPIO 0 BOOT_BTN GPIO 1 LCD_B4 GPIO 2 TFT_BL GPIO 3 LCD_B1 GPIO 4 LCD_G5 GPIO 5 LCD_G0 GPIO 6 LCD_G1 GPIO 7 LCD_G2 GPIO 8 LCD_B0 GPIO 9 LCD_B3 GPIO 10 SD_CS GPIO 11 SD_MOSI GPIO 12 SD_SCK GPIO 13 SD_MISO GPIO 14 LCD_R4 GPIO 15 LCD_G3 GPIO 16 LCD_G4 GPIO 17 NC GPIO 18 CTP_INT* GPIO 19 CTP_SDA GPIO 20 CTP_SCL GPIO 21 LCD_R3 GPIO 33 NA GPIO 34 NA GPIO 35 NC / NA GPIO 36 NC / NA GPIO 37 NC / NA GPIO 38 CTP_RST GPIO 39 LCD_HSYNC GPIO 40 LCD_DE GPIO 41 LCD_VSYNC GPIO 42 LCD_PCLK GPIO 43 U0TXD GPIO 44 U0RXD GPIO 45 LCD_R0 GPIO 46 LCD_B2 GPIO 47 LCD_R2 GPIO 48 LCD_R1 * Requires Hardware Mod\nHardware Mod (Add Hardware Interrupt for GT911) NOTE: This only applies to the screen with the Capacitive touch panel (ESP32_4827S043C)\nBy default, this board does not connect the Capacitive Touch Screen’s GT911 Interrupt pin to any GPIO pins. This means that the code has to use polling instead of hardware interrupts to determine when the screen is being touched. This results in excessive CPU utilization of greater than 80%. Making the below modifications results in a significantly reduced CPU utilization of under 10% on avg (on static screens).\nSteps (see picture) Install a 0 ohm resistor or solder bridge across R17. This connects the GT911’s INT pin to GPIO18. (If installed) Remove (pull-up) resistor R5 (GPIO18 to 3V3). The GT911’s INT pin is not strong enough to drive GPIO18 low with this resistor installed. (If installed) Remove U1 (XPT2046). This is not needed for the Capacitive touch panel and may conflict with GPIO18 if left on the board. NOTE: Remember to enable the HARDWARE_MOD_GT911_INT option in CMakeLists.txt",
    "description": "ESP32-S3 4.3' (480x272) TFT",
    "tags": [],
    "title": " 4.3' ESP32-4827S043R/C",
    "uri": "/esp3d-tft/v1.x/hardware/esp32-s3/sunton-43-4827/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "Use the AUX1 or TFT connector\nBoard pins voltage 3.3v Board firmware Marlin Board configuration note Enable second serial port in the marlin configuration file ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "Bigtreetech skr board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/btt_skr_1_3/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation \u003e API",
    "content": " What is an extension ? Basic code Send message Send GCODE command or ESP command Send web query Send web upload Send webdownload request Send sound notification Send toast notification Send translation request Send capabilities request Save extension settings to preferences.json Send icon request Dispatch message to other extensions Modal Dialog Documentation Modal Types Sending Messages Modal Content Fields types and options Handling Messages Install an extension in Web UI Sample codes What is an extension ? An extension is a small piece of code that can be added to the Web UI to add new functionality. It can be used to add new tabs, new panels in web UI. Extensions are dynamic, modular components that enhance the functionality of our main application. They are designed to be flexible and easily integrated, allowing for customization and expansion of features without modifying the core application. Key characteristics of extensions include:\nIsolated Execution: Extensions run within their own iframe, ensuring a level of separation from the main application. Dynamic Loading: They can be loaded on-demand, improving the application’s overall performance and flexibility. Consistent Styling: Extensions adopt styles from the main application, maintaining a cohesive look and feel. Diverse Functionality: Extensions can serve various purposes, from adding new features to integrating external services. Managed Lifecycle: The system handles the loading, display, and unloading of extensions, simplifying their management. By leveraging extensions, our application becomes more adaptable and can cater to a wide range of user needs while maintaining a stable core structure.\nNote\rTo decrease the size of of the extension you can minify and gzip it, it will reduce its size, and will be faster to load.\nBasic code Here is a basic code for extension to communicate with Web UI\n\u003cscript type=\"text/javascript\"\u003e\r//Send message to web ui\rfunction sendMessage(msg){\rwindow.parent.postMessage(msg, '*');\r}\r//Process Message coming from webUI\rfunction processMessage(eventMsg){\r//now process eventMsg.data\r}\r//Setup message listener from webUI\rwindow.onload = (event) =\u003e {\rwindow.addEventListener(\"message\", processMessage, false);\r};\r\u003c/script\u003e\r\u003cdiv class=\"container\"\u003e\rDisplay your HTML here\r\u003c/div\u003eAs you can see, code is minimal - it will fit a a panel or page, webui css / theme will be added by webUI after loaded, so you do not need to add any, you can use any of existing class available in webUI.\nCommunication between frame and main window is done by messages using objects (string / array based), do not use any object that could ne be cloned or loading will fail.\nOne typical use case is when WebUI send notificstion to extension o inform it that is visible or not, so extension can adjust its own behavior according to this information.\nThe notification message (eventMsg.data) has the following structure:\n{\rtype: 'notification',\rcontent: {\risVisible: true | false,\r},\rid: 'extra_content_XXXXX'\r}The id is the id of the node that contain the iframe, which means unlike others messages, notification with specific id are addressed to the iframe of the node and not broadcasted to all iframes. Currently notifications are limited to visible / not visible, but it is possible to add more information in the future.\nSend message message structure used by window.parent.postMessage(msg, '*'); has a defined format, some parameters are madatories, some are optionals and some depend on message type:\n{type:'\u003cmessage type\u003e', target:'webui', id:'[origin]', noDispatch:[true], XXX:YYY}\n\u003cmessage type\u003e is mandatory, it define the purpose of the message\ntarget:'webui' is mandatory, it help to screen the message id:'[origin]' is optionnal, it define which id must read the response if any, if present it can be used by extension to filter message, no id means the message is for everyone\nnoDispatch:[true] is optionnal, if true it will prevent to send answer if any, if not or set to false, it will send answer message if any\nXXX:YYY are optionals/mandatories according message type\nSend GCODE command or ESP command Example: {type:'cmd', target:'webui',id:'terminal', content:'[ESP111]'}\ntype is cmd (mandatory)\ntarget is webui (mandatory)\nid is terminal (optional)\ncontent is the command that need to be sent, in our case [ESP111] (mandatory)\nNote: there is no noDispatch:true so answer, if any from ESP firmware, will be sent\nNote 2: there is no way to prevent the answer to be spread if it come from external board from serial, even if id and noDispatch are set\nAnswer format: check the eventMsg.data\nif success\n{\r\"type\": \"cmd\",\r\"content\": {\r\"status\": \"success\"\r\"response\": \"192.168.1.111\",\r\"initiator\": { \"content\":\"[ESP111]\",\r\"id\":\"terminal\",\r\"target\":\"webui\", \"type\":\"cmd\", }\r},\r\"id\": \"terminal\"\r} type is cmd\nid is the id set in command message to help to screen content has the response’s status which is success, the response it self response, in our case 192.168.1.111 and also the initiator is the initial command for reference\nif error\n{ \"type\": \"cmd\", \"content\": { \"status\": \"error\", \"error\":\"Cannot connect\", \"initiator\": { \"content\":\"[ESP111]\",\r\"id\":\"terminal\",\r\"target\":\"webui\", \"type\":\"cmd\", }\r}, \"id\":\"terminal\"\r}type is error for any error command\nid is the id set in command message to help to screen content has the response’s status which is error, and the error it self error, in our case Cannot connect and also the initiator is the initial command for reference\nSend web query Example: {type:'query', target:'webui', id:'filemanager', url:'files', args:{action:'list', path:'/'}} type is query (mandatory)\ntarget is webui (mandatory)\nid is terminal (optional)\nurl is the base url in our case files for /files (mandatory)\nargs is the set of arguments url in our case {action:'list', path:'/'} for /files?action=list\u0026path=/ (optional for query)\nNote: noDispatch:true and id:'term' are applicable in this case if needed\nAnswer format: check the eventMsg.data if success\n{\r\"type\": \"query\",\r\"response\": {\r\"status\": \"success\",\r\"response\": \"{\\\"files\\\":[{\\\"name\\\":\\\"config.yaml\\\",\\\"size\\\":\\\"1.55 KB\\\"}],\\\"path\\\":\\\"/\\\",\\\"occupation\\\":\\\"35\\\",\\\"status\\\":\\\"ok\\\",\\\"total\\\":\\\"1.31 MB\\\",\\\"used\\\":\\\"470.08 KB\\\"}\",\r\"initiator\": {\r\"type\": \"query\", \"target\": \"webui\", \"id\": \"filemanager\", \"url\": \"files\", \"args\": {\r\"action\": \"list\", \"path\": \"/\"\r}\r}\r},\r\"id\": \"filemanager\"\r}type is query id is the id set in output message to help to screen content has the response’s status which is success, the response it self response, in our case a JSON, and also the initiator is the initial command for reference\nif error\n{\r\"type\": \"query\",\r\"response\": {\r\"status\": \"error\",\r\"error\": \"Cannot connect\",\r\"initiator\": {\r\"type\": \"query\", \"target\": \"webui\", \"id\": \"filemanager\", \"url\": \"files\", \"args\": {\r\"action\": \"list\", \"path\": \"/\"\r}\r}\r},\r\"id\": \"filemanager\"\r}type is query id is the id set in output message to help to screen content has the response’s status which is error, and the error it self error, in our case Cannot connect and also the initiator is the initial command for reference\nSend web upload Example: {type:'upload', target:'webui', id:'filemanager', url:'files', content:[...],size:500, path:\"/\", filename:'file.txt'} type is upload (mandatory)\ntarget is webui (mandatory)\nid is filemanager (optional)\nurl is the base url in our case files for /files (mandatory for upload)\ncontent is the file in an array object (mandatory) size is the file size (mandatory)\npath is the file target path (not including name) (mandatory) size is the filename (not including path) (mandatory) args is an object with optional arguments like for query, they are no used in post but in url itself\nNote: noDispatch:true and id:'filemanager' are applicable in this case if needed\nAnswer format: check the eventMsg.data\nfor upload the initiator does not contain the file content if success\n{\r\"type\": \"upload\",\r\"response\": {\r\"status\": \"success\",\r\"response\": \"{\\\"files\\\":[{\\\"name\\\":\\\"config.yaml\\\",\\\"size\\\":\\\"1.55 KB\\\"},{\\\"name\\\":\\\"file.txt\\\",\\\"size\\\":\\\"500B\\\"}],\\\"path\\\":\\\"/\\\",\\\"occupation\\\":\\\"35\\\",\\\"status\\\":\\\"ok\\\",\\\"total\\\":\\\"1.31 MB\\\",\\\"used\\\":\\\"470.08 KB\\\"}\",\r\"initiator\": {\r\"type\":\"upload\", \"target\":\"webui\", \"id\":\"filemanager\", \"url\":\"files\",\r\"size\":500, \"path\":\"/\", \"filename\":\"file.txt\"\r}\r},\r\"id\": \"filemanager\"\r}type is upload id is the id set in output message to help to screen content has the response’s status which is success, the response it self response, in our case a JSON, and also the initiator is the initial command for reference but without the file content\nprogression message\n{\r\"type\": \"upload\",\r\"response\": {\r\"status\": \"progress\",\r\"progress\": \"100\",\r\"initiator\": {\r\"type\":\"upload\", \"target\":\"webui\", \"id\":\"filemanager\", \"url\":\"files\",\r\"size\":500, \"path\":\"/\", \"filename\":\"file.txt\"\r}\r},\r\"id\": \"filemanager\"\r}type is upload id is the id set in output message to help to screen content has the response’s status which is progress, and the progression it self progress, in our case 100 = 100% and also the initiator is the initial command for reference but without the file content\nif error\n{\r\"type\": \"upload\",\r\"response\": {\r\"status\": \"error\",\r\"error\": \"Cannot connect\",\r\"initiator\": {\r\"type\":\"upload\", \"target\":\"webui\", \"id\":\"filemanager\", \"url\":\"files\",\r\"size\":500, \"path\":\"/\", \"filename\":\"file.txt\"\r}\r},\r\"id\": \"filemanager\"\r}type is upload id is the id set in output message to help to screen content has the response’s status which is error, and the error it self error, in our case Cannot connect and also the initiator is the initial command for reference but without the file content\nSend webdownload request Example: {type:'download', target:'webui', id:'filemanager', url:'preferences.json'} type is download (mandatory)\ntarget is webui (mandatory)\nid is filemanager (optional)\nurl is the url of the file in our case preferences.json for /preferences.json (mandatory)\nargs is an object with optional arguments like for query\nNote: id:'filemanager' is applicable in this case if needed, but not noDispatch:true as the purpose is to get response\nAnswer format: check the eventMsg.data if success\n{\r\"type\": \"download\",\r\"response\": {\r\"status\": \"success\",\r\"response\": [...],\r\"initiator\": {\r\"type\":\"download\", \"target\":\"webui\", \"id\":\"filemanager\", \"url\":\"preferences.json\",\r}\r},\r\"id\": \"filemanager\"\r}type is upload id is the id set in output message to help to screen content has the response’s status which is success, the response it self response, in our case a blob which is the file that need to be read properly, and also the initiator is the initial command for reference\nprogression message\n{\r\"type\": \"upload\",\r\"response\": {\r\"status\": \"progress\",\r\"progress\": \"100\",\r\"initiator\": {\r\"type\":\"upload\", \"target\":\"webui\", \"id\":\"filemanager\", \"url\":\"preferences.json\",\r}\r},\r\"id\": \"filemanager\"\r}type is download id is the id set in output message to help to screen content has the response’s status which is progress, and the progression it self progress, in our case 100 = 100% and also the initiator is the initial command for reference\nif error\n{\r\"type\": \"download\",\r\"response\": {\r\"status\": \"error\",\r\"error\": \"404\",\r\"initiator\": {\r\"type\":\"upload\", \"target\":\"webui\", \"id\":\"filemanager\", \"url\":\"preferences.json\",\r}\r},\r\"id\": \"filemanager\"\r}type is download id is the id set in output message to help to screen content has the response’s status which is error, and the error it self error, in our case 404 (file not found) and also the initiator is the initial command for reference\nSend sound notification There is no answer for this message, so id is not necessary\nGenerate a beep notification\nExample: {type:'sound', target:'webui', content:'beep'}\ntype is `` (mandatory)\ntarget is webui (mandatory)\nsound is the sound type, in our case beep (mandatory)\nGenerate a beep error notification\nExample: {type:'sound', target:'webui', content:'error'}\ntype is `` (mandatory)\ntarget is webui (mandatory)\nsound is the sound type, in our case error (mandatory)\nGenerate a beep sequence notification\nExample: {type:'sound', target:'webui', content:'beep', seq:[{ f: 1046, d: 200 },{ f: 1318, d: 100 }]}\ntype is `` (mandatory)\ntarget is webui (mandatory)\nsound is the sound type, in our case seq (mandatory)\nseq is an array of sequence of beep, in our case [{ f: 1046, d: 200 },{ f: 1318, d: 100 }] (mandatory), f is frequency and d is duration of the beep\nSend toast notification There is no answer for this message, so id is not necessary\nGenerate a success toast notification\nExample: {type:'toast', target:'webui', content:{text:'This is a success', type:'success'}}\ntype is `` (mandatory)\ntarget is webui (mandatory)\ncontent has the toast type, in our case success, and the text to display, in ou case This is a success (mandatory)\nGenerate an error toast notification\nExample: {type:'toast', target:'webui', content:{text:'This is an error', type:'error'}}\ntype is `` (mandatory)\ntarget is webui (mandatory)\ncontent has the toast type, in our case error, and the text to display, in ou case This is an error (mandatory)\nGenerate a normal toast notification\nExample: {type:'toast', target:'webui', content:{text:'This is a toast', type:'default'}}\ntype is `` (mandatory)\ntarget is webui (mandatory)\ncontent has the toast type, in our case default, and the text to display, in ou case This is a toast (mandatory)\nSend translation request simple translation Example: {type:'translate', target:'webui', id:'transpanel', content:'S153'}\ntype is translate (mandatory)\ntarget is webui (mandatory)\nid is transpanel (optional)\ncontent is the text that need to be translated, in our case S153 (mandatory)\nAnswer format: check the eventMsg.data\n{\r\"type\": \"translate\",\r\"content\": {\r\"response\": \"Your session will end soon, do you want to stay connected ?\",\r\"initiator\": {\r\"type\":\"translate\", \"target\":\"webui\", \"id\":\"transpanel\", \"content\":\"S153\"\r}\r},\r\"id\": \"transpanel\"\r} type is translate\nid is the id set in command message to help to screen content has the response it self response, in our case Your session will end soon, do you want to stay connected ? and also the initiator is the initial command for reference\nfull dump of translations\nExample: {type:'translate', target:'webui', id:'transpanel', all:'true'}\ntype is translate (mandatory)\ntarget is webui (mandatory)\nid is transpanel (optional)\nall to take all translations (mandatory)\nAnswer format: check the eventMsg.data\n{\r\"type\": \"translate\",\r\"content\": {\r\"response\": \"Your session will end soon, do you want to stay connected ?\",\r\"initiator\": {\r\"type\":\"translate\", \"target\":\"webui\", \"id\":\"transpanel\", \"content\":[....]\r}\r},\r\"id\": \"transpanel\"\r} type is translate\nid is the id set in command message to help to screen content has the response it self response, in our case an array of all translations and also the initiator is the initial command for reference\nSend capabilities request This allow to collect all capabilities for specific topic:\nif id is connection you will get the json of [ESP800] response jsonified if id is features you will get the [ESP400] response jsonified if id is interface you will get the settings from preferences.json jsonified if id is settings you will get specific settings from target fw in json format if id is extensions you will get the extensions from preferences.json jsonified of the name extensions Be noted this API only collect existing data, so for features,interface, extensionsand settings you may get empty response if corresponding query has not be done.\nAbout settings the format may differ from one firmware to another, so you need to check the response to know how to use it, response is always a variable named machineSettings and important content may usualy located in machineSettings.cache\nExample: {type:'capabilities', target:'webui', id:'connection'}\ntype is capabilities (mandatory)\ntarget is webui (mandatory)\nid is connection (mandatory)\nAnswer format: check the eventMsg.data\n{\r\"type\": \"capabilities\",\r\"content\": {\r\"response\": \"{\r\"FWVersion\": \"3.0.0.a111\",\r\"FWTarget\": \"marlin\",\r\"FWTargetID\": \"40\",\r\"Setup\": \"Enabled\",\r\"Screen\": \"HMI V3\",\r\"Streaming\": \"Enabled\",\r\"SDConnection\": \"direct\",\r\"SerialProtocol\": \"Raw\",\r\"Authentication\": \"Disabled\",\r\"WebCommunication\": \"Asynchronous\",\r\"WebSocketIP\": \"localhost\",\r\"WebSocketPort\": \"81\",\r\"Hostname\": \"esp3d\",\r\"WiFiMode\": \"STA\",\r\"WebUpdate\": \"Enabled\",\r\"FlashFileSystem\": \"LittleFS\",\r\"HostPath\": \"/\",\r\"Time\": \"none\",\r\"HostTarget\": \"files\",\r\"HostUploadPath\": \"/\",\r\"HostDownloadPath\": \"/\",\r\"wsID\": \"0\"\r}\",\r\"initiator\": {\r\"type\":\"capabilities\", \"target\":\"webui\", \"id\":\"connection\"\r}\r},\r\"id\": \"connection\"\r} type is capabilities\nid is the id of requested capability\ncontent has the response it self response, in our case a JSON and also the initiator is the initial command for reference\nSave extension settings to preferences.json This allow to save extension settings to preferences.json, it is a way to store settings for extension that need to be saved for next session:\nExample: {type:'extensionsData', target:'webui', id:'myextension', content:'{\"setting1\":\"value1\",\"setting2\":\"value2\"}'}\ntype is extensionsData (mandatory)\ntarget is webui (mandatory)\nid is myextension (mandatory)\ncontent is the settings to save, in stringified JSON format, in our case {\"setting1\":\"value1\",\"setting2\":\"value2\"} (mandatory)\nAnswer format: check the eventMsg.data\n{\r\"type\": \"extensionsData\",\r\"content\": {\r\"response\": \"{\r\"status\": \"success\"\r}\",\r\"initiator\": {\r\"type\":\"extensionsData\", \"target\":\"webui\", \"id\":\"myextension\",\r\"content\":\"{\"setting1\":\"value1\",\"setting2\":\"value2\"}\"\r}\r},\r\"id\": \"myextension\"\r} type is extensionsData\nid is the id of extension that saved settings content has the response which is the status and also the initiator is the initial command for reference\nSend icon request The WebUI already a set of icons, so no need to bother with new icons, you can request a specific one if needed\nBe noted some icons may be specific to a system, so it may not be available in all systems, the svg icon will be returned in response use quote into the svg tag so be sure to use it properly.\nMain icons are :\nNone: null,\rActivity: \u003cActivity /\u003e,\rAlertCircle: \u003cAlertCircle /\u003e,\rAnchor: \u003cAnchor /\u003e,\rAperture: \u003cAperture /\u003e,\rAward: \u003cAward /\u003e,\rBarChart: \u003cBarChart /\u003e,\rBellOff: \u003cBellOff /\u003e,\rBell: \u003cBell /\u003e,\rBluetooth: \u003cBluetooth /\u003e,\rBookmark: \u003cBookmark /\u003e,\rBox: \u003cBox /\u003e,\rCamera: \u003cCamera /\u003e,\rCast: \u003cCast /\u003e,\rChevronDown: \u003cChevronDown /\u003e,\rChevronLeft: \u003cChevronLeft /\u003e,\rChevronRight: \u003cChevronRight /\u003e,\rChevronUp: \u003cChevronUp /\u003e,\rChevronsDown: \u003cChevronsDown /\u003e,\rChevronsLeft: \u003cChevronsLeft /\u003e,\rChevronsRight: \u003cChevronsRight /\u003e,\rChevronsUp: \u003cChevronsUp /\u003e,\rClipboard: \u003cClipboard /\u003e,\rClock: \u003cClock /\u003e,\rCpu: \u003cCpu /\u003e,\rCrosshair: \u003cCrosshair /\u003e,\rDatabase: \u003cDatabase /\u003e,\rDelete: \u003cDelete /\u003e,\rDownload: \u003cDownload /\u003e,\rDroplet: \u003cDroplet /\u003e,\rEdit: \u003cEdit /\u003e,\rEyeOff: \u003cEyeOff /\u003e,\rEye: \u003cEye /\u003e,\rFile: \u003cFile /\u003e,\rFilter: \u003cFilter /\u003e,\rFlag: \u003cFlag /\u003e,\rFrown: \u003cFrown /\u003e,\rGitCommit: \u003cGitCommit /\u003e,\rGlobe: \u003cGlobe /\u003e,\rGrid: \u003cGrid /\u003e,\rHardDrive: \u003cHardDrive /\u003e,\rHash: \u003cHash /\u003e,\rHeart: \u003cHeart /\u003e,\rHelpCircle: \u003cHelpCircle /\u003e,\rHome: \u003cHome /\u003e,\rImage: \u003cImage /\u003e,\rInfo: \u003cInfo /\u003e,\rLayers: \u003cLayers /\u003e,\rLifeBuoy: \u003cLifeBuoy /\u003e,\rList: \u003cList /\u003e,\rLoader: \u003cLoader /\u003e,\rLock: \u003cLock /\u003e,\rLogIn: \u003cLogIn /\u003e,\rLogOut: \u003cLogOut /\u003e,\rMail: \u003cMail /\u003e,\rMapPin: \u003cMapPin /\u003e,\rMeh: \u003cMeh /\u003e,\rMenu: \u003cMenu /\u003e,\rMessageSquare: \u003cMessageSquare /\u003e,\rMinusCircle: \u003cMinusCircle /\u003e,\rMonitor: \u003cMonitor /\u003e,\rMoon: \u003cMoon /\u003e,\rMoreHorizontal: \u003cMoreHorizontal /\u003e,\rMoreVertical: \u003cMoreVertical /\u003e,\rMove: \u003cMove /\u003e,\rPauseCircle: \u003cPauseCircle /\u003e,\rPercent: \u003cPercent /\u003e,\rPlayCircle: \u003cPlayCircle /\u003e,\rPlusCircle: \u003cPlusCircle /\u003e,\rPower: \u003cPower /\u003e,\rPrinter: \u003cPrinter /\u003e,\rRadio: \u003cRadio /\u003e,\rRefreshCw: \u003cRefreshCw /\u003e,\rRepeat: \u003cRepeat /\u003e,\rRotateCcw: \u003cRotateCcw /\u003e,\rSave: \u003cSave /\u003e,\rScissors: \u003cScissors /\u003e,\rSend: \u003cSend /\u003e,\rServer: \u003cServer /\u003e,\rSettings: \u003cSettings /\u003e,\rShare: \u003cShare /\u003e,\rSlash: \u003cSlash /\u003e,\rSliders: \u003cSliders /\u003e,\rSmile: \u003cSmile /\u003e,\rStar: \u003cStar /\u003e,\rStopCircle: \u003cStopCircle /\u003e,\rSun: \u003cSun /\u003e,\rSunrise: \u003cSunrise /\u003e,\rSunset: \u003cSunset /\u003e,\rTag: \u003cTag /\u003e,\rTarget: \u003cTarget /\u003e,\rTerminal: \u003cTerminal /\u003e,\rThermometer: \u003cThermometer /\u003e,\rTool: \u003cTool /\u003e,\rTrash2: \u003cTrash2 /\u003e,\rUnderline: \u003cUnderline /\u003e,\rUpload: \u003cUpload /\u003e,\rVideoOff: \u003cVideoOff /\u003e,\rVideo: \u003cVideo /\u003e,\rVolumeX: \u003cVolumeX /\u003e,\rVolume: \u003cVolume /\u003e,\rWifiOff: \u003cWifiOff /\u003e,\rWifi: \u003cWifi /\u003e,\rWind: \u003cWind /\u003e,\rXCircle: \u003cXCircle /\u003e,\rZapOff: \u003cZapOff /\u003e,\rZap: \u003cZap /\u003e,3D printers have in addition:\nFan, FeedRate, FlowRate, Extrudercnc has in addition :\nFan, FeedRate, FlowRate,Example: {type:'icon', target:'webui', id:'Activity'}\ntype is icon (mandatory)\ntarget is webui (mandatory)\nid is Activity (mandatory)\nAnswer format: check the eventMsg.data\n{\r\"type\": \"icon\",\r\"content\": {\r\"response\": \"\u003csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'\u003e\u003cpath d='M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z'\u003e\u003c/path\u003e\u003cpolyline points='13 2 13 9 20 9'\u003e\u003c/polyline\u003e\u003c/svg\u003e\",\r\"initiator\": {\r\"type\": \"icon\",\r\"target\": \"webui\",\r\"id\": \"Activity\"\r}\r},\r\"id\": \"Activity\"\r}type is icon\nid is the id of requested “Activity”\ncontent has the response it self response, in our case svg using quote , also the initiator is the initial command for reference\nDispatch message to other extensions Example:\n{ type:'dispatch', target:'webui', id:'senderpanel', content:'any message' , targetid:'receiverpanel' }type is dispatch (mandatory)\ntarget is webui (mandatory)\nid is senderpanel (optional)\ncontent the message to dispatch using\nNote: there no answer as the purpose of this is to send answer\nModal Dialog Documentation This documentation describes how to use the modal dialog functionality. The modal dialog is a pop-up window that displays a message to the user and requires the user to respond before they can continue. The modal dialog can be used to display simple messages, confirmations, input fields, and multiple input fields.\nModal Types The code supports four types of modal dialogs:\nSimple Modal: Displays a basic modal with a title, text, and a single button. Confirmation Modal: Displays a modal with a title, text, and two buttons for confirmation. Input Modal: Displays a modal with a title, text, an input field, and two buttons. Fields Modal: Displays a modal with a title, multiple input fields, and two buttons. Sending Messages To open a modal dialog, you need to send a message to the parent window using the sendMessage function. The message should have the following structure:\nsendMessage({ type: 'modal', target: 'webui', id: 'modalpanel', content: { // Modal-specific content } }); * type: Always set to 'modal'. * target: Always set to 'webui'. * id: Set to 'modalpanel' for all modal types. * content: An object containing the modal-specific content. #### Modal Content Each modal type has its own specific content structure: 1. Simple Modal Example: ```json { type:'modal', target:'webui', id:'modalpanel', content: { title:'This is title', id:'simple_modal', style:'default', bt1Txt:'S126', response1:'ok', text:'some text', overlay:true } } ``` - **type** (mandatory): 'modal' - **target** (mandatory): 'webui' - **id** (optional): 'modalpanel' - **content** (mandatory): Modal description - **title** (mandatory): Title of the modal. Use predefined text for translation. - **id** (mandatory): Modal ID. Example: 'simple_modal' - **style** (mandatory): Modal style. For simple modal, use 'default'. - **bt1Txt** (optional): Text for button 1. 'S126' will be translated as 'Ok'. If not defined, the button won't be displayed. - **response1** (optional): Message sent if button 1 is clicked. Example: 'ok'. The click closes the modal. - **bt2Txt** (optional): Text for button 2. If not defined, the button won't be displayed. - **response2** (optional): Message sent if button 2 is clicked. The click closes the modal. - **hideclose** (optional): If set to true, it hides the close button of the modal. - **overlay** (optional): If set to true, it automatically closes the modal if it loses focus. - **text** (optional): Text to display in the modal. If it's a predefined text, it will be translated. Note: The close button and overlay feature won't send any notification when the modal is closed. Answer format: Check `eventMsg.data` ```json { \"type\": \"modal\", \"content\": { \"response\": \"ok\", \"initiator\": { \"type\": \"modal\", \"target\": \"webui\", \"id\": \"modalpanel\", \"content\": { \"title\": \"This is title\", \"id\": \"simple_modal\", \"style\": \"default\", \"bt1Txt\": \"S126\", \"response1\": \"ok\", \"text\": \"some text\", \"overlay\": true } } }, \"id\": \"modalpanel\" } type: ‘modal’ id: ID set in the command message to help with screening content: Contains the response itself (response) and the initiator (initial command for reference) Confirmation Modal Example:\n{ type:'modal', target:'webui', id:'modalpanel', content: { title:'S26', id:'confirm_modal', style:'question', bt1Txt:'S27', response1:'yes', bt2Txt:'S28', response2:'cancel', text:'S30', hideclose:true } } type (mandatory): ‘modal’ target (mandatory): ‘webui’ id (optional): ‘modalpanel’ content (mandatory): Modal description title (mandatory): Title of the modal. ‘S26’ will be translated as ‘Please Confirm’. id (mandatory): Modal ID. Example: ‘confirm_modal’ style (mandatory): Modal style. For confirmation modal, use ‘question’. bt1Txt (optional): Text for button 1. ‘S27’ will be translated as ‘Yes’. If not defined, the button won’t be displayed. response1 (optional): Message sent if button 1 is clicked. Example: ‘yes’. The click closes the modal. bt2Txt (optional): Text for button 2. ‘S28’ will be translated as ‘Cancel’. If not defined, the button won’t be displayed. response2 (optional): Message sent if button 2 is clicked. Example: ‘cancel’. The click closes the modal. hideclose (optional): If set to true, it hides the close button of the modal. overlay (optional): If set to true, it automatically closes the modal if it loses focus. text (optional): Text to display in the modal. ‘S30’ will be translated as ‘Do you want to update?’. Note: The close button and overlay feature won’t send any notification when the modal is closed.\nAnswer format: Check eventMsg.data\n{ \"type\": \"modal\", \"content\": { \"response\": \"yes\", \"initiator\": { \"type\": \"modal\", \"target\": \"webui\", \"id\": \"modalpanel\", \"content\": { \"title\": \"S26\", \"id\": \"confirm_modal\", \"style\": \"question\", \"bt1Txt\": \"S27\", \"response1\": \"yes\", \"bt2Txt\": \"S28\", \"response2\": \"cancel\", \"text\": \"S30\", \"hideclose\": true } } }, \"id\": \"modalpanel\" } type: ‘modal’ id: ID set in the command message to help with screening content: Contains the response itself (response) and the initiator (initial command for reference) Input Modal Example:\n{ type:'modal', target:'webui', id:'modalpanel', content: { title:'S90', id:'input_modal', style:'input', validation:'bt1', bt1Txt:'S106', response1:'create', bt2Txt:'S28', response2:'cancel', text:'S104', hideclose:true } } type (mandatory): ‘modal’ target (mandatory): ‘webui’ id (optional): ‘modalpanel’ content (mandatory): Modal description title (mandatory): Title of the modal. ‘S90’ will be translated as ‘Create Directory’. id (mandatory): Modal ID. Example: ‘input_modal’ style (mandatory): Modal style. For input modal, use ‘input’. bt1Txt (optional): Text for button 1. ‘S106’ will be translated as ‘Create’. If not defined, the button won’t be displayed. response1 (optional): Message sent if button 1 is clicked. Example: ‘create’. The click closes the modal. bt2Txt (optional): Text for button 2. ‘S28’ will be translated as ‘Cancel’. If not defined, the button won’t be displayed. response2 (optional): Message sent if button 2 is clicked. Example: ‘cancel’. The click closes the modal. hideclose (optional): If set to true, it hides the close button of the modal. overlay (optional): If set to true, it automatically closes the modal if it loses focus. text (optional): Text to display in the modal. ‘S104’ will be translated as ‘Please type directory name’. Note: The close button and overlay feature won’t send any notification when the modal is closed.\nAnswer format: Check eventMsg.data\n{ \"type\": \"modal\", \"content\": { \"response\": \"create\", \"inputData\": \"mydir\", \"initiator\": { \"type\": \"modal\", \"target\": \"webui\", \"id\": \"modalpanel\", \"content\": { \"title\": \"S90\", \"id\": \"input_modal\", \"style\": \"input\", \"bt1Txt\": \"S106\", \"response1\": \"create\", \"bt2Txt\": \"S28\", \"response2\": \"cancel\", \"text\": \"S104\", \"hideclose\": true } } }, \"id\": \"modalpanel\" } type: ‘modal’ id: ID set in the command message to help with screening content: Contains the response itself Fields Modal Example:\n{ type:'modal', target:'webui', id:'modalpanel', content: { title:'S90', id:'fields_modal', validation:'bt1', style:'fields', bt1Txt:'S106', response1:'create', bt2Txt:'S28', response2:'cancel', hideclose:true, fields: [ { id: \"area\", label: \"Area\", type: \"group\", value: [ { id: \"xmin\", type: \"number\", label: \"Xmin\", value: 0 }, { id: \"xmax\", type: \"number\", label: \"Xmax\", value: 0 } ] }, { id: \"precision\", type: \"number\", label: \"Precision\", value: 0, min: \"0\", max: \"5\" } ] } } type (mandatory): ‘modal’ target (mandatory): ‘webui’ id (optional): ‘modalpanel’ content (mandatory): Modal description title (mandatory): Title of the modal. ‘S90’ will be translated as ‘Create Item’. id (mandatory): Modal ID. Example: ‘fields_modal’ style (mandatory): Modal style. For fields modal, use ‘fields’. validation (mandatory): Define which button is performing the validation and send back the modified values: ‘bt1’ or ‘bt2’. bt1Txt (optional): Text for button 1. ‘S106’ will be translated as ‘Create’. If not defined, the button won’t be displayed. response1 (optional): Message sent if button 1 is clicked. Example: ‘create’. The click closes the modal. bt2Txt (optional): Text for button 2. ‘S28’ will be translated as ‘Cancel’. If not defined, the button won’t be displayed. response2 (optional): Message sent if button 2 is clicked. Example: ‘cancel’. The click closes the modal. hideclose (optional): If set to true, it hides the close button of the modal. overlay (optional): If set to true, it automatically closes the modal if it loses focus. fields (mandatory): An array of field definitions for the modal. id (mandatory): ID of the field. label (mandatory): Label for the field. type (mandatory): Type of the field. Supported types: ’text’, ‘select’, ‘boolean’, group. value (optional): Default value for the field. Note: The close button and overlay feature won’t send any notification when the modal is closed.\nAnswer format: Check eventMsg.data\n{ \"type\": \"modal\", \"content\": { \"response\": \"create\", \"fields\": { \"field1\": \"Value 1\", \"field2\": \"Option 2\" }, \"initiator\": { \"type\": \"modal\", \"target\": \"webui\", \"id\": \"modalpanel\", \"content\": { \"title\": \"S90\", \"id\": \"fields_modal\", \"validation\": \"bt1\", \"style\": \"fields\", \"bt1Txt\": \"S106\", \"response1\": \"create\", \"bt2Txt\": \"S28\", \"response2\": \"cancel\", \"hideclose\": true, \"fields\": [ { \"id\": \"field1\", \"label\": \"Field 1\", \"type\": \"text\" }, { \"id\": \"field2\", \"label\": \"Field 2\", \"type\": \"select\", \"options\": [ \"Option 1\", \"Option 2\" ] } ] } } }, \"id\": \"modalpanel\" } * type: 'modal' * id: ID set in the command message to help with screening * content: Contains the response itself (response), the field values entered by the user (fields), and the initiator (initial command for reference) Fields types and options The fields modal supports the same as the interface fields but with some limitations, each type may support different options.\nThe existing types and options are:\n“pickup”: Currently not supported in the modal dialog it is used in interface tab to select language or theme\n“id” (mandatory) “type” (mandatory) “label” (mandatory) “value” (mandatory) a string with the selected value “boolean”: Supported in the modal dialog is used to select a boolean value like for a checkbox or a switch\n“id” (mandatory) “type” (mandatory) “label” (mandatory) “value” (mandatory) a boolean value “help” (optionnel) a string with a help text in tooltip “depend” (optionnel) this is not supported in the modal dialog, but used in interface tab to show or hide a field based on the value of another field “group”: Supported in the modal dialog is used to group fields together, it may contain any type of fields but not another group\n“id” (mandatory) “type” (mandatory) “label” (optional) “value” (mandatory) an array of fields “depend” (optionnel) this is not supported in the modal dialog, but used in interface tab to show or hide a field based on the value of another field “number”: Supported in the modal dialog is used to select a number value float or integer\n“id” (mandatory) “type” (mandatory) “label” (mandatory) “min” (optional) a string with the minimum value “max” (optional) a string with the maximum value “help” (optionnel) a string with a help text in tooltip “step” (optionnel) a string with the step value for the input, can be a float “placeholder” (optionnel) a string with a placeholder text “append” (optionnel) a string to append to the value input like a unit “value” (mandatory) a number value “depend” (optionnel) this is not supported in the modal dialog, but used in interface tab to show or hide a field based on the value of another field “text”: Supported in the modal dialog is used to select a text value\n“id” (mandatory) “type” (mandatory) “label” (mandatory) “value” (mandatory) a string with the selected value “help” (optionnel) a string with a help text in tooltip “placeholder” (optionnel) a string with a placeholder text “depend” (optionnel) this is not supported in the modal dialog, but used in interface tab to show or hide a field based on the value of another field “min” (optionnel) minimum length of the text “max” (optionnel) maximum length of the text “regexpattern” (optionnel) a string with a regex to validate the text “append” (optionnel) a string to append to the value input like a unit “list”: Currently not supported in the modal dialog it is used in interface tab to select a value from a list (macros, extracontent, panels order, shorkeys)\n“id” (mandatory) “depend” (optionnel) this is not supported in the modal dialog, but used in interface tab to show or hide a field based on the value of another field “fixed” (optionnel) “sorted” (optionnel) “type” (mandatory) “label” (mandatory) “value” (mandatory) “nodelete” (optionnel) “editable” (optionnel) “select”: Supported in the modal dialog is used to select a value from a drop list\n“id” (mandatory) “type” (mandatory) “label” (optional) “value” (mandatory) a string with the selected value “options” (mandatory) an array of objects with the options “help” (optionnel) a string with a help text in tooltip “depend” (optionnel) this is not supported in the modal dialog, but used in interface tab to show or hide a field based on the value of another field Handling Messages The code listens for messages from the parent window using the handleMessage function. When a message is received, it checks the type and id properties to determine if it’s a modal-related message.\nIf the message is a modal response, it logs the clicked button (line.response) and performs specific actions based on the modal type and response.\nFor the Fields Modal, if the response is ‘create’ (response1 because validation is bt1), it updates the defaultSettings object with the values entered in the fields (line.inputData). For the Input Modal, if the response is ‘create’ (response1 because validation is bt1), it displays the entered input value (line.inputData).\nInstall an extension in Web UI Upload it to local filesystem or any path available to web server Add extra panel or page using this extension It will be displayed according your settings Sample codes Attachments\rcapabilities.html.gz (716 B)\rdispatch.html.gz (518 B)\rdownload.html.gz (810 B)\rextension_settings.html.gz (631 B)\ricons.html.gz (808 B)\rmodal.html.gz (1 KB)\rquery.html.gz (524 B)\rsound.html.gz (288 B)\rterminal.html.gz (706 B)\rtoast.html.gz (285 B)\rtranslate.html.gz (591 B)\rupload.html.gz (693 B)",
    "description": "Description and sample code",
    "tags": [],
    "title": "Extensions API",
    "uri": "/esp3d-webui/v3.x/documentation/api/extensions/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Hardware \u003e ESP32-S3 boards",
    "content": " ESP32 based + TFReader + OV2640 + 3.5’ TFT (480x320) with Capacitive touch screen OSHWHub TaoBao Features ESP32S3 FLASH: 8MB PSRAM: 8MB Micro-SD card slot (SPI) 3.5-inch 480x320 TFT display - ST7796U (SPI - RGB565) Capacitive touch panel - GT911 (i2C - 0x5D) Camera: OV2640 Power Supply: 5V / 500A Dimension: 98.5mm x 56.3mm Header H1 (4 pins) : +5v, Gnd, Rx, Tx Pins Pin Usage GPIO 0 NA GPIO 1 CTP_INT GPIO 2 CTP_SCL GPIO 3 OV_D7 GPIO 4 OV_D1 GPIO 5 OV_D2 GPIO 6 OV_D3 GPIO 7 OV_D0 GPIO 8 OV_XCLK GPIO 9 OV_VSYNC GPIO 10 SD_CS GPIO 11 SD_MOSI GPIO 12 SD_CLK GPIO 13 SD_MISO GPIO 14 OV_RESET GPIO 15 OV_D4 GPIO 16 OV_PCLK GPIO 17 OV_D5 GPIO 18 OV_D6 GPIO 19 ESP_USB_DM GPIO 20 ESP_USB_DP GPIO 21 OV_SCL GPIO 33 NA GPIO 34 NA GPIO 35 NC / NA GPIO 36 NC / NA GPIO 37 NC / NA GPIO 38 LCD_MOSI GPIO 39 LCD_CLK GPIO 40 LCD_DC GPIO 41 LCD_CS GPIO 42 CTP_SDA GPIO 43 U0TXD GPIO 44 U0RXD GPIO 45 LCD_RST / CTP_RST GPIO 46 OV_HREF GPIO 47 OV_SDA GPIO 48 LCD_BL ",
    "description": "ESP32 - 3.5' (480x320) TFT",
    "tags": [],
    "title": " 3.5' BZM-V1",
    "uri": "/esp3d-tft/v1.x/hardware/esp32-s3/bzm-35-4832/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Hardware \u003e ESP32 boards",
    "content": " ESP32 based + SDReader + 3.5’ TFT (480x320) with Resistive or Capacitive touch screen Aliexpress Features ESP32 FLASH: 4MB* (*Up to 16MB with hardware mod) PSRAM: NO* (*Up to 8MB with hardware mod - See Hardware Mod section below…) Micro-SD card slot (SPI) 3.5-inch 480x320 TFT display - ST7796 (SPI) Touch panel options: ESP32-3248S035R - Resistive touch panel - XPT2046 (SPI) ESP32-3248S035C - Capacitive touch panel - GT911 (i2C - 0x5D or 0x14) 1 RGB led 1 USB-Micro to Serial 0 (CH340C) Boot and reset buttons Power Supply: 5V / 1A Header P3 : GND - GPIO 35 - GPIO 22 - GPIO 21 Header CN1 : GND - NC (or GPIO 22 on some boards) - GPIO 21 - V3.3 Header power : VIN - TX - RX - GND Pins ESP Pin GPIO Description 1 GND Ground 2 VCC +3V3 3 EN RST / TFT_RST (Reset / LCD) 4 GPIO36 SENSOR_VP / RTP_IRQ (Res. Touchscreen) 5 GPIO39 SENSOR_VN 6 GPIO34 ADC 7 GPIO35 Header P3 Pin 3 8 GPIO32 CTP_SCL (Cap. Touchscreen) 9 GPIO33 CTP_SDA (Cap. Touchscreen) / RTP_CS (Res. Touchscreen) 10 GPIO25 CTP_RST (Cap. Touchscreen) 11 GPIO26 AUDIO IN- 12 GPIO27 TFT_BL (TFT) 13 GPIO14 TFT_SCK (TFT) / RTP_CLK (Res. Touchscreen) 14 GPIO12 TFT_SDO (TFT) / RTP_OUT (Res. Touchscreen) 15 GND Ground 16 GPIO13 TFT_SDI (TFT) / RTP_DIN (Res. Touchscreen) 17 SHD/SD2 HOLD (SPI Flash / PSRAM*) 18 SWP/SD3 WP (SPI Flash / PSRAM*) 19 SCS/CMD CS (SPI Flash) 20 SCK/CLK SCK (SPI Flash) 21 SDO/SD0 SO (SPI Flash / PSRAM*) 22 SDI/SD1 SI (SPI Flash / PSRAM*) 23 GPIO15 TFT_CS (TFT) 24 GPIO02 TFT_RS (TFT) 25 GPIO0 BOOT_SW 26 GPIO04 LED_RGB 27 GPIO16 LED_RGB (PSRAM_CS*) 28 GPIO17 LED_RGB (PSRAM_SCK*) 29 GPIO05 TF_CS (SD Card) 30 GPIO18 TF_CLK (SD Card) 31 GPIO19 MCU_MISO (SD Card) 32 NC NA 33 GPIO21 CTP_INT* (Cap. Touchscreen) / Headers: P3 Pin 1, CN1 Pin 2 34 RXD0 RXD2 Header P1 Pin 3 35 TXD0 TXD2 Header P1 Pin 2 36 GPIO22 Header P3 Pin 2 (also Header CN1 Pin 3 on some boards) 37 GPIO23 MCU_MOSI (SD Card) 38 GND Ground 39 GND Ground * Requires Hardware Mod\nHardware Mod (Add Hardware Interrupt for GT911) NOTE: This only applies to the screen with the Capacitive touch panel (ESP32_3248S035C)\nThere is a routing mistake on the ESP32_3248S035C board that accidentally connects the Capacitive Touch Screen’s GT911 Interrupt pin to GND instead of through the R25 jumper to GPIO21. This means that the code has to use polling (by default) instead of hardware interrupts to determine when the screen is being touched. This results in excessive CPU utilization of greater than 80%. Making the below modifications results in a significantly reduced CPU utilization of under 10% on avg (on static screens).\nSteps (see picture) Cut the PCB trace going to the GT911’s INT pin (labeled as pin 5 on the flex cable). This disconnects GT911’s INT pin from GND. Connect a bodge wire from the GT911’s INT pin to the closest side of R25 (connecting it to GPIO21). Remove (pull-up) resistor R18 (GPIO21 to 3V3). The GT911’s INT pin is not strong enough to drive GPIO21 low with this resistor installed. NOTE: Remember to enable the HARDWARE_MOD_GT911_INT option in CMakeLists.txt\nHardware Mod (Add External PSRAM) This board has an external SOIC-8 footprint near the ESP32 module that is wired in parallel to the built-in SPI Flash. This can be used (with some modifications) to add an external SPI PSRAM in order to achieve more available memory.\nNOTE: There are (at least) two revisions of this board.\nOn one revision, the external SOIC-8 footprint is populated with the SPI Flash IC. See Option 1 below for Mod details. On another revision, the external SOIC-8 footprint is un-populated (the SPI flash is built into the ESP32 module). See Option 2 below for Mod details. In either case, one will first need to acquire a compatible PSRAM IC. This can be desoldered from an existing board (i.e. ESP32-CAM board), or purchased separately. Make sure whatever IC you choose supports 3.3v and at least 80 MHz. Ideally it should support Quad SPI (QIO) as well.\nSome compatible 8MB PSRAM ICs are:\nESP-PSRAM64H IPS6404L-SQ-SPN APM6404-SQ-SPN APS6404L-3SQR-SN NOTE: Remember to choose the correct variant in CMakeLists.txt to enable PSRAM support.\nOption 1 On this revision, the PSRAM must be piggy-backed on top of the external Flash IC.\nPlace the PSRAM IC directly on top of the Flash IC (with the same orientation for Pin 1). Connect all Pins (except for Pins 1 \u0026 6) directly to the cooresponding pins on the Flash IC below. Remove the RGB LED, as it conflicts with GPIO 16 \u0026 17 that are needed for the new PSRAM IC. Connect a bodge wire from Pin 1 to GPIO 16. Connect a bodge wire from Pin 6 to GPIO 17. Attach a 10k resistor between Pins 1 \u0026 8 of the PSRAM IC. This is a pull-up resistor that ensures the PSRAM is deselected by default (i.e. when the Flash IC is in use). Option 2 On this revision, the PSRAM can be soldered to the un-populated SOIC-8 footprint.\nCut the PCB trace going to Pin 1 as well as the PCB trace going to pin 6. Solder the PSRAM IC to the SOIC-8 footprint (making sure Pin 1 is in the correct orientation). Remove the RGB LED, as it conflicts with GPIO 16 \u0026 17 that are needed for the new PSRAM IC. Connect a bodge wire from Pin 1 to GPIO 16. Connect a bodge wire from Pin 6 to GPIO 17. Attach a 10k resistor between Pins 1 \u0026 8 of the PSRAM IC. This is a pull-up resistor that ensures the PSRAM is deselected by default (i.e. when the Flash IC is in use). ",
    "description": "ESP32 - 3.5' (480x320) TFT",
    "tags": [],
    "title": " 3.5' ESP32-3248S035R/C",
    "uri": "/esp3d-tft/v1.x/hardware/esp32/sunton-35-3248/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "This board is from Bigtreetech and went through various hardware revisions; all of them still feature a TFT pin header which is where you can tap the TX and RX needed. The wiring below is made with a 1.2 board, but the same applies for the other revisions as well; if you need the exact schematic for your mainboard version, you can check Bigtreetech’s github repository.\nThe TFT connector is labeled on the board; you can use dupont connectors for the wiring job, no soldering skills needed as long as your ESP comes with pre soldered headers. Note: the TFT connector provides 5V DC, so be sure to provide them on the correct ESP pin.\nBoard pins voltage 3.3v Board firmware Marlin Board configuration note Enable second serial port in the marlin configuration file ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "Bigtreetech skr mini board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/btt_skr_mini_e3/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "From Wemos\nSpecs ESP32 with 16MB flash memory, 4MB PSRAM, ceramic antenna, SD card reader (SPI) ",
    "description": "Lolin D32 Pro",
    "tags": [],
    "title": "Lolin D32 Pro",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/lolin_d32_pro/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna github\nPinout 1 2 3 4 VCC GND IO0 IO4 NC TX RX RST Note\rMKS file upload is not supported, use ESP3D 3.0 or later for MKS protocol support",
    "description": "MKS WiFi Module V1.0 (8 pins)",
    "tags": [],
    "title": "MKS WiFi Module V1.0 (8 pins)",
    "uri": "/esp3d/v2.x/hardware/esp8266/mkstftwifimodule/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna github\nPinout 1 2 3 4 VCC GND IO0 IO4 NC TX RX RST ",
    "description": "MKS WiFi Module V1.0 (8 pins)",
    "tags": [],
    "title": "MKS WiFi Module V1.0 (8 pins)",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/mkstftwifimodule/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna github\nPinout 1 2 RESET TX ADC RX CH_PD IO5 IO16 IO4 IO14 IO0 IO12 IO2 IO13 IO15 3.3V GND Note\rMKS file upload is not supported, use ESP3D 3.0 or later for MKS protocol support",
    "description": "MKS WiFi Module V1.1 (16 pins)",
    "tags": [],
    "title": "MKS WiFi Module V1.1 (16 pins)",
    "uri": "/esp3d/v2.x/hardware/esp8266/mkswifimodule/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna github\nPinout 1 2 RESET TX ADC RX CH_PD IO5 IO16 IO4 IO14 IO0 IO12 IO2 IO13 IO15 3.3V GND ",
    "description": "MKS WiFi Module V1.1 (16 pins)",
    "tags": [],
    "title": "MKS WiFi Module V1.1 (16 pins)",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/mkswifimodule/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation",
    "content": "Themes are actually just gzipped css file that overload current css, their name must start by theme- to be recognized and have proper .gz extension if they are compressed. You only need to put inside the properties you want to customize.\nExample of small changes .feather-icon-container svg, span.input-group-addon, span.form-input, input, select, span.text-dark, label.text-dark, label.hide-low, section, button, .navbar, .modal-container, body, .empty, html{ background-color:rgb(200, 200, 233)!important; color:white!important; } a svg.esp3dlogo{ color:#c0c0c0!important; } .form-switch input:checked + .form-icon { background-color:white!important; } a.active svg, a.active label.hide-low{ color:blue!important; } .navbar{ border-bottom:white solid 0.5px; } span.navbar-section{ background-color:#0e0e6d!important; color:white!important; }How to set a new theme Upload theme Upload gzipped (or not) theme using the flash file system panel in dashboard Select theme Select theme in interface settings Once change are applied the webui will automatically restart\nHere some themes as examples: Attachments\rtheme-dark.gz (272 B)\rtheme-mnj (3 KB)\rtheme-purple (632 B)",
    "description": "Themes description",
    "tags": [],
    "title": "Themes",
    "uri": "/esp3d-webui/v3.x/documentation/themes/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Hardware \u003e ESP32 boards",
    "content": " ESP32 based + SDReader + 2.8’ TFT (320x240) with Resistive touch screen Aliexpress Features ESP32 FLASH: 4MB* (*Up to 16MB with hardware mod) PSRAM: NO* (*Up to 8MB with hardware mod - See Hardware Mod section below…) Micro-SD card slot (SPI) 2.8-inch 320x240 TFT display - ILI9341 (SPI) Resistive touch panel - XPT2046 (SPI) 1 RGB led 1 USB-Micro to Serial 0 (CH340C) Boot and reset buttons Power Supply: 5V / 1A Header P3 : GND - GPIO 35 - GPIO 22 - GPIO 21 Header CN1 : GND - NC (or GPIO 22 on some boards) - GPIO 27 - V3.3 Header power : VIN - TX - RX - GND Pins ESP Pin GPIO Description 1 GND Ground 2 VCC +3V3 3 EN RST / TFT_RST (Reset / LCD) 4 GPIO36 SENSOR_VP / TP_IRQ (Touchscreen) 5 GPIO39 SENSOR_VN / TP_OUT (Touchscreen) 6 GPIO34 ADC 7 GPIO35 Header P3 Pin 3 8 GPIO32 TP_DIN (Touchscreen) 9 GPIO33 TP_CS (Touchscreen) 10 GPIO25 TP_CLK (Touchscreen) 11 GPIO26 AUDIO IN- 12 GPIO27 Header CN1 Pin 2 13 GPIO14 TFT_SCK (TFT) 14 GPIO12 TFT_SDO (TFT) 15 GND Ground 16 GPIO13 TFT_SDI (TFT) 17 SHD/SD2 HOLD (SPI Flash / PSRAM*) 18 SWP/SD3 WP (SPI Flash / PSRAM*) 19 SCS/CMD CS (SPI Flash) 20 SCK/CLK SCK (SPI Flash) 21 SDO/SD0 SO (SPI Flash / PSRAM*) 22 SDI/SD1 SI (SPI Flash / PSRAM*) 23 GPIO15 TFT_CS (TFT) 24 GPIO02 TFT_RS (TFT) 25 GPIO0 BOOT_SW 26 GPIO04 LED_RGB 27 GPIO16 LED_RGB (PSRAM_CS*) 28 GPIO17 LED_RGB (PSRAM_SCK*) 29 GPIO05 TF_CS (SD Card) 30 GPIO18 TF_CLK (SD Card) 31 GPIO19 MCU_MISO (SD Card) 32 NC NA 33 GPIO21 TFT_BL (TFT) / Header P3 Pin 1 34 RXD0 RXD2 Header P1 Pin 3 35 TXD0 TXD2 Header P1 Pin 2 36 GPIO22 Header P3 Pin 2 (also Header CN1 Pin 3 on some boards) 37 GPIO23 MCU_MOSI (SD Card) 38 GND Ground 39 GND Ground * Requires Hardware Mod\nHardware Mod (Add External PSRAM) This board has an external SOIC-8 footprint near the ESP32 module that is wired in parallel to the built-in SPI Flash. This can be used (with some modifications) to add an external SPI PSRAM in order to achieve more available memory.\nNOTE: There are (at least) two revisions of this board.\nOn one revision, the external SOIC-8 footprint is populated with the SPI Flash IC. See Option 1 below for Mod details. On another revision, the external SOIC-8 footprint is un-populated (the SPI flash is built into the ESP32 module). See Option 2 below for Mod details. In either case, one will first need to acquire a compatible PSRAM IC. This can be desoldered from an existing board (i.e. ESP32-CAM board), or purchased separately. Make sure whatever IC you choose supports 3.3v and at least 80 MHz. Ideally it should support Quad SPI (QIO) as well.\nSome compatible 8MB PSRAM ICs are:\nESP-PSRAM64H IPS6404L-SQ-SPN APM6404-SQ-SPN APS6404L-3SQR-SN NOTE: Remember to choose the correct variant in CMakeLists.txt to enable PSRAM support.\nOption 1 On this revision, the PSRAM must be piggy-backed on top of the external Flash IC.\nPlace the PSRAM IC directly on top of the Flash IC (with the same orientation for Pin 1). Connect all Pins (except for Pins 1 \u0026 6) directly to the cooresponding pins on the Flash IC below. Remove the RGB LED, as it conflicts with GPIO 16 \u0026 17 that are needed for the new PSRAM IC. Connect a bodge wire from Pin 1 to GPIO 16 (can use the Pad of the RGB LED closest to the ESP32 module). Connect a bodge wire from Pin 6 to GPIO 17 (can use the Pad of the RGB LED farthest from the ESP32 module on the bottom row). Attach a 10k resistor between Pins 1 \u0026 8 of the PSRAM IC. This is a pull-up resistor that ensures the PSRAM is deselected by default (i.e. when the Flash IC is in use). Option 2 On this revision, the PSRAM can be soldered to the un-populated SOIC-8 footprint.\nCut the PCB trace going to Pin 1 as well as the PCB trace going to pin 6. Solder the PSRAM IC to the SOIC-8 footprint (making sure Pin 1 is in the correct orientation). Remove the RGB LED, as it conflicts with GPIO 16 \u0026 17 that are needed for the new PSRAM IC. Connect a bodge wire from Pin 1 to GPIO 16 (can use the Pad of the RGB LED closest to the ESP32 module). Connect a bodge wire from Pin 6 to GPIO 17 (can use the Pad of the RGB LED farthest from the ESP32 module on the bottom row). Attach a 10k resistor between Pins 1 \u0026 8 of the PSRAM IC. This is a pull-up resistor that ensures the PSRAM is deselected by default (i.e. when the Flash IC is in use). Before: After: ",
    "description": "ESP32 - 2.8' (320x240) TFT",
    "tags": [],
    "title": " 2.8' ESP32-2432S028R",
    "uri": "/esp3d-tft/v1.x/hardware/esp32/sunton-28-2432/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "This board has ESP01 socket available, so you can use the ESP01 module (or equivalent) directly.\nBoard pins voltage 3.3v Board firmware Marlin Board configuration note Enable second serial port in the marlin configuration file ESP3D configuration note Raw serial, no SD ",
    "description": "Socket available",
    "tags": [],
    "title": "Bigtreetech skr pro board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/btt_skr_pro_1_2/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X",
    "content": "Big thanks to : @3DSmitty for pushing back this old project to the top list of projects.\nEmbedded code / inspiration code FTP server come from Jean-Michel Gallego https://github.com/gallegojm/Arduino-Ftp-Server WebDav server come from David Gauchard https://github.com/d-a-v/ESPWebDAV Line support come from https://github.com/TridentTD/TridentTD_LineNotify and https://notify-bot.line.me/doc/en/ and https://pushover.net/api Pushover support come from https://github.com/ArduinoHannover/Pushover Email support come from https://github.com/CosmicBoris/ESP8266SMTP and https://www.electronicshub.org/send-an-email-using-esp8266/ Telegram support come from https://medium.com/@xabaras/sending-a-message-to-a-telegram-channel-the-easy-way-eb0a0b32968 Libraries SSDP_IDF come from luc-github https://github.com/luc-github/SSDP_IDF lvgl come from https://littlevgl.com littlefs come from https://github.com/joltwallet/esp_littlefs espressif core https://github.com/espressif/esp-idf ",
    "description": "Big thanks to : @3DSmitty for pushing back this old project to the top list of projects.\nEmbedded code / inspiration code FTP server come from Jean-Michel Gallego https://github.com/gallegojm/Arduino-Ftp-Server WebDav server come from David Gauchard https://github.com/d-a-v/ESPWebDAV Line support come from https://github.com/TridentTD/TridentTD_LineNotify and https://notify-bot.line.me/doc/en/ and https://pushover.net/api Pushover support come from https://github.com/ArduinoHannover/Pushover Email support come from https://github.com/CosmicBoris/ESP8266SMTP and https://www.electronicshub.org/send-an-email-using-esp8266/ Telegram support come from https://medium.com/@xabaras/sending-a-message-to-a-telegram-channel-the-easy-way-eb0a0b32968 Libraries SSDP_IDF come from luc-github https://github.com/luc-github/SSDP_IDF lvgl come from https://littlevgl.",
    "tags": [],
    "title": "Credits",
    "uri": "/esp3d-tft/v1.x/credits/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 2.1.X",
    "content": "Based on great UI from Jarek Szczepanski (imrahil): smoothieware-webui\nLibraries A compressed css Based on bootstrap 3.x\nA stripped and limited version of svg icons Based on Glyphicons Halflings to get a small footprint.\nA Customized version of smoothiecharts Based on smoothiecharts to display temperatures charts",
    "description": "Based on great UI from Jarek Szczepanski (imrahil): smoothieware-webui\nLibraries A compressed css Based on bootstrap 3.x\nA stripped and limited version of svg icons Based on Glyphicons Halflings to get a small footprint.\nA Customized version of smoothiecharts Based on smoothiecharts to display temperatures charts",
    "tags": [],
    "title": "Credits",
    "uri": "/esp3d-webui/v2.x/credits/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X",
    "content": "Big thanks to : @aganov for suggesting to use PreactJS to simplify the development @alxblog for the mentoring and contribution in Web UI rewrite, and for suggesting to use spectre.css instead of bootstrap all contributors, feedbacks owners and donations. Libraries PreactJS smooothiechart ",
    "description": "Big thanks to : @aganov for suggesting to use PreactJS to simplify the development @alxblog for the mentoring and contribution in Web UI rewrite, and for suggesting to use spectre.css instead of bootstrap all contributors, feedbacks owners and donations. Libraries PreactJS smooothiechart ",
    "tags": [],
    "title": "Credits",
    "uri": "/esp3d-webui/v3.x/credits/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X",
    "content": "Big thanks to : @disneysw for bringing this module idea @lkarlslund for suggestion about independent reset using GPIO2 Roy Cortes from Panucatt Devices for supporting and pushing me implementing great features all contributors, feedbacks owners and donations. Embedded code / inspiration code Line support come from https://github.com/TridentTD/TridentTD_LineNotify and https://notify-bot.line.me/doc/en/ and https://pushover.net/api Pushover support come from https://github.com/ArduinoHannover/Pushover Email support come from https://github.com/CosmicBoris/ESP8266SMTP and https://www.electronicshub.org/send-an-email-using-esp8266/ Libraries Websockets come from Markus Sattler https://github.com/Links2004/arduinoWebSockets BMx280MI come from Gregor Christandl https://bitbucket.org/christandlg/bmx280mi DHT sensor come from beegee_tokyo http://desire.giesecke.tk/index.php/2018/01/30/esp32-dht11/ ESP32SSDP come from luc-github https://github.com/luc-github/ESP32SSDP ESP8266 and ESP32 Oled Driver for SSD1306 display come from Daniel Eichhorn, Fabrice Weinberg https://github.com/ThingPulse/esp8266-oled-ssd1306 lv_arduino come from Pavel Brychta pablo@xpablo.cz https://littlevgl.com SdFat come from Bill Greiman https://github.com/greiman/SdFat TFT_eSPI come from Bodmer https://github.com/Bodmer/TFT_eSPI ESP8266 core come from https://github.com/esp8266/Arduino ESP32 core come from https://github.com/espressif/arduino-esp32 Alternative of Arduino come from PlatformIO https://platformio.org/ ",
    "description": "Big thanks to : @disneysw for bringing this module idea @lkarlslund for suggestion about independent reset using GPIO2 Roy Cortes from Panucatt Devices for supporting and pushing me implementing great features all contributors, feedbacks owners and donations. Embedded code / inspiration code Line support come from https://github.com/TridentTD/TridentTD_LineNotify and https://notify-bot.line.me/doc/en/ and https://pushover.net/api Pushover support come from https://github.com/ArduinoHannover/Pushover Email support come from https://github.com/CosmicBoris/ESP8266SMTP and https://www.electronicshub.org/send-an-email-using-esp8266/ Libraries Websockets come from Markus Sattler https://github.com/Links2004/arduinoWebSockets BMx280MI come from Gregor Christandl https://bitbucket.",
    "tags": [],
    "title": "Credits",
    "uri": "/esp3d/v2.x/credits/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X",
    "content": "Big thanks to : ESP3D contributors for their suggestions, feedback and ideas submitted during 2.X sustaining phase and 3.X development phase which pushed me to rewrite the ESP3D code to make it better and easier to sustain.\nEmbedded code / inspiration code FTP server come from Jean-Michel Gallego https://github.com/gallegojm/Arduino-Ftp-Server WebDav server come from David Gauchard https://github.com/d-a-v/ESPWebDAV Mks support come from https://github.com/makerbase-mks/MKS-WIFI Line support come from https://github.com/TridentTD/TridentTD_LineNotify and https://notify-bot.line.me/doc/en/ and https://pushover.net/api Pushover support come from https://github.com/ArduinoHannover/Pushover Email support come from https://github.com/CosmicBoris/ESP8266SMTP and https://www.electronicshub.org/send-an-email-using-esp8266/ Telegram support come from https://medium.com/@xabaras/sending-a-message-to-a-telegram-channel-the-easy-way-eb0a0b32968 Libraries Websockets come from Markus Sattler https://github.com/Links2004/arduinoWebSockets BMx280MI come from Gregor Christandl https://bitbucket.org/christandlg/bmx280mi DHT sensor come from beegee_tokyo http://desire.giesecke.tk/index.php/2018/01/30/esp32-dht11/ ESP32SSDP come from luc-github https://github.com/luc-github/ESP32SSDP ESP8266-Arduino-Lua come from François Dugast but esp8266/esp32 compatible version is here https://github.com/luc-github/ESP8266-Arduino-Lua as PR is not merged ESP8266 and ESP32 Oled Driver for SSD1306 display come from Daniel Eichhorn, Fabrice Weinberg https://github.com/ThingPulse/esp8266-oled-ssd1306 lvgl come from https://littlevgl.com SdFat come from Bill Greiman https://github.com/greiman/SdFat TFT_eSPI come from Bodmer https://github.com/Bodmer/TFT_eSPI ESP8266 core come from https://github.com/esp8266/Arduino ESP32 core come from https://github.com/espressif/arduino-esp32 Alternative of Arduino come from PlatformIO https://platformio.org/ ",
    "description": "Big thanks to : ESP3D contributors for their suggestions, feedback and ideas submitted during 2.X sustaining phase and 3.X development phase which pushed me to rewrite the ESP3D code to make it better and easier to sustain.\nEmbedded code / inspiration code FTP server come from Jean-Michel Gallego https://github.com/gallegojm/Arduino-Ftp-Server WebDav server come from David Gauchard https://github.com/d-a-v/ESPWebDAV Mks support come from https://github.com/makerbase-mks/MKS-WIFI Line support come from https://github.com/TridentTD/TridentTD_LineNotify and https://notify-bot.line.me/doc/en/ and https://pushover.net/api Pushover support come from https://github.",
    "tags": [],
    "title": "Credits",
    "uri": "/esp3d/v3.x/credits/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 1.X",
    "content": "Embedded code / inspiration code Line support come from https://github.com/TridentTD/TridentTD_LineNotify and https://notify-bot.line.me/doc/en/ and https://pushover.net/api Pushover support come from https://github.com/ArduinoHannover/Pushover Email support come from https://github.com/CosmicBoris/ESP8266SMTP and https://www.electronicshub.org/send-an-email-using-esp8266/ Libraries Websockets come from Markus Sattler https://github.com/Links2004/arduinoWebSockets ESP32SSDP come from luc-github https://github.com/luc-github/ESP32SSDP ESP32 core for arduino come from https://github.com/espressif/arduino-esp32 Alternative of arduino come from PlatformIO https://platformio.org/ ",
    "description": "Embedded code / inspiration code Line support come from https://github.com/TridentTD/TridentTD_LineNotify and https://notify-bot.line.me/doc/en/ and https://pushover.net/api Pushover support come from https://github.com/ArduinoHannover/Pushover Email support come from https://github.com/CosmicBoris/ESP8266SMTP and https://www.electronicshub.org/send-an-email-using-esp8266/ Libraries Websockets come from Markus Sattler https://github.com/Links2004/arduinoWebSockets ESP32SSDP come from luc-github https://github.com/luc-github/ESP32SSDP ESP32 core for arduino come from https://github.com/espressif/arduino-esp32 Alternative of arduino come from PlatformIO https://platformio.org/ ",
    "tags": [],
    "title": "Credits",
    "uri": "/esp3dlib/v1.x/credits/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X",
    "content": "Big thanks to : ESP3DLib contributors for their suggestions, feedback and ideas submitted during 1.X sustaining phase and 3.X development phase which pushed me to rewrite the ESP3DLib/ESP3D code to make it better and easier to sustain.\nEmbedded code / inspiration code FTP server come from Jean-Michel Gallego https://github.com/gallegojm/Arduino-Ftp-Server WebDav server come from David Gauchard https://github.com/d-a-v/ESPWebDAV Line support come from https://github.com/TridentTD/TridentTD_LineNotify and https://notify-bot.line.me/doc/en/ and https://pushover.net/api Pushover support come from https://github.com/ArduinoHannover/Pushover Email support come from https://github.com/CosmicBoris/ESP8266SMTP and https://www.electronicshub.org/send-an-email-using-esp8266/ Telegram support come from https://medium.com/@xabaras/sending-a-message-to-a-telegram-channel-the-easy-way-eb0a0b32968 Libraries Websockets come from Markus Sattler https://github.com/Links2004/arduinoWebSockets ESP32SSDP come from luc-github https://github.com/luc-github/ESP32SSDP SdFat come from Bill Greiman https://github.com/greiman/SdFat ESP32 core for arduino come from https://github.com/espressif/arduino-esp32 Alternative of Arduino come from PlatformIO https://platformio.org/ ",
    "description": "Big thanks to : ESP3DLib contributors for their suggestions, feedback and ideas submitted during 1.X sustaining phase and 3.X development phase which pushed me to rewrite the ESP3DLib/ESP3D code to make it better and easier to sustain.\nEmbedded code / inspiration code FTP server come from Jean-Michel Gallego https://github.com/gallegojm/Arduino-Ftp-Server WebDav server come from David Gauchard https://github.com/d-a-v/ESPWebDAV Line support come from https://github.com/TridentTD/TridentTD_LineNotify and https://notify-bot.line.me/doc/en/ and https://pushover.net/api Pushover support come from https://github.com/ArduinoHannover/Pushover Email support come from https://github.",
    "tags": [],
    "title": "Credits",
    "uri": "/esp3dlib/v3.x/credits/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, ceramic antenna, I2C oled screen (SSD1306 128X64, 0x3C, SDA=IO4, SCL=IO15) Note\rThe screen need to be reset at start using IO16 (Low then High)",
    "description": "Heltec Dev board",
    "tags": [],
    "title": "Heltec Dev board",
    "uri": "/esp3d/v2.x/hardware/esp32/heltec_devboard/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, ceramic antenna, I2C oled screen (SSD1306 128X64, 0x3C, SDA=IO4, SCL=IO15) Note\rThe screen need to be reset at start using IO16 (Low then High)",
    "description": "Heltec Dev board",
    "tags": [],
    "title": "Heltec Dev board",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/heltec_devboard/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna Pinout 1 2 ADC IO16 RSV IO5 RSV IO4 RSV IO0 RSV IO2 RSV 3.3V RSV GND GND IO14 3.3V IO12 GND IO13 3.3V IO15 EN RX RST TX GND GND 5V 3.3V ",
    "description": "Nodemcu V0.8",
    "tags": [],
    "title": "Nodemcu V0.8",
    "uri": "/esp3d/v2.x/hardware/esp8266/nodemcu_0_8/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna Pinout 1 2 ADC IO16 RSV IO5 RSV IO4 RSV IO0 RSV IO2 RSV 3.3V RSV GND GND IO14 3.3V IO12 GND IO13 3.3V IO15 EN RX RST TX GND GND 5V 3.3V ",
    "description": "Nodemcu V0.8",
    "tags": [],
    "title": "Nodemcu V0.8",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/nodemcu_0_8/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "For the Sanguino based CR-10 and Ender printers you will need to solder to any of the via circled (can also be done in the backside of board), or to the legs of the Arduino or ftdi. Connect TX from the board to RX of Wemos D1 mini and RX from board to TX of Wemos D1 mini. 5v and GND are located in the six pin header next to the LCD connector.\nSince soldering might be difficult because the solder points are so close to each other, another option is to scrape off the insulation from the traces on the backside and solder there. Be extra careful not to scrape the surrounding ground plane. You need suitable fine scraping tools for this. The picture below shows an Ender-2 PCB.\nBoard pins voltage 5v Board firmware Marlin Board configuration note None, it use same serial as USB port so don’t use both together ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "Creality CR10 Ender 3 board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/creality_cr10/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna Pinout 1 2 ADC IO16 RSV IO5 RSV IO4 IO10 IO0 IO9 IO2 MOSI 3.3V CS GND MISO IO14 CLK IO12 GND IO13 3.3V IO15 EN RX RST TX GND GND 5V 3.3V ",
    "description": "Nodemcu V1.0",
    "tags": [],
    "title": "Nodemcu V1.0",
    "uri": "/esp3d/v2.x/hardware/esp8266/nodemcu_1_0/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna Pinout 1 2 ADC IO16 RSV IO5 RSV IO4 IO10 IO0 IO9 IO2 MOSI 3.3V CS GND MISO IO14 CLK IO12 GND IO13 3.3V IO15 EN RX RST TX GND GND 5V 3.3V ",
    "description": "Nodemcu V1.0",
    "tags": [],
    "title": "Nodemcu V1.0",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/nodemcu_1_0/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "You will need to solder to small circle, or to the legs of the ATmega2560 (RXD0 pin 2, TXD0 pin 3)\nBoard pins voltage 5v Board firmware Marlin Board configuration note None, it use same serial as USB port so don’t use both together ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "Creality Ender 4 board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/creality_ender_4/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "An ESP12E with the standard schematics, the two resistor connected to the RX pin are substituted by a 1N4148 diode, like in the Adafruit Huzzah board.\nESP12E is connected to the AUX1\nESP12E RX is connected to the pin NEAR GND of the upper row (Marked TXD on pinout.)\nESP12E TX is connected to the adiacent pin at the end of the upper row (Marked RXD on pinout.)\nBoard pins voltage 5v Board firmware Marlin Board configuration note None, it use same serial as USB port so don’t use both together ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "MKS GEN v1.2 to 1.4 board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/mks_gen/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "This board has a socket for MKS WiFi module (16 pins) Board pins voltage 3.3v Board firmware Marlin Board configuration note Enable MKS UI to be able to use MKS protocol ESP3D configuration note MKS serial, no SD alternative solution using raw serial:\nBoard configuration note Enable second serial port in firmware configuration ESP3D configuration note Raw serial, no SD ",
    "description": "Socket available",
    "tags": [],
    "title": "MKS Robin Nano board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/mks_robin_nano/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "This board is smoothieware compatible, you need to connect ESP board to AUX1 Board pins voltage 3.3v Board firmware Smoothieware Board configuration note Enable second serial port in the config.txt ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "MKS SBase board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/mks_sbase/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 2.1.X \u003e Hardware \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna ",
    "description": "SOnOff",
    "tags": [],
    "title": "SOnOff",
    "uri": "/esp3d/v2.x/hardware/esp8266/sonoff/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna Relay is connected by GPIO12, it can be handled using ESP201 command:\nSo [ESP201]P=12 V=0 should be off and [ESP201]P=12 V=1 should be on",
    "description": "SOnOff",
    "tags": [],
    "title": "SOnOff",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/sonoff/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna/ipex connector, allow to share SD card SPI pins between ESP and printer SD card reader Fom Panucatt devices\nPinout Pin Function Description IO05 CS SPI IO04 SD Detect pin Low = SD present IO0 Flag pin ESP = LOW, Printer = HIGH ",
    "description": "WiFI backpack",
    "tags": [],
    "title": "WiFI backpack",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/wifibackpack/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP8266 boards",
    "content": "Specs ESP8266 with 4MB flash memory, ceramic antenna, allow to share SD card SPI pins between ESP and Azteeg SD card reader Fom Panucatt devices\nPinout Pin Function Description IO05 CS SPI IO04 SD Detect pin Low = SD present IO0 Flag pin ESP = LOW, Printer = HIGH ",
    "description": "Azteeg X5 mini WIFI",
    "tags": [],
    "title": "Azteeg X5 mini WIFI",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp8266/azteeg_x5_mini_wifi/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "\rBoard pins voltage 3.3v Board firmware Marlin Board configuration note Enable second serial port in the marlin configuration file ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "RADDS/Due",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/radds_due/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "From Lilygo\nSpecs ESP32 with 4MB flash memory, ceramic antenna, SPI 135x240 ST7789V IPS screen ) ",
    "description": "TTGO  Display",
    "tags": [],
    "title": "TTGO T Display",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/ttgo_t_display/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "From Lilygo\nSpecs ESP32 with 4MB flash memory, ceramic antenna,Oled SD1606 128x64 screen ",
    "description": "TTGO T96 Oled",
    "tags": [],
    "title": "TTGO T96 Oled",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/ttgo_t96_oled/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, ceramic antenna, 16 pins Pinout 1 2 RST TX NC RX NC NC NC IO4 SCK (IO18) IO0 MISO (IO19) NC MOSI (IO23) CS(IO5) 3.3V GND ",
    "description": "Bigtreetech ESP32UEmodule",
    "tags": [],
    "title": "Bigtreetech ESP32E module",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/btt-esp32e/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, ipex antenna, 16 pins Pinout 1 2 RST TX NC RX NC NC NC IO4 SCK (IO18) IO0 MISO (IO19) NC MOSI (IO23) CS(IO5) 3.3V GND ",
    "description": "Bigtreetech ESP32U module",
    "tags": [],
    "title": "Bigtreetech ESP32U module",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/btt-esp32u/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32-Pico boards",
    "content": "github\nSpecs ESP32-PICO with 4MB flash memory, ceramic antenna, SD Card with no serial header, the sharing of SD card between ESP and printer/CNC is done by a multiplexer which make sharing reliable without risk of conflict, only one device can access to SD at once. Note\rBecause there is no serial connection to printer, the features are limited to SD card access features\nNote\rMy boards have only 4MB flash and no PSRAM unlike described in github and FYSETC website, so the following pio settings are limited to 4MB flash size and no PSRAM, if you have an 8MB board and 2MB PSRAM you may need to adjust the parameters .\nconfiguration.h // This file was generated by ESP3D-Configurator V1.0.0-a27 /* configuration.h - ESP3D configuration file Copyright (c) 2014 Luc Lebosse. All rights reserved. This code is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This code is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with This code; if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA */ #ifndef _CONFIGURATION_H #define _CONFIGURATION_H //Setup station as default, use AP mode first if not done //Note: need both defined to enable it //Uncomment and edit them to define //#define STATION_WIFI_SSID \"*********\" //#define STATION_WIFI_PASSWORD \"*********\" //You can also use a different config file for SSID/password //Just save it in same location as this configuration.h //This file is ignored by github #if defined __has_include # if __has_include (\"myconfig.h\") # include \"myconfig.h\" # endif #endif /************************************ * * Board description * * ESP Board using ESP3D firmware * ************************************/ // MCU=ESP32 // ESP flash size=4MB // Form factor=Original (all pins) // Flash mode=dio // Has PSRAM=null /************************************ * * Serial Communications * * Settings and protocols * ************************************/ // Serial Communication protocol // Basic serial protocol, without data change #define COMMUNICATION_PROTOCOL RAW_SERIAL // Serial port #define ESP_SERIAL_OUTPUT USE_SERIAL_0 // Serial buffer size // 512 Bytes // Maximum size of the serial buffer #define SERIAL_RX_BUFFER_SIZE 512 /************************************ * * Target firmware * * Targeted firmware that ESP3D will communicate with * ************************************/ // System type=3D printer // Target firmware // Undefined firmware #define DEFAULT_FW UNKNOWN_FW /************************************ * * Radio mode of ESP3D * * The radio mode ESP3D communicate with the network * ************************************/ // Use WiFi // Enable wifi communications #define WIFI_FEATURE /************************************ * * Channels of ESP3D * * The way ESP3D communicate * ************************************/ // Use webserver // Enable http server #define HTTP_FEATURE /************************************ * * Discovery methods of ESP3D * * The discovery methods of ESP3D * ************************************/ // Use captive portal // Enable captive portal in AP mode #define CAPTIVE_PORTAL_FEATURE // Use mDNS discovery // This method need `bonjour` protocol on windows, or `avahi` on linux #define MDNS_FEATURE // Use Simple Service Discovery Protocol // It is supported on Windows out of the box #define SSDP_FEATURE /************************************ * * SSDP Customization settings * * Customize your ESP3D * ************************************/ // Model name // Modele name of device #define ESP_MODEL_NAME \"ESP32\" // Model number // Modele number of device #define ESP_MODEL_NUMBER \"ESP3D 3.0\" // Model url // Modele url of device #define ESP_MODEL_URL \"https://www.espressif.com/en/products/devkits\" // Manufacturer name // Manufacturer name of device #define ESP_MANUFACTURER_NAME \"Espressif Systems\" // Manufacturer url // Manufacturer url of device #define ESP_MANUFACTURER_URL \"https://www.espressif.com\" /************************************ * * Flash filesystem * * Filesystem on flash * ************************************/ // File system type // LittleFS // Type of file system used by ESP3D to store files #define FILESYSTEM_FEATURE ESP_LITTLEFS_FILESYSTEM /************************************ * * SD filesystem * * Filesystem on SD card * ************************************/ // SD card connection // Your system has SDCard and your ESP is connected to it using sharing solution // Does your system has SD card and how it is connected to your ESP3D #define SD_DEVICE_CONNECTION ESP_SHARED_SD // SD card library // No additionnal library required #define SD_DEVICE ESP_SD_NATIVE //Default confiuration for FYSETC WIFI SD PRO card #define SD_CARD_TYPE ESP_FYSETC_WIFI_PRO_SDCARD // Enable date/time on files // Set date/time on files using SNTP or last webui connection #define SD_TIMESTAMP_FEATURE /************************************ * * Remote access * * Remote filesystem access * ************************************/ // Enable global filesystem // Allows to access to all filesystems fromsame location #define GLOBAL_FILESYSTEM_FEATURE // WebDav access // All filesystems // Use WebDav to access to your filesystem #define WEBDAV_FEATURE FS_ROOT /************************************ * * Update ESP3D * * Update ESP3D firmware * ************************************/ // Enable Web Update // Update firmware using WebUI #define WEB_UPDATE_FEATURE // Enable SD card Update // Update firmware and settings using file on SDCard #define SD_UPDATE_FEATURE /************************************ * * Display settings * * Rendering screens * ************************************/ // Printer screen // Your printer has a display #define PRINTER_HAS_DISPLAY /************************************ * * Levels of security * * How commands are allowed to be sent to ESP3D * ************************************/ // Enable serial commands // Allow commands to be sent to ESP3D via serial port #define SERIAL_COMMAND_FEATURE /************************************ * * Default settings for ESP3D * * Do not edit them * ************************************/ // Gcode Host Feature // This feature allows to process Gcode files like macros. #define GCODE_HOST_FEATURE // Settings location // EEPROM // Location where ESP3D will save settings #define ESP_SAVE_SETTINGS SETTINGS_IN_EEPROM // Add serial task // ESP32 need to add a task to handle serial communication #define SERIAL_INDEPENDANT_TASK /************************************ * * Development setting * Do not modify them for production ************************************/ //Enable debug mode //Do not do this when connected to printer !!! //be noted all upload may failed if enabled //DEBUG_OUTPUT_SERIAL0 //DEBUG_OUTPUT_SERIAL1 //DEBUG_OUTPUT_SERIAL2 //DEBUG_OUTPUT_TELNET //DEBUG_OUTPUT_WEBSOCKET //#define ESP_DEBUG_FEATURE DEBUG_OUTPUT_SERIAL0 #ifdef ESP_DEBUG_FEATURE #define DEBUG_BAUDRATE 115200 #define DEBUG_ESP3D_OUTPUT_PORT 8000 #endif //ESP_DEBUG_FEATURE //Enable benchmark report in dev console //#define ESP_BENCHMARK_FEATURE //Disable sanity check at compilation //#define ESP_NO_SANITY_CHECK /************************************ * * Sanity checks * Do not modify ************************************/ #if defined(ESP_GOT_DATE_TIME_HOOK) || defined (SD_TIMESTAMP_FEATURE) || defined (FILESYSTEM_TIMESTAMP_FEATURE) #define TIMESTAMP_FEATURE #endif //SD_TIMESTAMP_FEATURE || FILESYSTEM_TIMESTAMP_FEATURE #if defined(PRINTER_HAS_DISPLAY) #define HAS_SERIAL_DISPLAY \"\" #endif // PRINTER_HAS_DISPLAY #if defined(CAMERA_DEVICE) #if CAMERA_DEVICE==CAMERA_MODEL_ESP32_CAM_BOARD || CAMERA_DEVICE==CAMERA_MODEL_ESP32S2_CAM_BOARD #define USE_BOARD_HEARDER 1 #endif // CAMERA_DEVICE==CAMERA_MODEL_ESP32_CAM_BOARD || CAMERA_DEVICE==CAMERA_MODEL_ESP32S2_CAM_BOARD #endif // CAMERA_DEVICE #if !defined(WIFI_FEATURE) \u0026\u0026 !defined(ETH_FEATURE) #undef HTTP_FEATURE #undef TELNET_FEATURE #undef WEBDAV_FEATURE #undef FTP_FEATURE #undef WEB_UPDATE_FEATURE #undef CAPTIVE_PORTAL_FEATURE #undef SSDP_FEATURE #undef MDNS_FEATURE #undef NOTIFICATION_FEATURE #endif #endif //_CONFIGURATION_H platformio.ini ;This file was generated by ESP3D-Configurator V1.0.0-a27 ; PlatformIO Project Configuration File ; ; Build options: build flags, source filter ; Upload options: custom upload port, speed and extra flags ; Library options: dependencies, extra library storages ; Advanced options: extra scripting ; ; Please visit documentation for the other options and examples ; https://docs.platformio.org/page/projectconf.html [platformio] src_dir = esp3d build_dir = .pioenvs lib_dir = libraries libdeps_dir = .piolibdeps data_dir = esp3d/data default_envs = esp32_4MB_wifi [env:esp32_4MB_wifi] platform = espressif32@6.2.0 board = esp32dev framework = arduino monitor_speed = 115200 monitor_echo = yes monitor_filters = send_on_enter, colorize, esp32_exception_decoder ; set frequency to 240MHz ;board_build.f_cpu = 240000000L ; set frequency to 80MHz ;board_build.f_flash = 80000000L board_build.flash_mode = dio upload_speed = 460800 extra_scripts = pre:platformIO/extra_script.py board_build.filesystem = littlefs board_upload.flash_size = 4MB board_build.partitions = default.csv build_flags = -DCORE_DEBUG_LEVEL=0\rAttachments\rconfiguration.h (8 KB)\rplatformio.ini (1 KB)",
    "description": "FYSETC SD-WIFI-PRO",
    "tags": [],
    "title": "FYSETC SD-WIFI-PRO",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32-pico/sd-wifi-pro/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "Ramps 1.4 can be used on Arduino Mega (repetier/marlin) and Re-ARM for ramps boards (smoothieware/marlin)\nBoard pins voltage 5v Board firmware Marlin Board configuration note None, it use same serial as USB port so don’t use both together ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "Ramps / Mega",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/ramps_mega/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "Re-ARM for ramps boards (smoothieware/marlin)\nAlternative pins on Re-ARM (J4/UART port)\nBoard pins voltage 3.3v Board firmware Marlin \u0026 Smoothieware Board configuration note Enable second serial port in the formware configuration ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "Ramps / re-Arm",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/re-arm/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "\rBoard pins voltage 3.3v Board firmware Smoothieware Board configuration note Enable second serial port in the config.txt ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "Smoothieboard",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/smoothieboard/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "This printer is also brand labelled as Monoprice MP cadet 3D printer\nBoard pins voltage 5v Board firmware Marlin Board configuration note Enable second serial port (3) in firmware configuration file ESP3D configuration note Raw serial, no SD ",
    "description": "Socket available",
    "tags": [],
    "title": "Bigtreetech skr board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/weedo_tina2/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, 4MB PSRAM, SDIO Card reader, ipex antenna, OV2640 camera ",
    "description": "ESP32-Cam",
    "tags": [],
    "title": "ESP32-Cam",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/esp32-cam/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "From Olimex\nSpecs ESP32 with 4MB flash memory, Micro SDIO Card reader, ceramic antenna, RJ45 ethernet port Note\rNetwork is available to only for one peripheral at a time. It support only Wi-Fi communications or only Ethernet communications or Bluetooth communications not all at once.",
    "description": "Olimex ESP32-Gateway",
    "tags": [],
    "title": "Olimex ESP32-Gateway",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/olimex-gateway/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "Specs ESP32 with 4MB flash memory, ceramic antenna, Micro SD Card reader, RJ45 ethernet port Note\rNetwork is available to only for one peripheral at a time. It support only Wi-Fi communications or only Ethernet communications or Bluetooth communications not all at once.",
    "description": "Olimex ESP32-POE",
    "tags": [],
    "title": "Olimex ESP32-POE",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/olimex-poe/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e ESP boards \u003e ESP32 boards",
    "content": "From Wireless Tag\nSpecs ESP32 with 4MB flash memory, ceramic antenna, RJ45 ethernet port Note\rNetwork is available to only for one peripheral at a time. It support only Wi-Fi communications or only Ethernet communications or Bluetooth communications not all at once.",
    "description": "WT32-ETH1",
    "tags": [],
    "title": "WT32-ETH1",
    "uri": "/esp3d/v3.x/hardware/esp_boards/esp32/w32-eth01/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "The board is a due based and has a serial port available on the backside of the board. The serial port is a 4 pin header Board pins voltage 3.3v Board firmware Repetier for Davinci Board configuration note Enable wifi in the firmware configuration file ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "Davinci 1.0/2.0 board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/xyz_davinci_1_0-2_0/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards \u003e Main boards",
    "content": "It is a due based board and has a serial port available on the backside of the board. The serial port is a 4 pin header. Alternate Module placement for increased WiFi range (outside metal chassis, antenna has vertical polarization)\nBoard pins voltage 3.3v Board firmware Repetier for Davinci Board configuration note Enable wifi in the firmware configuration file ESP3D configuration note Raw serial, no SD ",
    "description": "No socket available",
    "tags": [],
    "title": "Davinci 1.0A board",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/xyz_davinci_1_0a/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Hardware \u003e System boards",
    "content": "\rAnet boards up to v1.5 and 1.7No socket available\nAnycubic i3 mega - Trigorilla 8bit boardNo socket available\nAnycubic Kobra 2 - Trigorilla Pro B V1.0.2 boardNo socket available\nAZSMZ LCD boardSocket available\nAZSMZ mini boardNo socket available\nAzteeg X5 mini boardESP is part of the board\nBIQU KFB2.0 boardNo socket available\nBigtreetech Octopus 1.1 boardSocket avvailable\nBigtreetech skr boardNo socket available\nBigtreetech skr mini boardNo socket available\nBigtreetech skr pro boardSocket available\nCreality CR10 Ender 3 boardNo socket available\nCreality Ender 4 boardNo socket available\nMKS GEN v1.2 to 1.4 boardNo socket available\nMKS Robin Nano boardSocket available\nMKS SBase boardNo socket available\nRADDS/DueNo socket available\nRamps / MegaNo socket available\nRamps / re-ArmNo socket available\nSmoothieboardNo socket available\nBigtreetech skr boardSocket available\nDavinci 1.0/2.0 boardNo socket available\nDavinci 1.0A boardNo socket available",
    "description": "Anet boards up to v1.5 and 1.7No socket available\nAnycubic i3 mega - Trigorilla 8bit boardNo socket available\nAnycubic Kobra 2 - Trigorilla Pro B V1.0.2 boardNo socket available\nAZSMZ LCD boardSocket available\nAZSMZ mini boardNo socket available\nAzteeg X5 mini boardESP is part of the board\nBIQU KFB2.0 boardNo socket available\nBigtreetech Octopus 1.1 boardSocket avvailable\nBigtreetech skr boardNo socket available\nBigtreetech skr mini boardNo socket available\nBigtreetech skr pro boardSocket available",
    "tags": [],
    "title": "Main boards",
    "uri": "/esp3d/v3.x/hardware/system_boards/main_boards/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation",
    "content": "\rProject architecture referenceProject content and files organization\nWeb HandlersWeb handlers description and parameters\nClientsClients description, messages and parameters\nWeb SocketsWeb Sockets description, messages and parameters\nSyntax conventionsSyntax conventions in used languages\nGCode streaming APIStreaming desctiption and API\nWebDAV APIWebDav usage and API",
    "description": "API description",
    "tags": [],
    "title": "API",
    "uri": "/esp3d-tft/v1.x/documentation/api/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-WEBUI \u003e Version 3.X \u003e Documentation",
    "content": "\rWeb HandlersWeb handlers description and parameters\nWeb SocketsWeb Sockets description, messages and parameters\nVariables listDescription and syntax\nReal time commandsDescription and supported firmwares\nSyntax conventionsSyntax conventions in used languages\nFile uploadFile upload parameters\nExtensions APIDescription and sample code",
    "description": "API description",
    "tags": [],
    "title": "API",
    "uri": "/esp3d-webui/v3.x/documentation/api/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation",
    "content": "\rWeb HandlersWeb handlers description and parameters\nWeb SocketsWeb Sockets description, messages and parameters",
    "description": "API description",
    "tags": [],
    "title": "API",
    "uri": "/esp3d/v3.x/documentation/api/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation",
    "content": "\rWeb HandlersWeb handlers description and parameters\nWeb SocketsWeb Sockets description, messages and parameters\nEntry points in Marlin #include \"esp3dlib.h\"\r//Serial2\rSerial2Socket class//init\resp3dlib.init(); //idle task\resp3dlib.idletask();//Custom command\resp3dlib.parse(command_ptr);",
    "description": "API description",
    "tags": [],
    "title": "API",
    "uri": "/esp3dlib/v3.x/documentation/api/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Station SSID\nInput [ESP100]\u003cSSID\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nSSID\nif SSID is empty, it will display current SSID if SSID is not empty, it will set the SSID Output In json format { \"cmd\":\"100\", \"status\":\"ok\", \"data\":\"esp3d\" } cmd Id of requested command, should be 100 status status of command, should be ok data content of response, here the SSID ",
    "description": "Set / Display Station SSID",
    "tags": [],
    "title": "[ESP100]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp100/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Station SSID\nInput [ESP100]\u003cSSID\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nSSID\nif SSID is empty, it will display current SSID if SSID is not empty, it will set the SSID Output In json format { \"cmd\":\"100\", \"status\":\"ok\", \"data\":\"esp3d\" } cmd Id of requested command, should be 100 status status of command, should be ok data content of response, here the SSID ",
    "description": "Set / Display Station SSID",
    "tags": [],
    "title": "[ESP100]",
    "uri": "/esp3d/v3.x/documentation/commands/esp100/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Station SSID\nInput [ESP100]\u003cSSID\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nSSID\nif SSID is empty, it will display current SSID if SSID is not empty, it will set the SSID Output In json format { \"cmd\":\"100\", \"status\":\"ok\", \"data\":\"esp3d\" } cmd Id of requested command, should be 100 status status of command, should be ok data content of response, here the SSID ",
    "description": "Set / Display Station SSID",
    "tags": [],
    "title": "[ESP100]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp100/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Station Password\nInput [ESP101]\u003cpassword\u003e \u003cNOPASSWORD\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\npassword\nif password is not empty, it will set the password NOPASSWORD\nif NOPASSWORD is present, it will remove the password if password is empty and NOPASSWORD is not present, it will raise error: `Password not displayable``\nOutput In json format: { \"cmd\":\"101\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 101 status status of command, should be ok data content of response, here ok if error :\nin json format: { \"cmd\":\"101\", \"status\":\"error\", \"data\":\"Password not displayable\" } plain text: error: Password not displayable",
    "description": "Set Station Password",
    "tags": [],
    "title": "[ESP101]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp101/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Station Password\nInput [ESP101]\u003cpassword\u003e \u003cNOPASSWORD\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\npassword\nif password is not empty, it will set the password NOPASSWORD\nif NOPASSWORD is present, it will remove the password if password is empty and NOPASSWORD is not present, it will raise error: `Password not displayable``\nOutput In json format: { \"cmd\":\"101\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 101 status status of command, should be ok data content of response, here ok if error :\nin json format: { \"cmd\":\"101\", \"status\":\"error\", \"data\":\"Password not displayable\" } plain text: error: Password not displayable",
    "description": "Set Station Password",
    "tags": [],
    "title": "[ESP101]",
    "uri": "/esp3d/v3.x/documentation/commands/esp101/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Station Password\nInput [ESP101]\u003cpassword\u003e \u003cNOPASSWORD\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\npassword\nif password is not empty, it will set the password NOPASSWORD\nif NOPASSWORD is present, it will remove the password if password is empty and NOPASSWORD is not present, it will raise error: `Password not displayable``\nOutput In json format: { \"cmd\":\"101\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 101 status status of command, should be ok data content of response, here ok if error :\nin json format: { \"cmd\":\"101\", \"status\":\"error\", \"data\":\"Password not displayable\" } plain text: error: Password not displayable",
    "description": "Set Station Password",
    "tags": [],
    "title": "[ESP101]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp101/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Station IP mode\nInput [ESP102]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: DHCP or STATIC Output In json format { \"cmd\":\"102\", \"status\":\"ok\", \"data\":\"DHCP\" } cmd Id of requested command, should be 102 status status of command, should be ok data content of response, here the mode ",
    "description": "Set / Display Station IP mode",
    "tags": [],
    "title": "[ESP102]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp102/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Station IP mode\nInput [ESP102]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: DHCP or STATIC Output In json format { \"cmd\":\"102\", \"status\":\"ok\", \"data\":\"DHCP\" } cmd Id of requested command, should be 102 status status of command, should be ok data content of response, here the mode ",
    "description": "Set / Display Station IP mode",
    "tags": [],
    "title": "[ESP102]",
    "uri": "/esp3d/v3.x/documentation/commands/esp102/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Station IP mode\nInput [ESP102]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: DHCP or STATIC Output In json format { \"cmd\":\"102\", \"status\":\"ok\", \"data\":\"DHCP\" } cmd Id of requested command, should be 102 status status of command, should be ok data content of response, here the mode ",
    "description": "Set / Display Station IP mode",
    "tags": [],
    "title": "[ESP102]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp102/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Station IP address\nInput [ESP103]IP=\u003cIP\u003e MSK=\u003cIP\u003e GW=\u003cIP\u003e DNS=\u003cIP\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nIP\nif IP is empty, it will display defined IP if IP is not empty, it will set the IP MSK\nif MSK is empty, it will display defined Network Mask if MSK is not empty, it will set the Network Mask GW\nif GW is empty, it will display defined Gateway if GW is not empty, it will set the Gateway DNS\nif DNS is empty, it will display defined DNS if DNS is not empty, it will set the DNS Output In json format { \"cmd\": \"103\", \"status\": \"ok\", \"data\": { \"ip\": \"192.168.0.1\", \"gw\": \"192.168.0.1\", \"msk\": \"255.255.255.0\", \"dns\": \"192.168.0.1\" } } cmd Id of requested command, should be 103 status status of command, should be ok data content of response, here the IP, GW, MSK and DNS ",
    "description": "Set / Display Station IP address",
    "tags": [],
    "title": "[ESP103]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp103/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Station IP address\nInput [ESP103]IP=\u003cIP\u003e MSK=\u003cIP\u003e GW=\u003cIP\u003e DNS=\u003cIP\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nIP\nif IP is empty, it will display defined IP if IP is not empty, it will set the IP MSK\nif MSK is empty, it will display defined Network Mask if MSK is not empty, it will set the Network Mask GW\nif GW is empty, it will display defined Gateway if GW is not empty, it will set the Gateway DNS\nif DNS is empty, it will display defined DNS if DNS is not empty, it will set the DNS Output In json format { \"cmd\": \"103\", \"status\": \"ok\", \"data\": { \"ip\": \"192.168.0.1\", \"gw\": \"192.168.0.1\", \"msk\": \"255.255.255.0\", \"dns\": \"192.168.0.1\" } } cmd Id of requested command, should be 103 status status of command, should be ok data content of response, here the IP, GW, MSK and DNS ",
    "description": "Set / Display Station IP address",
    "tags": [],
    "title": "[ESP103]",
    "uri": "/esp3d/v3.x/documentation/commands/esp103/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Station IP address\nInput [ESP103]IP=\u003cIP\u003e MSK=\u003cIP\u003e GW=\u003cIP\u003e DNS=\u003cIP\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nIP\nif IP is empty, it will display defined IP if IP is not empty, it will set the IP MSK\nif MSK is empty, it will display defined Network Mask if MSK is not empty, it will set the Network Mask GW\nif GW is empty, it will display defined Gateway if GW is not empty, it will set the Gateway DNS\nif DNS is empty, it will display defined DNS if DNS is not empty, it will set the DNS Output In json format { \"cmd\": \"103\", \"status\": \"ok\", \"data\": { \"ip\": \"192.168.0.1\", \"gw\": \"192.168.0.1\", \"msk\": \"255.255.255.0\", \"dns\": \"192.168.0.1\" } } cmd Id of requested command, should be 103 status status of command, should be ok data content of response, here the IP, GW, MSK and DNS ",
    "description": "Set / Display Station IP address",
    "tags": [],
    "title": "[ESP103]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp103/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set station fallback mode state at boot which can be BT, CONFIG, OFF\nInput [ESP104]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: BT, CCONFIG or OFF Output In json format { \"cmd\":\"104\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 104 status status of command, should be ok data content of response, here the mode ",
    "description": "Set station fallback mode state at boot",
    "tags": [],
    "title": "[ESP104]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp104/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set station fallback mode state at boot which can be BT, WIFI-SETUP, OFF\nInput [ESP104]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: BT, WIFI-SETUP or OFF Output In json format { \"cmd\":\"104\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 104 status status of command, should be ok data content of response, here the mode ",
    "description": "Set station fallback mode state at boot",
    "tags": [],
    "title": "[ESP104]",
    "uri": "/esp3d/v3.x/documentation/commands/esp104/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set station fallback mode state at boot which can be BT, WIFI-SETUP, OFF\nInput [ESP104]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: BT, WIFI-SETUP or OFF Output In json format { \"cmd\":\"104\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 104 status status of command, should be ok data content of response, here the mode ",
    "description": "Set station fallback mode state at boot",
    "tags": [],
    "title": "[ESP104]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp104/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Access point SSID\nInput [ESP105]\u003cSSID\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nSSID\nif SSID is empty, it will display current SSID if SSID is not empty, it will set the SSID Output In json format { \"cmd\":\"105\", \"status\":\"ok\", \"data\":\"esp3d\" } cmd Id of requested command, should be 105 status status of command, should be ok data content of response, here the SSID ",
    "description": "Set / Display Access point SSID",
    "tags": [],
    "title": "[ESP105]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp105/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Access point SSID\nInput [ESP105]\u003cSSID\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nSSID\nif SSID is empty, it will display current SSID if SSID is not empty, it will set the SSID Output In json format { \"cmd\":\"105\", \"status\":\"ok\", \"data\":\"esp3d\" } cmd Id of requested command, should be 105 status status of command, should be ok data content of response, here the SSID ",
    "description": "Set / Display Access point SSID",
    "tags": [],
    "title": "[ESP105]",
    "uri": "/esp3d/v3.x/documentation/commands/esp105/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Access point SSID\nInput [ESP105]\u003cSSID\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format\ncan be in JSON or plain text\npwd= the admin password if authentication is enabled\nSSID\nif SSID is empty, it will display current SSID if SSID is not empty, it will set the SSID Output In json format { \"cmd\":\"105\", \"status\":\"ok\", \"data\":\"esp3d\" } cmd Id of requested command, should be 105 status status of command, should be ok data content of response, here the SSID ",
    "description": "Set / Display Access point SSID",
    "tags": [],
    "title": "[ESP105]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp105/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Access point password\nInput [ESP106]\u003cpassword\u003e \u003cNOPASSWORD\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\npassword\nif password is not empty, it will set the password NOPASSWORD\nif NOPASSWORD is present, it will remove the password if password is empty and NOPASSWORD is not present, it will raise error: `Password not displayable``\nOutput In json format { \"cmd\":\"106\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 106 status status of command, should be ok data content of response, here ok ",
    "description": "Set Access point password",
    "tags": [],
    "title": "[ESP106]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp106/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Access point password\nInput [ESP106]\u003cpassword\u003e \u003cNOPASSWORD\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\npassword\nif password is not empty, it will set the password NOPASSWORD\nif NOPASSWORD is present, it will remove the password if password is empty and NOPASSWORD is not present, it will raise error: `Password not displayable``\nOutput In json format { \"cmd\":\"106\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 106 status status of command, should be ok data content of response, here ok ",
    "description": "Set Access point password",
    "tags": [],
    "title": "[ESP106]",
    "uri": "/esp3d/v3.x/documentation/commands/esp106/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Access point password\nInput [ESP106]\u003cpassword\u003e \u003cNOPASSWORD\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\npassword\nif password is not empty, it will set the password NOPASSWORD\nif NOPASSWORD is present, it will remove the password if password is empty and NOPASSWORD is not present, it will raise error: `Password not displayable``\nOutput In json format { \"cmd\":\"106\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 106 status status of command, should be ok data content of response, here ok ",
    "description": "Set Access point password",
    "tags": [],
    "title": "[ESP106]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp106/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Access point IP value\nInput [ESP107]\u003cIP\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nIP\nif IP is empty, it will display defined IP if IP is not empty, it will set the IP Output In json format { \"cmd\":\"107\", \"status\":\"ok\", \"data\":\"192.168.0.1\" } cmd Id of requested command, should be 107 status status of command, should be ok data content of response, here the IP ",
    "description": "Set / Display Access point IP value",
    "tags": [],
    "title": "[ESP107]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp107/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Access point IP value\nInput [ESP107]\u003cIP\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nIP\nif IP is empty, it will display defined IP if IP is not empty, it will set the IP Output In json format { \"cmd\":\"107\", \"status\":\"ok\", \"data\":\"192.168.0.1\" } cmd Id of requested command, should be 107 status status of command, should be ok data content of response, here the IP ",
    "description": "Set / Display Access point IP value",
    "tags": [],
    "title": "[ESP107]",
    "uri": "/esp3d/v3.x/documentation/commands/esp107/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Access point IP value\nInput [ESP107]\u003cIP\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nIP\nif IP is empty, it will display defined IP if IP is not empty, it will set the IP Output In json format { \"cmd\":\"107\", \"status\":\"ok\", \"data\":\"192.168.0.1\" } cmd Id of requested command, should be 107 status status of command, should be ok data content of response, here the IP ",
    "description": "Set / Display Access point IP value",
    "tags": [],
    "title": "[ESP107]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp107/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Access point channel value\nInput [ESP108]\u003cchannel\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nchannel\nif channel is empty, it will display defined channel if channel is not empty, it will set the channel Output In json format { \"cmd\":\"108\", \"status\":\"ok\", \"data\":\"1\" } cmd Id of requested command, should be 108 status status of command, should be ok data content of response, here the channel ",
    "description": "Set / Display Access point channel value",
    "tags": [],
    "title": "[ESP108]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp108/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Access point channel value\nInput [ESP108]\u003cchannel\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nchannel\nif channel is empty, it will display defined channel if channel is not empty, it will set the channel Output In json format { \"cmd\":\"108\", \"status\":\"ok\", \"data\":\"1\" } cmd Id of requested command, should be 108 status status of command, should be ok data content of response, here the channel ",
    "description": "Set / Display Access point channel value",
    "tags": [],
    "title": "[ESP108]",
    "uri": "/esp3d/v3.x/documentation/commands/esp108/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Access point channel value\nInput [ESP108]\u003cchannel\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nchannel\nif channel is empty, it will display defined channel if channel is not empty, it will set the channel Output In json format { \"cmd\":\"108\", \"status\":\"ok\", \"data\":\"1\" } cmd Id of requested command, should be 108 status status of command, should be ok data content of response, here the channel ",
    "description": "Set / Display Access point channel value",
    "tags": [],
    "title": "[ESP108]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp108/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / display radio state at boot which can be BT, STA, AP, CONFIG, OFF\nInput [ESP110]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: BT, STA, AP, CONFIG or OFF Output In json format { \"cmd\":\"110\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 110 status status of command, should be ok data content of response, here the mode OFF ",
    "description": "Set / Display radio state at boot",
    "tags": [],
    "title": "[ESP110]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp110/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / display radio state at boot which can be BT, WIFI-STA, WIFI-AP, ETH-STA, OFF\nInput [ESP110]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: BT, WIFI-STA, WIFI-AP, ETH-STA or OFF Output In json format { \"cmd\":\"110\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 110 status status of command, should be ok data content of response, here the mode ",
    "description": "Set / Display radio state at boot",
    "tags": [],
    "title": "[ESP110]",
    "uri": "/esp3d/v3.x/documentation/commands/esp110/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / display radio state at boot which can be BT, WIFI-STA, WIFI-AP, ETH-STA, OFF\nInput [ESP110]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: BT, WIFI-STA, WIFI-AP, ETH-STA or OFF Output In json format { \"cmd\":\"110\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 110 status status of command, should be ok data content of response, here the mode ",
    "description": "Set / Display radio state at boot",
    "tags": [],
    "title": "[ESP110]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp110/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Display current IP\nInput [ESP111]\u003cALL\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nALL\nit is set it will display IP, GW, MSK, DNS ip Output In json format { \"cmd\":\"111\", \"status\":\"ok\", \"data\":\"192.168.0.1\" } cmd Id of requested command, should be 111 status status of command, should be ok data content of response, here the IP ",
    "description": "Display current IP",
    "tags": [],
    "title": "[ESP111]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp111/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Display current IP\nInput [ESP111]\u003cOUTPUT=PRINTER\u003e \u003cALL\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOUTPUT\nif OUTPUT is empty, it will display current IP as text 192.168.0.1 if OUTPUT is PRINTER, it will display current IP in printer format M117 192.168.0.1 ALL\nit is set it will display IP, GW, MSK, DNS ip Output In json format { \"cmd\":\"111\", \"status\":\"ok\", \"data\":\"192.168.0.1\" } cmd Id of requested command, should be 111 status status of command, should be ok data content of response, here the IP ",
    "description": "Display current IP",
    "tags": [],
    "title": "[ESP111]",
    "uri": "/esp3d/v3.x/documentation/commands/esp111/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Display current IP\nInput [ESP111]\u003cOUTPUT=PRINTER\u003e \u003cALL\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOUTPUT\nif OUTPUT is empty, it will display current IP as text 192.168.0.1 if OUTPUT is PRINTER, it will display current IP in printer format M117 192.168.0.1 ALL\nit is set it will display IP, GW, MSK, DNS ip Output In json format { \"cmd\":\"111\", \"status\":\"ok\", \"data\":\"192.168.0.1\" } cmd Id of requested command, should be 111 status status of command, should be ok data content of response, here the IP ",
    "description": "Display current IP",
    "tags": [],
    "title": "[ESP111]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp111/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Hostname\nInput [ESP112]\u003chostname\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nhostname\nif hostname is empty, it will display current hostname if hostname is not empty, it will set the hostname Output In json format { \"cmd\":\"112\", \"status\":\"ok\", \"data\":\"esp3d\" } cmd Id of requested command, should be 112 status status of command, should be ok data content of response, here the hostname ",
    "description": "Set / Display Hostname",
    "tags": [],
    "title": "[ESP112]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp112/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Hostname\nInput [ESP112]\u003chostname\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nhostname\nif hostname is empty, it will display current hostname if hostname is not empty, it will set the hostname Output In json format { \"cmd\":\"112\", \"status\":\"ok\", \"data\":\"esp3d\" } cmd Id of requested command, should be 112 status status of command, should be ok data content of response, here the hostname ",
    "description": "Set / Display Hostname",
    "tags": [],
    "title": "[ESP112]",
    "uri": "/esp3d/v3.x/documentation/commands/esp112/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set / Display Hostname\nInput [ESP112]\u003chostname\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nhostname\nif hostname is empty, it will display current hostname if hostname is not empty, it will set the hostname Output In json format { \"cmd\":\"112\", \"status\":\"ok\", \"data\":\"esp3d\" } cmd Id of requested command, should be 112 status status of command, should be ok data content of response, here the hostname ",
    "description": "Set / Display Hostname",
    "tags": [],
    "title": "[ESP112]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp112/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set Boot radio state which can be ON, OFF\nInput [ESP114]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON or OFF Output In json format { \"cmd\":\"114\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 114 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set Boot radio state",
    "tags": [],
    "title": "[ESP114]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp114/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set Boot radio state which can be ON, OFF\nInput [ESP114]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON or OFF Output In json format { \"cmd\":\"114\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 114 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set Boot radio state",
    "tags": [],
    "title": "[ESP114]",
    "uri": "/esp3d/v3.x/documentation/commands/esp114/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set Boot radio state which can be ON, OFF\nInput [ESP114]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON or OFF Output In json format { \"cmd\":\"114\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 114 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set Boot radio state",
    "tags": [],
    "title": "[ESP114]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp114/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set immediate Network (WiFi/BT/Ethernet) state which can be ON, OFF\nInput [ESP115]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON or OFF Output In json format { \"cmd\":\"115\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 115 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set immediate Network state",
    "tags": [],
    "title": "[ESP115]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp115/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set immediate Network (WiFi/BT/Ethernet) state which can be ON, OFF\nInput [ESP115]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON or OFF Output In json format { \"cmd\":\"115\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 115 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set immediate Network state",
    "tags": [],
    "title": "[ESP115]",
    "uri": "/esp3d/v3.x/documentation/commands/esp115/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set immediate Network (WiFi/BT/Ethernet) state which can be ON, OFF\nInput [ESP115]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON or OFF Output In json format { \"cmd\":\"115\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 115 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set immediate Network state",
    "tags": [],
    "title": "[ESP115]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp115/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set HTTP state which can be ON, OFF\nInput [ESP120]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON or OFF Output In json format { \"cmd\":\"120\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 120 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set HTTP state",
    "tags": [],
    "title": "[ESP120]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp120/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set HTTP state which can be ON, OFF\nInput [ESP120]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON or OFF Output In json format { \"cmd\":\"120\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 120 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set HTTP state",
    "tags": [],
    "title": "[ESP120]",
    "uri": "/esp3d/v3.x/documentation/commands/esp120/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set HTTP state which can be ON, OFF\nInput [ESP120]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON or OFF Output In json format { \"cmd\":\"120\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 120 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set HTTP state",
    "tags": [],
    "title": "[ESP120]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp120/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set HTTP port\nInput [ESP121]\u003cport\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nport\nif port is empty, it will display current port if port is not empty, it will set the port Output In json format { \"cmd\":\"121\", \"status\":\"ok\", \"data\":\"80\" } cmd Id of requested command, should be 121 status status of command, should be ok data content of response, here the port ",
    "description": "Get/Set HTTP port",
    "tags": [],
    "title": "[ESP121]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp121/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set HTTP port\nInput [ESP121]\u003cport\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nport\nif port is empty, it will display current port if port is not empty, it will set the port Output In json format { \"cmd\":\"121\", \"status\":\"ok\", \"data\":\"80\" } cmd Id of requested command, should be 121 status status of command, should be ok data content of response, here the port ",
    "description": "Get/Set HTTP port",
    "tags": [],
    "title": "[ESP121]",
    "uri": "/esp3d/v3.x/documentation/commands/esp121/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set HTTP port\nInput [ESP121]\u003cport\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nport\nif port is empty, it will display current port if port is not empty, it will set the port Output In json format { \"cmd\":\"121\", \"status\":\"ok\", \"data\":\"80\" } cmd Id of requested command, should be 121 status status of command, should be ok data content of response, here the port ",
    "description": "Get/Set HTTP port",
    "tags": [],
    "title": "[ESP121]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp121/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set TELNET state which can be ON, OFF, CLOSE\nInput [ESP130]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON, OFF or CLOSE Output In json format { \"cmd\":\"130\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 130 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set TELNET state",
    "tags": [],
    "title": "[ESP130]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp130/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set TELNET state which can be ON, OFF, CLOSE\nInput [ESP130]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON, OFF or CLOSE Output In json format { \"cmd\":\"130\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 130 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set TELNET state",
    "tags": [],
    "title": "[ESP130]",
    "uri": "/esp3d/v3.x/documentation/commands/esp130/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set TELNET state which can be ON, OFF, CLOSE\nInput [ESP130]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON, OFF or CLOSE Output In json format { \"cmd\":\"130\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 130 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set TELNET state",
    "tags": [],
    "title": "[ESP130]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp130/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set TELNET port\nInput [ESP131]\u003cport\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nport\nif port is empty, it will display current port if port is not empty, it will set the port Output In json format { \"cmd\":\"131\", \"status\":\"ok\", \"data\":\"23\" } cmd Id of requested command, should be 131 status status of command, should be ok data content of response, here the port ",
    "description": "Get/Set TELNET port",
    "tags": [],
    "title": "[ESP131]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp131/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set TELNET port\nInput [ESP131]\u003cport\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nport\nif port is empty, it will display current port if port is not empty, it will set the port Output In json format { \"cmd\":\"131\", \"status\":\"ok\", \"data\":\"23\" } cmd Id of requested command, should be 131 status status of command, should be ok data content of response, here the port ",
    "description": "Get/Set TELNET port",
    "tags": [],
    "title": "[ESP131]",
    "uri": "/esp3d/v3.x/documentation/commands/esp131/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set TELNET port\nInput [ESP131]\u003cport\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nport\nif port is empty, it will display current port if port is not empty, it will set the port Output In json format { \"cmd\":\"131\", \"status\":\"ok\", \"data\":\"23\" } cmd Id of requested command, should be 131 status status of command, should be ok data content of response, here the port ",
    "description": "Get/Set TELNET port",
    "tags": [],
    "title": "[ESP131]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp131/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Sync / Set / Get current time\nInput [ESP140]\u003cSYNC\u003e \u003csrv1=XXXXX\u003e \u003csrv2=XXXXX\u003e \u003csrv3=XXXXX\u003e \u003ctzone=+HH:SS\u003e \u003cntp=YES/NO\u003e \u003ctime=YYYY-MM-DDTHH:mm:ss\u003e NOW json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nsrv1 / srv2 / srv3\nif srv1 / srv2 / srv3 are empty, it will display current NTP servers if srv1 / srv2 / srv3 are not empty, it will set the NTP servers tzone\nif tzone is empty, it will display current time zone if tzone is not empty, it will set the time zone time\nif time is empty, it will display current time if time is not empty, it will set the time ntp\nif ntp is empty, it will display current NTP state if ntp is not empty, it will set the NTP state SYNC\nif SYNC, it will restart NTP service to sync time NOW\nif NOW, it will display current time in ISO 8601 format with time zone Output In json format { \"cmd\":\"140\", \"status\":\"ok\", \"data\":\"2020-01-01T00:00:00 (+08:00)\" } cmd Id of requested command, should be 140 status status of command, should be ok data content of response, here the time ",
    "description": "Sync / Set / Get current time",
    "tags": [],
    "title": "[ESP140]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp140/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Sync / Set / Get current time\nInput [ESP140]\u003cSYNC\u003e \u003csrv1=XXXXX\u003e \u003csrv2=XXXXX\u003e \u003csrv3=XXXXX\u003e \u003ctzone=+HH:SS\u003e \u003cntp=YES/NO\u003e \u003ctime=YYYY-MM-DDTHH:mm:ss\u003e NOW json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nsrv1 / srv2 / srv3\nif srv1 / srv2 / srv3 are empty, it will display current NTP servers if srv1 / srv2 / srv3 are not empty, it will set the NTP servers tzone\nif tzone is empty, it will display current time zone if tzone is not empty, it will set the time zone time\nif time is empty, it will display current time if time is not empty, it will set the time ntp\nif ntp is empty, it will display current NTP state if ntp is not empty, it will set the NTP state SYNC\nif SYNC, it will restart NTP service to sync time NOW\nif NOW, it will display current time in ISO 8601 format with time zone Output In json format { \"cmd\":\"140\", \"status\":\"ok\", \"data\":\"2020-01-01T00:00:00 (+08:00)\" } cmd Id of requested command, should be 140 status status of command, should be ok data content of response, here the time ",
    "description": "Sync / Set / Get current time",
    "tags": [],
    "title": "[ESP140]",
    "uri": "/esp3d/v3.x/documentation/commands/esp140/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Sync / Set / Get current time\nInput [ESP140]\u003cSYNC\u003e \u003csrv1=XXXXX\u003e \u003csrv2=XXXXX\u003e \u003csrv3=XXXXX\u003e \u003ctzone=+HH:SS\u003e \u003cntp=YES/NO\u003e \u003ctime=YYYY-MM-DDTHH:mm:ss\u003e NOW json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nsrv1 / srv2 / srv3\nif srv1 / srv2 / srv3 are empty, it will display current NTP servers if srv1 / srv2 / srv3 are not empty, it will set the NTP servers tzone\nif tzone is empty, it will display current time zone if tzone is not empty, it will set the time zone time\nif time is empty, it will display current time if time is not empty, it will set the time ntp\nif ntp is empty, it will display current NTP state if ntp is not empty, it will set the NTP state SYNC\nif SYNC, it will restart NTP service to sync time NOW\nif NOW, it will display current time in ISO 8601 format with time zone Output In json format { \"cmd\":\"140\", \"status\":\"ok\", \"data\":\"2020-01-01T00:00:00 (+08:00)\" } cmd Id of requested command, should be 140 status status of command, should be ok data content of response, here the time ",
    "description": "Sync / Set / Get current time",
    "tags": [],
    "title": "[ESP140]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp140/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set boot delay in ms / Verbose boot\nInput [ESP150]\u003cdelay=time in milliseconds\u003e \u003cverbose=ON/OFF\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\ndelay\nif delay is empty, it will display current delay if delay is not empty, it will set the delay verbose\nif verbose is empty, it will display current verbose state if verbose is not empty, it will set the verbose state Output In json format { \"cmd\":\"150\", \"status\":\"ok\", \"data\": { \"delay\": \"100\", \"verbose\": \"OFF\" } } cmd Id of requested command, should be 150 status status of command, should be ok data content of response, here the delay and verbose state ",
    "description": "Get/Set boot delay in ms / Verbose boot",
    "tags": [],
    "title": "[ESP150]",
    "uri": "/esp3d/v3.x/documentation/commands/esp150/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set boot delay in ms / Verbose boot\nInput [ESP150]\u003cdelay=time in milliseconds\u003e \u003cverbose=ON/OFF\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\ndelay\nif delay is empty, it will display current delay if delay is not empty, it will set the delay verbose\nif verbose is empty, it will display current verbose state if verbose is not empty, it will set the verbose state Output In json format { \"cmd\":\"150\", \"status\":\"ok\", \"data\": { \"delay\": \"100\", \"verbose\": \"OFF\" } } cmd Id of requested command, should be 150 status status of command, should be ok data content of response, here the delay and verbose state ",
    "description": "Get/Set boot delay in ms / Verbose boot",
    "tags": [],
    "title": "[ESP150]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp150/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set WebSocket state which can be ON, OFF, CLOSE\nInput [ESP160]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON, OFF or CLOSE Output In json format { \"cmd\":\"160\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 160 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set WebSocket state",
    "tags": [],
    "title": "[ESP160]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp160/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set WebSocket state which can be ON, OFF, CLOSE\nInput [ESP160]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON, OFF or CLOSE Output In json format { \"cmd\":\"160\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 160 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set WebSocket state",
    "tags": [],
    "title": "[ESP160]",
    "uri": "/esp3d/v3.x/documentation/commands/esp160/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set WebSocket state which can be ON, OFF, CLOSE\nInput [ESP160]\u003cmode\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmode\nif mode is empty, it will display current mode if mode is not empty, it will set the setting mode: ON, OFF or CLOSE Output In json format { \"cmd\":\"160\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 160 status status of command, should be ok data content of response, here the mode ",
    "description": "Get/Set WebSocket state",
    "tags": [],
    "title": "[ESP160]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp160/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set WebSocket port\nInput [ESP161]\u003cport\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nport\nif port is empty, it will display current port if port is not empty, it will set the port Output In json format { \"cmd\":\"161\", \"status\":\"ok\", \"data\":\"81\" } cmd Id of requested command, should be 161 status status of command, should be ok data content of response, here the port ",
    "description": "Get/Set WebSocket port",
    "tags": [],
    "title": "[ESP161]",
    "uri": "/esp3d/v3.x/documentation/commands/esp161/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set WebSocket port\nInput [ESP161]\u003cport\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nport\nif port is empty, it will display current port if port is not empty, it will set the port Output In json format { \"cmd\":\"161\", \"status\":\"ok\", \"data\":\"81\" } cmd Id of requested command, should be 161 status status of command, should be ok data content of response, here the port ",
    "description": "Get/Set WebSocket port",
    "tags": [],
    "title": "[ESP161]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp161/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get /Set Camera command value / list all values in JSON/plain text\nInput [ESP170]\u003clabel=value\u003e \u003cjson=no\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nlabel\nif label is empty, it will display current value if label is not empty, it will set the value label can be: light/framesize/quality/contrast/brightness/saturation/gainceiling/colorbar/awb/agc/aec/hmirror/vflip/awb_gain/agc_gain/aec_value/aec2/cw/bpc/wpc/raw_gma/lenc/special_effect/wb_mode/ae_level value depend on label\nOutput In json format { \"cmd\":\"170\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 170 status status of command, should be ok | data content of response, here ok Framesize Framesize can be:\nValue Description resolution 0 FRAMESIZE_96X96 96x96 1 FRAMESIZE_QQVGA 160x120 2 FRAMESIZE_QCIF 176x144 3 FRAMESIZE_HQVGA 240x176 4 FRAMESIZE_240X240 240x240 5 FRAMESIZE_QVGA 320x240 6 FRAMESIZE_CIF 400x296 7 FRAMESIZE_HVGA 480x320 8 FRAMESIZE_VGA 640x480 9 FRAMESIZE_SVGA 800x600 10 FRAMESIZE_XGA 1024x768 11 FRAMESIZE_HD 1280x720 12 FRAMESIZE_SXGA 1280x1024 13 FRAMESIZE_UXGA 1600x1200 14 FRAMESIZE_FHD 1920x1080 15 FRAMESIZE_P_HD 720x1280 16 FRAMESIZE_P_3MP 864x1536 17 FRAMESIZE_QXGA 2048x1536 18 FRAMESIZE_QHD 2560x1440 19 FRAMESIZE_WQXGA 2560x1600 20 FRAMESIZE_P_FHD 1080x1920 21 FRAMESIZE_QSXGA 2560x1920 ",
    "description": "Get/Set Camera commands/values",
    "tags": [],
    "title": "[ESP170]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp170/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get /Set Camera command value / list all values in JSON/plain text\nInput [ESP170]\u003clabel=value\u003e \u003cjson=no\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nlabel\nif label is empty, it will display current value if label is not empty, it will set the value label can be: light/framesize/quality/contrast/brightness/saturation/gainceiling/colorbar/awb/agc/aec/hmirror/vflip/awb_gain/agc_gain/aec_value/aec2/cw/bpc/wpc/raw_gma/lenc/special_effect/wb_mode/ae_level value depend on label\nOutput In json format { \"cmd\":\"170\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 170 status status of command, should be ok | data content of response, here ok Framesize Framesize can be:\nValue Description resolution 0 FRAMESIZE_96X96 96x96 1 FRAMESIZE_QQVGA 160x120 2 FRAMESIZE_QCIF 176x144 3 FRAMESIZE_HQVGA 240x176 4 FRAMESIZE_240X240 240x240 5 FRAMESIZE_QVGA 320x240 6 FRAMESIZE_CIF 400x296 7 FRAMESIZE_HVGA 480x320 8 FRAMESIZE_VGA 640x480 9 FRAMESIZE_SVGA 800x600 10 FRAMESIZE_XGA 1024x768 11 FRAMESIZE_HD 1280x720 12 FRAMESIZE_SXGA 1280x1024 13 FRAMESIZE_UXGA 1600x1200 14 FRAMESIZE_FHD 1920x1080 15 FRAMESIZE_P_HD 720x1280 16 FRAMESIZE_P_3MP 864x1536 17 FRAMESIZE_QXGA 2048x1536 18 FRAMESIZE_QHD 2560x1440 19 FRAMESIZE_WQXGA 2560x1600 20 FRAMESIZE_P_FHD 1080x1920 21 FRAMESIZE_QSXGA 2560x1920 ",
    "description": "Get/Set Camera commands/values",
    "tags": [],
    "title": "[ESP170]",
    "uri": "/esp3d/v3.x/documentation/commands/esp170/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get /Set Camera command value / list all values in JSON/plain text\nInput [ESP170]\u003clabel=value\u003e \u003cjson=no\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nlabel\nif label is empty, it will display current value if label is not empty, it will set the value label can be: light/framesize/quality/contrast/brightness/saturation/gainceiling/colorbar/awb/agc/aec/hmirror/vflip/awb_gain/agc_gain/aec_value/aec2/cw/bpc/wpc/raw_gma/lenc/special_effect/wb_mode/ae_level value depend on label\nOutput In json format { \"cmd\":\"170\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 170 status status of command, should be ok data content of response, here ok ",
    "description": "Get/Set Camera commands/values",
    "tags": [],
    "title": "[ESP170]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp170/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Save frame to target path and filename (default target = today date, default name=timestamp.jpg)\nInput [ESP171]\u003cjson=no\u003e path=\u003ctarget path\u003e filename=\u003ctarget filename\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\npath\nif path is not empty, it will set the path filename\nif filename is not empty, it will set the filename Output In json format { \"cmd\":\"171\", \"status\":\"ok\", \"data\":\"Snapshot taken\" } cmd Id of requested command, should be 171 status status of command, should be ok data content of response, here Snapshot taken ",
    "description": "Save frame to target path and filename",
    "tags": [],
    "title": "[ESP171]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp171/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Save frame to target path and filename (default target = today date, default name=timestamp.jpg)\nInput [ESP171]\u003cjson=no\u003e path=\u003ctarget path\u003e filename=\u003ctarget filename\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\npath\nif path is not empty, it will set the path filename\nif filename is not empty, it will set the filename Output In json format { \"cmd\":\"171\", \"status\":\"ok\", \"data\":\"Snapshot taken\" } cmd Id of requested command, should be 171 status status of command, should be ok data content of response, here Snapshot taken ",
    "description": "Save frame to target path and filename",
    "tags": [],
    "title": "[ESP171]",
    "uri": "/esp3d/v3.x/documentation/commands/esp171/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Save frame to target path and filename (default target = today date, default name=timestamp.jpg)\nInput [ESP171]\u003cjson=no\u003e path=\u003ctarget path\u003e filename=\u003ctarget filename\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\npath\nif path is not empty, it will set the path filename\nif filename is not empty, it will set the filename Output In json format { \"cmd\":\"171\", \"status\":\"ok\", \"data\":\"Snapshot taken\" } cmd Id of requested command, should be 171 status status of command, should be ok data content of response, here Snapshot taken ",
    "description": "Save frame to target path and filename",
    "tags": [],
    "title": "[ESP171]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp171/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set Ftp state which can be ON, OFF, CLOSE\nInput [ESP180]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nstate\nif state is empty, it will display current state if state is not empty, it will set the state ON, OFF, CLOSE Output In json format { \"cmd\":\"180\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 180 status status of command, should be ok data content of response, here the state ",
    "description": "Get/Set Ftp state",
    "tags": [],
    "title": "[ESP180]",
    "uri": "/esp3d/v3.x/documentation/commands/esp180/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set Ftp state which can be ON, OFF, CLOSE\nInput [ESP180]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nstate\nif state is empty, it will display current state if state is not empty, it will set the state ON, OFF, CLOSE Output In json format { \"cmd\":\"180\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 180 status status of command, should be ok data content of response, here the state ",
    "description": "Get/Set Ftp state",
    "tags": [],
    "title": "[ESP180]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp180/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set Ftp ports\nInput ESP181]ctrl=\u003cport\u003e active=\u003cport\u003e passive=\u003cport\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nctrl\nif ctrl is empty, it will display current ctrl port if ctrl is not empty, it will set the ctrl port active\nif active is empty, it will display current active port if active is not empty, it will set the active port passive\nif passive is empty, it will display current passive port if passive is not empty, it will set the passive port Output In json format { \"cmd\":\"181\", \"status\":\"ok\", \"data\":{ \"ctrl\":\"21\", \"active\":\"50000\", \"passive\":\"50001\" } }",
    "description": "Get/Set Ftp ports",
    "tags": [],
    "title": "[ESP181]",
    "uri": "/esp3d/v3.x/documentation/commands/esp181/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set Ftp ports\nInput ESP181]ctrl=\u003cport\u003e active=\u003cport\u003e passive=\u003cport\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nctrl\nif ctrl is empty, it will display current ctrl port if ctrl is not empty, it will set the ctrl port active\nif active is empty, it will display current active port if active is not empty, it will set the active port passive\nif passive is empty, it will display current passive port if passive is not empty, it will set the passive port Output In json format { \"cmd\":\"181\", \"status\":\"ok\", \"data\":{ \"ctrl\":\"21\", \"active\":\"50000\", \"passive\":\"50001\" } }",
    "description": "Get/Set Ftp ports",
    "tags": [],
    "title": "[ESP181]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp181/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set WebDav state which can be ON, OFF, CLOSE\nInput [ESP190]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nstate\nif state is empty, it will display current state if state is not empty, it will set the state ON, OFF, CLOSE Output In json format { \"cmd\":\"190\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 190 status status of command, should be ok data content of response, here the state ",
    "description": "Get/Set WebDav state",
    "tags": [],
    "title": "[ESP190]",
    "uri": "/esp3d/v3.x/documentation/commands/esp190/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set WebDav state which can be ON, OFF, CLOSE\nInput [ESP190]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nstate\nif state is empty, it will display current state if state is not empty, it will set the state ON, OFF, CLOSE Output In json format { \"cmd\":\"190\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 190 status status of command, should be ok data content of response, here the state ",
    "description": "Get/Set WebDav state",
    "tags": [],
    "title": "[ESP190]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp190/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set WebDav port\nInput [ESP191]\u003cport\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nport if port is empty, it will display current port if port is not empty, it will set the port Output In json format { \"cmd\":\"191\", \"status\":\"ok\", \"data\":\"80\" } cmd Id of requested command, should be 191 status status of command, should be ok data content of response, here the port ",
    "description": "Get/Set WebDav port",
    "tags": [],
    "title": "[ESP191]",
    "uri": "/esp3d/v3.x/documentation/commands/esp191/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set WebDav port\nInput [ESP191]\u003cport\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nport if port is empty, it will display current port if port is not empty, it will set the port Output In json format { \"cmd\":\"191\", \"status\":\"ok\", \"data\":\"80\" } cmd Id of requested command, should be 191 status status of command, should be ok data content of response, here the port ",
    "description": "Get/Set WebDav port",
    "tags": [],
    "title": "[ESP191]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp191/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set SD state\nInput [ESP200] json=\u003cYES/NO\u003e \u003cRELEASESD\u003e \u003cREFRESH\u003e pwd=\u003cuser/admin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nRELEASESD\nif RELEASESD is present, it will release SD card REFRESH\nif REFRESH is present, it will refresh SD card Output In json format { \"cmd\":\"200\", \"status\":\"ok\", \"data\":\"ok\" }states can be : Busy. \"Not available, ok, No SD card\ncmd Id of requested command, should be 200 status status of command, should be ok data content of response, here ok ",
    "description": "Get/Set SD state",
    "tags": [],
    "title": "[ESP200]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp200/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set SD state\nInput [ESP200] json=\u003cYES/NO\u003e \u003cRELEASESD\u003e \u003cREFRESH\u003e pwd=\u003cuser/admin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nRELEASESD\nif RELEASESD is present, it will release SD card REFRESH\nif REFRESH is present, it will refresh SD card Output In json format { \"cmd\":\"200\", \"status\":\"ok\", \"data\":\"ok\" }states can be : Busy. \"Not available, ok, No SD card\ncmd Id of requested command, should be 200 status status of command, should be ok data content of response, here ok ",
    "description": "Get/Set SD state",
    "tags": [],
    "title": "[ESP200]",
    "uri": "/esp3d/v3.x/documentation/commands/esp200/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set SD state\nInput [ESP200] json=\u003cYES/NO\u003e \u003cRELEASESD\u003e \u003cREFRESH\u003e pwd=\u003cuser/admin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nRELEASESD\nif RELEASESD is present, it will release SD card REFRESH\nif REFRESH is present, it will refresh SD card Output In json format { \"cmd\":\"200\", \"status\":\"ok\", \"data\":\"ok\" }states can be : Busy. \"Not available, ok, No SD card\ncmd Id of requested command, should be 200 status status of command, should be ok data content of response, here ok ",
    "description": "Get/Set SD state",
    "tags": [],
    "title": "[ESP200]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp200/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set pin value\nInput [ESP201]P=\u003cpin\u003e V=\u003cvalue\u003e \u003cjson=YES/NO\u003e \u003cPULLUP=YES\u003e \u003cRAW=YES\u003e \u003cANALOG=NO\u003e \u003cANALOG_RANGE=255\u003e pwd=\u003cadmin password\u003e Range can be 255 / 1024 / 2047 / 4095 / 8191\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nP\nif P is not empty, it will use the pin value V\nif V is empty, it will display current pin value if V is not empty, it will set the pin value RAW\nif RAW is present, it will set the pin mode PULLUP\nif PULLUP is present, it will set the pullup pin mode ANALOG\nif ANALOG is present, it will set the pin ANALOG ANALOG_RANGE\nif ANALOG_RANGE is not empty, it will set the ANALOG_RANGE Output In json format { \"cmd\":\"201\", \"status\":\"ok\", \"data\":\"1\" } cmd Id of requested command, should be 201 status status of command, should be ok data content of response, here the pin value is 1 or High ",
    "description": "Get/Set pin value",
    "tags": [],
    "title": "[ESP201]",
    "uri": "/esp3d/v3.x/documentation/commands/esp201/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set pin value\nInput [ESP201]P=\u003cpin\u003e V=\u003cvalue\u003e \u003cjson=YES/NO\u003e \u003cPULLUP=YES\u003e \u003cRAW=YES\u003e \u003cANALOG=NO\u003e \u003cANALOG_RANGE=255\u003e pwd=\u003cadmin password\u003e Range can be 255 / 1024 / 2047 / 4095 / 8191\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nP\nif P is not empty, it will use the pin value V\nif V is empty, it will display current pin value if V is not empty, it will set the pin value RAW\nif RAW is present, it will set the pin mode PULLUP\nif PULLUP is present, it will set the pullup pin mode ANALOG\nif ANALOG is present, it will set the pin ANALOG ANALOG_RANGE\nif ANALOG_RANGE is not empty, it will set the ANALOG_RANGE Output In json format { \"cmd\":\"201\", \"status\":\"ok\", \"data\":\"1\" } cmd Id of requested command, should be 201 status status of command, should be ok data content of response, here the pin value is 1 or High ",
    "description": "Get/Set pin value",
    "tags": [],
    "title": "[ESP201]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp201/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set SD card Speed factor 1 2 4 6 8 16 32\nInput [ESP202]SPEED=\u003cfactor\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nSPEED=\nif factor is empty, it will display current factor if factor is not empty, it will set the factor Output In json format { \"cmd\":\"202\", \"status\":\"ok\", \"data\":\"1\" } cmd Id of requested command, should be 202 status status of command, should be ok data content of response, here the current SPI factor ",
    "description": "Get/Set SD card Speed factor",
    "tags": [],
    "title": "[ESP202]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp202/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set SD card Speed factor 1 2 4 6 8 16 32\nInput [ESP202]SPEED=\u003cfactor\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nSPEED=\nif factor is empty, it will display current factor if factor is not empty, it will set the factor Output In json format { \"cmd\":\"202\", \"status\":\"ok\", \"data\":\"1\" } cmd Id of requested command, should be 202 status status of command, should be ok data content of response, here the current SPI factor ",
    "description": "Get/Set SD card Speed factor",
    "tags": [],
    "title": "[ESP202]",
    "uri": "/esp3d/v3.x/documentation/commands/esp202/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set SD card Speed factor 1 2 4 6 8 16 32\nInput [ESP202]SPEED=\u003cfactor\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nSPEED=\nif factor is empty, it will display current factor if factor is not empty, it will set the factor Output In json format { \"cmd\":\"202\", \"status\":\"ok\", \"data\":\"1\" } cmd Id of requested command, should be 202 status status of command, should be ok data content of response, here the current SPI factor ",
    "description": "Get/Set SD card Speed factor",
    "tags": [],
    "title": "[ESP202]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp202/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get Sensor Value / type/Set Sensor type\nInput [ESP210]\u003ctype=NONE/xxx\u003e \u003cinterval=XXX in millisec\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\ntype\nif type is empty, it will display current type if type is not empty, it will set the type interval\nif interval is empty, it will display current interval if interval is not empty, it will set the interval Output In json format { \"cmd\":\"210\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 210 status status of command, should be ok data content of response, here ok ",
    "description": "Get/Set Sensor Value / type",
    "tags": [],
    "title": "[ESP210]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp210/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get Sensor Value / type/Set Sensor type\nInput [ESP210]\u003ctype=NONE/xxx\u003e \u003cinterval=XXX in millisec\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\ntype\nif type is empty, it will display current type if type is not empty, it will set the type interval\nif interval is empty, it will display current interval if interval is not empty, it will set the interval Output In json format { \"cmd\":\"210\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 210 status status of command, should be ok data content of response, here ok ",
    "description": "Get/Set Sensor Value / type",
    "tags": [],
    "title": "[ESP210]",
    "uri": "/esp3d/v3.x/documentation/commands/esp210/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get Sensor Value / type/Set Sensor type\nInput [ESP210]\u003ctype=NONE/xxx\u003e \u003cinterval=XXX in millisec\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\ntype\nif type is empty, it will display current type if type is not empty, it will set the type interval\nif interval is empty, it will display current interval if interval is not empty, it will set the interval Output In json format { \"cmd\":\"210\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 210 status status of command, should be ok data content of response, here ok ",
    "description": "Get/Set Sensor Value / type",
    "tags": [],
    "title": "[ESP210]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp210/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Output to esp screen status\nInput [ESP212]\u003cText\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nText\nif Text is not empty, it will set the Text if Text is empty, it will clear current Text The text can also contain the following variables:\n%ESP_IP% : the IP address of the ESP %ESP_NAME% : the name of the ESP %ESP_DATETIME% : the current date and time Output In json format { \"cmd\":\"212\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 212 status status of command, should be ok data content of response, here ok ",
    "description": "Output to ESP3D screen status",
    "tags": [],
    "title": "[ESP212]",
    "uri": "/esp3d/v3.x/documentation/commands/esp212/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Output to esp screen status\nInput [ESP214]\u003cText\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nText\nif Text is not empty, it will set the Text if Text is empty, it will clear current Text Output In json format { \"cmd\":\"214\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 214 status status of command, should be ok data content of response, here ok ",
    "description": "Output to ESP3D screen status",
    "tags": [],
    "title": "[ESP214]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp214/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Output to esp screen status\nInput [ESP214]\u003cText\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nText\nif Text is not empty, it will set the Text if Text is empty, it will clear current Text The text can also contain the following variables:\n%ESP_IP% : the IP address of the ESP %ESP_NAME% : the name of the ESP %ESP_DATETIME% : the current date and time Output In json format { \"cmd\":\"214\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 214 status status of command, should be ok data content of response, here ok ",
    "description": "Output to ESP3D screen status",
    "tags": [],
    "title": "[ESP214]",
    "uri": "/esp3d/v3.x/documentation/commands/esp214/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Output to esp screen status\nInput [ESP214]\u003cText\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nText\nif Text is not empty, it will set the Text if Text is empty, it will clear current Text Output In json format { \"cmd\":\"214\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 214 status status of command, should be ok data content of response, here ok ",
    "description": "Output to ESP3D screen status",
    "tags": [],
    "title": "[ESP214]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp214/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Start a Touch Calibration\nInput [ESP215]\u003cCALIBRATE\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format\npwd= the admin password if authentication is enabled\nCALIBRATE\nif CALIBRATE is present, it will start the calibration Output In json format { \"cmd\":\"215\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 215 status status of command, should be ok data content of response, here ok ",
    "description": "Start a Touch Calibration",
    "tags": [],
    "title": "[ESP215]",
    "uri": "/esp3d/v3.x/documentation/commands/esp215/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Start a Touch Calibration\nInput [ESP215]\u003cCALIBRATE\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format\npwd= the admin password if authentication is enabled\nCALIBRATE\nif CALIBRATE is present, it will start the calibration Output In json format { \"cmd\":\"215\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 215 status status of command, should be ok data content of response, here ok ",
    "description": "Start a Touch Calibration",
    "tags": [],
    "title": "[ESP215]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp215/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Do Snapshot of current screen and save to SD card, need enable LV_USE_SNAPSHOT=1 in cmake\\dev_tools.make\nInput [ESP216]\u003cSNAP\u003e json=\u003cno\u003e pwd=\u003cadmin/user password\u003e\njson=no the output format can be in JSON or plain text\npwd=\u003cadmin/user password\u003e the admin password if authentication is enabled\nSNAP\nif SNAP is set, it will take a snapshot if SNAP is not set, it will not take a snapshot Output In json format { \"cmd\":\"216\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 216 status status of command, should be ok data content of response, here ok Additionnaly a raw file named snapshot\u003ctimestamp\u003e.raw will be saved in the SD card if the snapshot is enabled\nThe raw file can be converted to a png file using the script tools/imageconv/conv.py e.g. python conv.py snapshot\u003ctimestamp\u003e.raw will generate a file:\nsnapshot\u003ctimestamp\u003e.raw.png",
    "description": "Do Snapshot of current screen",
    "tags": [],
    "title": "[ESP216]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp216/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get ESP3D pins definition\nInput [ESP220] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\": \"220\", \"status\": \"ok\", \"data\": [ { \"id\": \"SD CS\", \"value\": \"13\" }, { \"id\": \"SD MOSI\", \"value\": \"15\" }, { \"id\": \"SD MISO\", \"value\": \"2\" }, { \"id\": \"SD SCK\", \"value\": \"14\" }, { \"id\": \"SD DETECT\", \"value\": \"-1\" }, { \"id\": \"SD SWITCH\", \"value\": \"26\" } ] } cmd Id of requested command, should be 220 status status of command, should be ok data content of response, here the pins definitions plain text format SD CS: 13 SD MOSI: 15 SD MISO: 2 SD SCK: 14 SD DETECT: -1 SD SWITCH: 26",
    "description": "Get ESP3D pins definition",
    "tags": [],
    "title": "[ESP220]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp220/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get ESP3D pins definition\nInput [ESP220] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\": \"220\", \"status\": \"ok\", \"data\": [ { \"id\": \"SD CS\", \"value\": \"13\" }, { \"id\": \"SD MOSI\", \"value\": \"15\" }, { \"id\": \"SD MISO\", \"value\": \"2\" }, { \"id\": \"SD SCK\", \"value\": \"14\" }, { \"id\": \"SD DETECT\", \"value\": \"-1\" }, { \"id\": \"SD SWITCH\", \"value\": \"26\" } ] } cmd Id of requested command, should be 220 status status of command, should be ok data content of response, here the pins definitions plain text format SD CS: 13 SD MOSI: 15 SD MISO: 2 SD SCK: 14 SD DETECT: -1 SD SWITCH: 26",
    "description": "Get ESP3D pins definition",
    "tags": [],
    "title": "[ESP220]",
    "uri": "/esp3d/v3.x/documentation/commands/esp220/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get ESP3D pins definition\nInput [ESP220] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\": \"220\", \"status\": \"ok\", \"data\": [ { \"id\": \"SD CS\", \"value\": \"13\" }, { \"id\": \"SD MOSI\", \"value\": \"15\" }, { \"id\": \"SD MISO\", \"value\": \"2\" }, { \"id\": \"SD SCK\", \"value\": \"14\" }, { \"id\": \"SD DETECT\", \"value\": \"-1\" }, { \"id\": \"SD SWITCH\", \"value\": \"26\" } ] } cmd Id of requested command, should be 220 status status of command, should be ok data content of response, here the pins definitions plain text format SD CS: 13 SD MOSI: 15 SD MISO: 2 SD SCK: 14 SD DETECT: -1 SD SWITCH: 26",
    "description": "Get ESP3D pins definition",
    "tags": [],
    "title": "[ESP220]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp220/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Play sound\nInput [ESP250]F=\u003cfrequency\u003e D=\u003cduration\u003e json=\u003cno\u003e pwd=\u003cuser password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nF\nif F is empty, it will use current frequency if F is not empty, it will use the frequency D\nif D is empty, it will use current duration if D is not empty, it will use the duration Output In json format { \"cmd\":\"250\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 250 status status of command, should be ok data content of response, here ok ",
    "description": "Play sound",
    "tags": [],
    "title": "[ESP250]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp250/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Play sound\nInput [ESP250]F=\u003cfrequency\u003e D=\u003cduration\u003e json=\u003cno\u003e pwd=\u003cuser password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nF\nif F is empty, it will use current frequency if F is not empty, it will use the frequency D\nif D is empty, it will use current duration if D is not empty, it will use the duration Output In json format { \"cmd\":\"250\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 250 status status of command, should be ok data content of response, here ok ",
    "description": "Play sound",
    "tags": [],
    "title": "[ESP250]",
    "uri": "/esp3d/v3.x/documentation/commands/esp250/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Play sound\nInput [ESP250]F=\u003cfrequency\u003e D=\u003cduration\u003e json=\u003cno\u003e pwd=\u003cuser password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nF\nif F is empty, it will use current frequency if F is not empty, it will use the frequency D\nif D is empty, it will use current duration if D is not empty, it will use the duration Output In json format { \"cmd\":\"250\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 250 status status of command, should be ok data content of response, here ok ",
    "description": "Play sound",
    "tags": [],
    "title": "[ESP250]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp250/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Delay/Pause command\nInput [ESP290]\u003cdelay in ms\u003e json=\u003cno\u003e pwd=\u003cuser password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\ndelay\nif delay is empty, it will use 0 delay if delay is not empty, it will use the delay Output In json format { \"cmd\":\"290\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 290 status status of command, should be ok data content of response, here ok ",
    "description": "Delay/Pause command",
    "tags": [],
    "title": "[ESP290]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp290/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Delay/Pause command\nInput [ESP290]\u003cdelay in ms\u003e json=\u003cno\u003e pwd=\u003cuser password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\ndelay\nif delay is empty, it will use 0 delay if delay is not empty, it will use the delay Output In json format { \"cmd\":\"290\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 290 status status of command, should be ok data content of response, here ok ",
    "description": "Delay/Pause command",
    "tags": [],
    "title": "[ESP290]",
    "uri": "/esp3d/v3.x/documentation/commands/esp290/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Delay/Pause command\nInput [ESP290]\u003cdelay in ms\u003e json=\u003cno\u003e pwd=\u003cuser password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\ndelay\nif delay is empty, it will use 0 delay if delay is not empty, it will use the delay Output In json format { \"cmd\":\"290\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 290 status status of command, should be ok data content of response, here ok ",
    "description": "Delay/Pause command",
    "tags": [],
    "title": "[ESP290]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp290/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get full ESP3D settings\nInput [ESP400] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput Passwords are not displayed and replaced by ********\nif json {\"cmd\":\"400\",\"status\":\"ok\",\"data\":[ {\"F\":\"network/network\",\"P\":\"130\",\"T\":\"S\",\"R\":\"1\",\"V\":\"esp3d\",\"H\":\"hostname\" ,\"S\":\"32\", \"M\":\"1\"}, {\"F\":\"network/network\",\"P\":\"0\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"radio mode\",\"O\":[{\"none\":\"0\"}, {\"sta\":\"1\"}, {\"ap\":\"2\"}, {\"setup\":\"5\"}]}, {\"F\":\"network/network\",\"P\":\"1034\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"radio_boot\",\"O\":[{\"no\":\"0\"}, {\"yes\":\"1\"}]}, {\"F\":\"network/sta\",\"P\":\"1\",\"T\":\"S\",\"V\":\"Luc-Lab\",\"S\":\"32\",\"H\":\"SSID\",\"M\":\"1\"}, {\"F\":\"network/sta\",\"P\":\"34\",\"T\":\"S\",\"N\":\"1\",\"MS\":\"0\",\"R\":\"1\",\"V\":\"********\",\"S\":\"64\",\"H\":\"pwd\",\"M\":\"8\"}, {\"F\":\"network/sta\",\"P\":\"99\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"ip mode\",\"O\":[{\"dhcp\":\"1\"}, {\"static\":\"0\"}]}, {\"F\":\"network/sta\",\"P\":\"100\",\"T\":\"A\",\"R\":\"1\",\"V\":\"192.168.0.1\",\"H\":\"ip\"}, {\"F\":\"network/sta\",\"P\":\"108\",\"T\":\"A\",\"R\":\"1\",\"V\":\"192.168.0.1\",\"H\":\"gw\"}, {\"F\":\"network/sta\",\"P\":\"104\",\"T\":\"A\",\"R\":\"1\",\"V\":\"255.255.255.0\",\"H\":\"msk\"}, {\"F\":\"network/sta\",\"P\":\"1029\",\"T\":\"A\",\"R\":\"1\",\"V\":\"192.168.0.1\",\"H\":\"DNS\"}, {\"F\":\"network/sta\",\"P\":\"1035\",\"T\":\"B\",\"R\":\"0\",\"V\":\"5\",\"H\":\"sta fallback mode\",\"O\":[{\"none\":\"0\"}, {\"setup\":\"5\"}]}, {\"F\":\"network/ap\",\"P\":\"218\",\"T\":\"S\",\"R\":\"1\",\"V\":\"ESP3D\",\"S\":\"32\",\"H\":\"SSID\",\"M\":\"1\"}, {\"F\":\"network/ap\",\"P\":\"251\",\"T\":\"S\",\"N\":\"1\",\"MS\":\"0\",\"R\":\"1\",\"V\":\"********\",\"S\":\"64\",\"H\":\"pwd\",\"M\":\"8\"}, {\"F\":\"network/ap\",\"P\":\"316\",\"T\":\"A\",\"R\":\"1\",\"V\":\"192.168.0.1\",\"H\":\"ip\"}, {\"F\":\"network/ap\",\"P\":\"118\",\"T\":\"B\",\"R\":\"1\",\"V\":\"11\",\"H\":\"channel\",\"O\":[{\"1\":\"1\"}, {\"2\":\"2\"}, {\"3\":\"3\"}, {\"4\":\"4\"}, {\"5\":\"5\"}, {\"6\":\"6\"}, {\"7\":\"7\"}, {\"8\":\"8\"}, {\"9\":\"9\"}, {\"10\":\"10\"}, {\"11\":\"11\"}, {\"12\":\"12\"}, {\"13\":\"13\"}, {\"14\":\"14\"}]}, {\"F\":\"service/http\",\"P\":\"328\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"enable\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/http\",\"P\":\"121\",\"T\":\"I\",\"R\":\"1\",\"V\":\"8181\",\"H\":\"port\",\"S\":\"65001\",\"M\":\"1\"}, {\"F\":\"service/telnetp\",\"P\":\"329\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"enable\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/telnetp\",\"P\":\"125\",\"T\":\"I\",\"R\":\"1\",\"V\":\"23\",\"H\":\"port\",\"S\":\"65001\",\"M\":\"1\"}, {\"F\":\"service/webdavp\",\"P\":\"1024\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"enable\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/webdavp\",\"P\":\"1025\",\"T\":\"I\",\"R\":\"1\",\"V\":\"80\",\"H\":\"port\",\"S\":\"65001\",\"M\":\"1\"}, {\"F\":\"service/time\",\"P\":\"120\",\"T\":\"B\",\"V\":\"1\",\"H\":\"i-time\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/time\",\"P\":\"1042\",\"T\":\"S\",\"R\":\"1\",\"V\":\"+08:00\",\"H\":\"tzone\",\"O\":[{\"-12:00\":\"-12:00\"}, {\"-11:00\":\"-11:00\"}, {\"-10:00\":\"-10:00\"}, {\"-09:00\":\"-09:00\"}, {\"-08:00\":\"-08:00\"}, {\"-07:00\":\"-07:00\"}, {\"-06:00\":\"-06:00\"}, {\"-05:00\":\"-05:00\"}, {\"-04:00\":\"-04:00\"}, {\"-03:30\":\"-03:30\"}, {\"-03:00\":\"-03:00\"}, {\"-02:00\":\"-02:00\"}, {\"-01:00\":\"-01:00\"}, {\"+00:00\":\"+00:00\"}, {\"+01:00\":\"+01:00\"}, {\"+02:00\":\"+02:00\"}, {\"+03:00\":\"+03:00\"}, {\"+03:30\":\"+03:30\"}, {\"+04:00\":\"+04:00\"}, {\"+04:30\":\"+04:30\"}, {\"+05:00\":\"+05:00\"}, {\"+05:30\":\"+05:30\"}, {\"+05:45\":\"+05:45\"}, {\"+06:00\":\"+06:00\"}, {\"+06:30\":\"+06:30\"}, {\"+07:00\":\"+07:00\"}, {\"+08:00\":\"+08:00\"}, {\"+08:45\":\"+08:45\"}, {\"+09:00\":\"+09:00\"}, {\"+09:30\":\"+09:30\"}, {\"+10:00\":\"+10:00\"}, {\"+10:30\":\"+10:30\"}, {\"+11:00\":\"+11:00\"}, {\"+12:00\":\"+12:00\"}, {\"+12:45\":\"+12:45\"}, {\"+13:00\":\"+13:00\"}, {\"+14:00\":\"+14:00\"}]}, {\"F\":\"service/time\",\"P\":\"464\",\"T\":\"S\",\"R\":\"1\",\"V\":\"time.windows.com\",\"S\":\"128\",\"H\":\"t-server\",\"M\":\"0\"}, {\"F\":\"service/time\",\"P\":\"593\",\"T\":\"S\",\"R\":\"1\",\"V\":\"time.google.com\",\"S\":\"128\",\"H\":\"t-server\",\"M\":\"0\"}, {\"F\":\"service/time\",\"P\":\"722\",\"T\":\"S\",\"R\":\"1\",\"V\":\"0.pool.ntp.org\",\"S\":\"128\",\"H\":\"t-server\",\"M\":\"0\"}, {\"F\":\"service/notification\",\"P\":\"1022\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"auto notif\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/notification\",\"P\":\"116\",\"T\":\"B\",\"R\":\"1\",\"V\":\"0\",\"H\":\"notification\",\"O\":[{\"none\":\"0\"}, {\"pushover\":\"1\"}, {\"email\":\"2\"}, {\"line\":\"3\"}, {\"telegram\":\"4\"}, {\"IFTTT\":\"5\"}]}, {\"F\":\"service/notification\",\"P\":\"332\",\"T\":\"S\",\"R\":\"1\",\"V\":\"********\",\"S\":\"63\",\"H\":\"t1\",\"M\":\"0\"}, {\"F\":\"service/notification\",\"P\":\"396\",\"T\":\"S\",\"R\":\"1\",\"V\":\"********\",\"S\":\"63\",\"H\":\"t2\",\"M\":\"0\"}, {\"F\":\"service/notification\",\"P\":\"856\",\"T\":\"S\",\"R\":\"1\",\"V\":\" \",\"S\":\"128\",\"H\":\"ts\",\"M\":\"0\"}, {\"F\":\"system/system\",\"P\":\"461\",\"T\":\"B\",\"V\":\"0\",\"H\":\"targetfw\",\"O\":[{\"repetier\":\"50\"}, {\"marlin\":\"20\"}, {\"smoothieware\":\"40\"}, {\"grbl\":\"10\"}, {\"unknown\":\"0\"}]}, {\"F\":\"system/system\",\"P\":\"112\",\"T\":\"I\",\"V\":\"115200\",\"H\":\"baud\",\"O\":[{\"9600\":\"9600\"}, {\"19200\":\"19200\"}, {\"38400\":\"38400\"}, {\"57600\":\"57600\"}, {\"74880\":\"74880\"}, {\"115200\":\"115200\"}, {\"230400\":\"230400\"}, {\"250000\":\"250000\"}, {\"500000\":\"500000\"}, {\"921600\":\"921600\"}, {\"1958400\":\"1958400\"}]}, {\"F\":\"system/boot\",\"P\":\"320\",\"T\":\"I\",\"V\":\"100\",\"H\":\"bootdelay\",\"S\":\"40000\",\"M\":\"0\"}, {\"F\":\"system/boot\",\"P\":\"1023\",\"T\":\"B\",\"V\":\"0\",\"H\":\"verbose\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"system/outputmsg\",\"P\":\"129\",\"T\":\"B\",\"V\":\"1\",\"H\":\"serial\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"system/outputmsg\",\"P\":\"851\",\"T\":\"B\",\"V\":\"1\",\"H\":\"M117\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"system/outputmsg\",\"P\":\"1006\",\"T\":\"B\",\"V\":\"1\",\"H\":\"telnet\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}] }]}1 - key : Settings\n2 - value: array of data formated like this\n{“F”:“network/network”,“P”:“130”,“T”:“S”,“V”:“esp3d”,“H”:“hostname”,“S”:“32”,“M”:“1”}\nor\n{“F”:“service/notification”,“P”:“1004”,“T”:“B”,“V”:“1”,“H”:“auto notif”,“O”:[{“no”:“0”},{“yes”:“1”}]}\n- F: is filter formated as section/sub-section, if section is same as sub-section, it means no sub-section\r- P: is id (also position reference so it is unique)\r- T: is type of data which can be:\r- S: for string\r- I: for integer\r- B: for Byte\r- A: for IP address / Mask\r- F: for float (only grblHAL)\r- M: for bits mask (only grblHAL)\r- X: for exclusive bitsfield (only grblHAL)\r- V: is current value, if type is string and value is `********`, (8 stars) then it is a password\r- E: is integer for exactess / precision of float/double value (only grblHAL)\r- U: is text unit of value (only grblHAL)\r- H: is text label of value\r- S: is max size if type is string, and max possible value if value is number (byte, integer)\r- M: is min size if type is string, and min possible value if value is number (byte, integer)\r- MS: is additionnal min size if type is string (e.g for password can be 0 or 8, so need additional min size), M should be the more minimal value\rso MS value must be between M and S\r- O: is an array of {label:value} used for possible values in selection or bits labels list\r- R: need restart to be applied\rNote: if Type M and X use O entry to define the label / position, if O is [] then axis label are used according need X, Y, Z, A, B, C\nNote2 : the 2.1 Flag type is no more used, several entries are used instead grouped by sub-section\nIf no json the list is limited to a list of \u003chelp\u003e: \u003cvalue\u003e\nSettings: network/network/hostname: esp3d network/network/radio mode: 5 network/network/radio_boot: 1 network/sta/SSID: NETWORK_SSID network/sta/pwd: ******** network/sta/ip mode: 1 network/sta/ip: 192.168.0.254 network/sta/gw: 192.168.0.254 network/sta/msk: 255.255.255.0 network/sta/DNS: 192.168.0.254 network/sta/sta fallback mode: 5 network/ap/SSID: ESP3D network/ap/pwd: ******** network/ap/ip: 192.168.0.1 network/ap/channel: 11 service/time/i-time: 0 service/time/tzone: +00:00 service/time/t-server: time.windows.com service/time/t-server: time.google.com service/time/t-server: 0.pool.ntp.org service/notification/auto notif: 1 service/notification/notification: 0 service/notification/t1: service/notification/t2: service/notification/ts: system/system/targetfw: 0 system/system/baud: 115200 system/boot/bootdelay: 10000 system/boot/verbose: 0 ok",
    "description": "Get full ESP3D settings",
    "tags": [],
    "title": "[ESP400]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp400/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get full ESP3D settings\nInput [ESP400] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput Passwords are not displayed and replaced by ********\nif json {\"cmd\":\"400\",\"status\":\"ok\",\"data\":[ {\"F\":\"network/network\",\"P\":\"130\",\"T\":\"S\",\"R\":\"1\",\"V\":\"esp3d\",\"H\":\"hostname\" ,\"S\":\"32\", \"M\":\"1\"}, {\"F\":\"network/network\",\"P\":\"0\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"radio mode\",\"O\":[{\"none\":\"0\"}, {\"sta\":\"1\"}, {\"ap\":\"2\"}, {\"setup\":\"5\"}]}, {\"F\":\"network/network\",\"P\":\"1034\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"radio_boot\",\"O\":[{\"no\":\"0\"}, {\"yes\":\"1\"}]}, {\"F\":\"network/sta\",\"P\":\"1\",\"T\":\"S\",\"V\":\"Luc-Lab\",\"S\":\"32\",\"H\":\"SSID\",\"M\":\"1\"}, {\"F\":\"network/sta\",\"P\":\"34\",\"T\":\"S\",\"N\":\"1\",\"MS\":\"0\",\"R\":\"1\",\"V\":\"********\",\"S\":\"64\",\"H\":\"pwd\",\"M\":\"8\"}, {\"F\":\"network/sta\",\"P\":\"99\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"ip mode\",\"O\":[{\"dhcp\":\"1\"}, {\"static\":\"0\"}]}, {\"F\":\"network/sta\",\"P\":\"100\",\"T\":\"A\",\"R\":\"1\",\"V\":\"192.168.0.1\",\"H\":\"ip\"}, {\"F\":\"network/sta\",\"P\":\"108\",\"T\":\"A\",\"R\":\"1\",\"V\":\"192.168.0.1\",\"H\":\"gw\"}, {\"F\":\"network/sta\",\"P\":\"104\",\"T\":\"A\",\"R\":\"1\",\"V\":\"255.255.255.0\",\"H\":\"msk\"}, {\"F\":\"network/sta\",\"P\":\"1029\",\"T\":\"A\",\"R\":\"1\",\"V\":\"192.168.0.1\",\"H\":\"DNS\"}, {\"F\":\"network/sta\",\"P\":\"1035\",\"T\":\"B\",\"R\":\"0\",\"V\":\"5\",\"H\":\"sta fallback mode\",\"O\":[{\"none\":\"0\"}, {\"setup\":\"5\"}]}, {\"F\":\"network/ap\",\"P\":\"218\",\"T\":\"S\",\"R\":\"1\",\"V\":\"ESP3D\",\"S\":\"32\",\"H\":\"SSID\",\"M\":\"1\"}, {\"F\":\"network/ap\",\"P\":\"251\",\"T\":\"S\",\"N\":\"1\",\"MS\":\"0\",\"R\":\"1\",\"V\":\"********\",\"S\":\"64\",\"H\":\"pwd\",\"M\":\"8\"}, {\"F\":\"network/ap\",\"P\":\"316\",\"T\":\"A\",\"R\":\"1\",\"V\":\"192.168.0.1\",\"H\":\"ip\"}, {\"F\":\"network/ap\",\"P\":\"118\",\"T\":\"B\",\"R\":\"1\",\"V\":\"11\",\"H\":\"channel\",\"O\":[{\"1\":\"1\"}, {\"2\":\"2\"}, {\"3\":\"3\"}, {\"4\":\"4\"}, {\"5\":\"5\"}, {\"6\":\"6\"}, {\"7\":\"7\"}, {\"8\":\"8\"}, {\"9\":\"9\"}, {\"10\":\"10\"}, {\"11\":\"11\"}, {\"12\":\"12\"}, {\"13\":\"13\"}, {\"14\":\"14\"}]}, {\"F\":\"service/http\",\"P\":\"328\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"enable\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/http\",\"P\":\"121\",\"T\":\"I\",\"R\":\"1\",\"V\":\"8181\",\"H\":\"port\",\"S\":\"65001\",\"M\":\"1\"}, {\"F\":\"service/telnetp\",\"P\":\"329\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"enable\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/telnetp\",\"P\":\"125\",\"T\":\"I\",\"R\":\"1\",\"V\":\"23\",\"H\":\"port\",\"S\":\"65001\",\"M\":\"1\"}, {\"F\":\"service/webdavp\",\"P\":\"1024\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"enable\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/webdavp\",\"P\":\"1025\",\"T\":\"I\",\"R\":\"1\",\"V\":\"80\",\"H\":\"port\",\"S\":\"65001\",\"M\":\"1\"}, {\"F\":\"service/time\",\"P\":\"120\",\"T\":\"B\",\"V\":\"1\",\"H\":\"i-time\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/time\",\"P\":\"1042\",\"T\":\"S\",\"R\":\"1\",\"V\":\"+08:00\",\"H\":\"tzone\",\"O\":[{\"-12:00\":\"-12:00\"}, {\"-11:00\":\"-11:00\"}, {\"-10:00\":\"-10:00\"}, {\"-09:00\":\"-09:00\"}, {\"-08:00\":\"-08:00\"}, {\"-07:00\":\"-07:00\"}, {\"-06:00\":\"-06:00\"}, {\"-05:00\":\"-05:00\"}, {\"-04:00\":\"-04:00\"}, {\"-03:30\":\"-03:30\"}, {\"-03:00\":\"-03:00\"}, {\"-02:00\":\"-02:00\"}, {\"-01:00\":\"-01:00\"}, {\"+00:00\":\"+00:00\"}, {\"+01:00\":\"+01:00\"}, {\"+02:00\":\"+02:00\"}, {\"+03:00\":\"+03:00\"}, {\"+03:30\":\"+03:30\"}, {\"+04:00\":\"+04:00\"}, {\"+04:30\":\"+04:30\"}, {\"+05:00\":\"+05:00\"}, {\"+05:30\":\"+05:30\"}, {\"+05:45\":\"+05:45\"}, {\"+06:00\":\"+06:00\"}, {\"+06:30\":\"+06:30\"}, {\"+07:00\":\"+07:00\"}, {\"+08:00\":\"+08:00\"}, {\"+08:45\":\"+08:45\"}, {\"+09:00\":\"+09:00\"}, {\"+09:30\":\"+09:30\"}, {\"+10:00\":\"+10:00\"}, {\"+10:30\":\"+10:30\"}, {\"+11:00\":\"+11:00\"}, {\"+12:00\":\"+12:00\"}, {\"+12:45\":\"+12:45\"}, {\"+13:00\":\"+13:00\"}, {\"+14:00\":\"+14:00\"}]}, {\"F\":\"service/time\",\"P\":\"464\",\"T\":\"S\",\"R\":\"1\",\"V\":\"time.windows.com\",\"S\":\"128\",\"H\":\"t-server\",\"M\":\"0\"}, {\"F\":\"service/time\",\"P\":\"593\",\"T\":\"S\",\"R\":\"1\",\"V\":\"time.google.com\",\"S\":\"128\",\"H\":\"t-server\",\"M\":\"0\"}, {\"F\":\"service/time\",\"P\":\"722\",\"T\":\"S\",\"R\":\"1\",\"V\":\"0.pool.ntp.org\",\"S\":\"128\",\"H\":\"t-server\",\"M\":\"0\"}, {\"F\":\"service/notification\",\"P\":\"1022\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"auto notif\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/notification\",\"P\":\"116\",\"T\":\"B\",\"R\":\"1\",\"V\":\"0\",\"H\":\"notification\",\"O\":[{\"none\":\"0\"}, {\"pushover\":\"1\"}, {\"email\":\"2\"}, {\"line\":\"3\"}, {\"telegram\":\"4\"}, {\"IFTTT\":\"5\"}]}, {\"F\":\"service/notification\",\"P\":\"332\",\"T\":\"S\",\"R\":\"1\",\"V\":\"********\",\"S\":\"63\",\"H\":\"t1\",\"M\":\"0\"}, {\"F\":\"service/notification\",\"P\":\"396\",\"T\":\"S\",\"R\":\"1\",\"V\":\"********\",\"S\":\"63\",\"H\":\"t2\",\"M\":\"0\"}, {\"F\":\"service/notification\",\"P\":\"856\",\"T\":\"S\",\"R\":\"1\",\"V\":\" \",\"S\":\"128\",\"H\":\"ts\",\"M\":\"0\"}, {\"F\":\"system/system\",\"P\":\"461\",\"T\":\"B\",\"V\":\"0\",\"H\":\"targetfw\",\"O\":[{\"repetier\":\"50\"}, {\"marlin\":\"20\"}, {\"smoothieware\":\"40\"}, {\"grbl\":\"10\"}, {\"unknown\":\"0\"}]}, {\"F\":\"system/system\",\"P\":\"112\",\"T\":\"I\",\"V\":\"115200\",\"H\":\"baud\",\"O\":[{\"9600\":\"9600\"}, {\"19200\":\"19200\"}, {\"38400\":\"38400\"}, {\"57600\":\"57600\"}, {\"74880\":\"74880\"}, {\"115200\":\"115200\"}, {\"230400\":\"230400\"}, {\"250000\":\"250000\"}, {\"500000\":\"500000\"}, {\"921600\":\"921600\"}, {\"1958400\":\"1958400\"}]}, {\"F\":\"system/boot\",\"P\":\"320\",\"T\":\"I\",\"V\":\"100\",\"H\":\"bootdelay\",\"S\":\"40000\",\"M\":\"0\"}, {\"F\":\"system/boot\",\"P\":\"1023\",\"T\":\"B\",\"V\":\"0\",\"H\":\"verbose\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"system/outputmsg\",\"P\":\"129\",\"T\":\"B\",\"V\":\"1\",\"H\":\"serial\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"system/outputmsg\",\"P\":\"851\",\"T\":\"B\",\"V\":\"1\",\"H\":\"M117\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"system/outputmsg\",\"P\":\"1006\",\"T\":\"B\",\"V\":\"1\",\"H\":\"telnet\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}] }]}1 - key : Settings\n2 - value: array of data formated like this\n{“F”:“network/network”,“P”:“130”,“T”:“S”,“V”:“esp3d”,“H”:“hostname”,“S”:“32”,“M”:“1”}\nor\n{“F”:“service/notification”,“P”:“1004”,“T”:“B”,“V”:“1”,“H”:“auto notif”,“O”:[{“no”:“0”},{“yes”:“1”}]}\n- F: is filter formated as section/sub-section, if section is same as sub-section, it means no sub-section\r- P: is id (also position reference so it is unique)\r- T: is type of data which can be:\r- S: for string\r- I: for integer\r- B: for Byte\r- A: for IP address / Mask\r- F: for float (only grblHAL)\r- M: for bits mask (only grblHAL)\r- X: for exclusive bitsfield (only grblHAL)\r- V: is current value, if type is string and value is `********`, (8 stars) then it is a password\r- E: is integer for exactess / precision of float/double value (only grblHAL)\r- U: is text unit of value (only grblHAL)\r- H: is text label of value\r- S: is max size if type is string, and max possible value if value is number (byte, integer)\r- M: is min size if type is string, and min possible value if value is number (byte, integer)\r- MS: is additionnal min size if type is string (e.g for password can be 0 or 8, so need additional min size), M should be the more minimal value\rso MS value must be between M and S\r- O: is an array of {label:value} used for possible values in selection or bits labels list\r- R: need restart to be applied\rNote: if Type M and X use O entry to define the label / position, if O is [] then axis label are used according need X, Y, Z, A, B, C\nNote2 : the 2.1 Flag type is no more used, several entries are used instead grouped by sub-section\nIf no json the list is limited to a list of \u003chelp\u003e: \u003cvalue\u003e\nSettings: network/network/hostname: esp3d network/network/radio mode: 5 network/network/radio_boot: 1 network/sta/SSID: NETWORK_SSID network/sta/pwd: ******** network/sta/ip mode: 1 network/sta/ip: 192.168.0.254 network/sta/gw: 192.168.0.254 network/sta/msk: 255.255.255.0 network/sta/DNS: 192.168.0.254 network/sta/sta fallback mode: 5 network/ap/SSID: ESP3D network/ap/pwd: ******** network/ap/ip: 192.168.0.1 network/ap/channel: 11 service/time/i-time: 0 service/time/tzone: +00:00 service/time/t-server: time.windows.com service/time/t-server: time.google.com service/time/t-server: 0.pool.ntp.org service/notification/auto notif: 1 service/notification/notification: 0 service/notification/t1: service/notification/t2: service/notification/ts: system/system/targetfw: 0 system/system/baud: 115200 system/boot/bootdelay: 10000 system/boot/verbose: 0 ok",
    "description": "Get full ESP3D settings",
    "tags": [],
    "title": "[ESP400]",
    "uri": "/esp3d/v3.x/documentation/commands/esp400/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get full ESP3D settings\nInput [ESP400] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput Passwords are not displayed and replaced by ********\nif json {\"cmd\":\"400\",\"status\":\"ok\",\"data\":[ {\"F\":\"network/network\",\"P\":\"130\",\"T\":\"S\",\"R\":\"1\",\"V\":\"esp3d\",\"H\":\"hostname\" ,\"S\":\"32\", \"M\":\"1\"}, {\"F\":\"network/network\",\"P\":\"0\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"radio mode\",\"O\":[{\"none\":\"0\"}, {\"sta\":\"1\"}, {\"ap\":\"2\"}, {\"setup\":\"5\"}]}, {\"F\":\"network/network\",\"P\":\"1034\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"radio_boot\",\"O\":[{\"no\":\"0\"}, {\"yes\":\"1\"}]}, {\"F\":\"network/sta\",\"P\":\"1\",\"T\":\"S\",\"V\":\"Luc-Lab\",\"S\":\"32\",\"H\":\"SSID\",\"M\":\"1\"}, {\"F\":\"network/sta\",\"P\":\"34\",\"T\":\"S\",\"N\":\"1\",\"MS\":\"0\",\"R\":\"1\",\"V\":\"********\",\"S\":\"64\",\"H\":\"pwd\",\"M\":\"8\"}, {\"F\":\"network/sta\",\"P\":\"99\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"ip mode\",\"O\":[{\"dhcp\":\"1\"}, {\"static\":\"0\"}]}, {\"F\":\"network/sta\",\"P\":\"100\",\"T\":\"A\",\"R\":\"1\",\"V\":\"192.168.0.1\",\"H\":\"ip\"}, {\"F\":\"network/sta\",\"P\":\"108\",\"T\":\"A\",\"R\":\"1\",\"V\":\"192.168.0.1\",\"H\":\"gw\"}, {\"F\":\"network/sta\",\"P\":\"104\",\"T\":\"A\",\"R\":\"1\",\"V\":\"255.255.255.0\",\"H\":\"msk\"}, {\"F\":\"network/sta\",\"P\":\"1029\",\"T\":\"A\",\"R\":\"1\",\"V\":\"192.168.0.1\",\"H\":\"DNS\"}, {\"F\":\"network/sta\",\"P\":\"1035\",\"T\":\"B\",\"R\":\"0\",\"V\":\"5\",\"H\":\"sta fallback mode\",\"O\":[{\"none\":\"0\"}, {\"setup\":\"5\"}]}, {\"F\":\"network/ap\",\"P\":\"218\",\"T\":\"S\",\"R\":\"1\",\"V\":\"ESP3D\",\"S\":\"32\",\"H\":\"SSID\",\"M\":\"1\"}, {\"F\":\"network/ap\",\"P\":\"251\",\"T\":\"S\",\"N\":\"1\",\"MS\":\"0\",\"R\":\"1\",\"V\":\"********\",\"S\":\"64\",\"H\":\"pwd\",\"M\":\"8\"}, {\"F\":\"network/ap\",\"P\":\"316\",\"T\":\"A\",\"R\":\"1\",\"V\":\"192.168.0.1\",\"H\":\"ip\"}, {\"F\":\"network/ap\",\"P\":\"118\",\"T\":\"B\",\"R\":\"1\",\"V\":\"11\",\"H\":\"channel\",\"O\":[{\"1\":\"1\"}, {\"2\":\"2\"}, {\"3\":\"3\"}, {\"4\":\"4\"}, {\"5\":\"5\"}, {\"6\":\"6\"}, {\"7\":\"7\"}, {\"8\":\"8\"}, {\"9\":\"9\"}, {\"10\":\"10\"}, {\"11\":\"11\"}, {\"12\":\"12\"}, {\"13\":\"13\"}, {\"14\":\"14\"}]}, {\"F\":\"service/http\",\"P\":\"328\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"enable\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/http\",\"P\":\"121\",\"T\":\"I\",\"R\":\"1\",\"V\":\"8181\",\"H\":\"port\",\"S\":\"65001\",\"M\":\"1\"}, {\"F\":\"service/telnetp\",\"P\":\"329\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"enable\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/telnetp\",\"P\":\"125\",\"T\":\"I\",\"R\":\"1\",\"V\":\"23\",\"H\":\"port\",\"S\":\"65001\",\"M\":\"1\"}, {\"F\":\"service/webdavp\",\"P\":\"1024\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"enable\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/webdavp\",\"P\":\"1025\",\"T\":\"I\",\"R\":\"1\",\"V\":\"80\",\"H\":\"port\",\"S\":\"65001\",\"M\":\"1\"}, {\"F\":\"service/time\",\"P\":\"120\",\"T\":\"B\",\"V\":\"1\",\"H\":\"i-time\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/time\",\"P\":\"1042\",\"T\":\"S\",\"R\":\"1\",\"V\":\"+08:00\",\"H\":\"tzone\",\"O\":[{\"-12:00\":\"-12:00\"}, {\"-11:00\":\"-11:00\"}, {\"-10:00\":\"-10:00\"}, {\"-09:00\":\"-09:00\"}, {\"-08:00\":\"-08:00\"}, {\"-07:00\":\"-07:00\"}, {\"-06:00\":\"-06:00\"}, {\"-05:00\":\"-05:00\"}, {\"-04:00\":\"-04:00\"}, {\"-03:30\":\"-03:30\"}, {\"-03:00\":\"-03:00\"}, {\"-02:00\":\"-02:00\"}, {\"-01:00\":\"-01:00\"}, {\"+00:00\":\"+00:00\"}, {\"+01:00\":\"+01:00\"}, {\"+02:00\":\"+02:00\"}, {\"+03:00\":\"+03:00\"}, {\"+03:30\":\"+03:30\"}, {\"+04:00\":\"+04:00\"}, {\"+04:30\":\"+04:30\"}, {\"+05:00\":\"+05:00\"}, {\"+05:30\":\"+05:30\"}, {\"+05:45\":\"+05:45\"}, {\"+06:00\":\"+06:00\"}, {\"+06:30\":\"+06:30\"}, {\"+07:00\":\"+07:00\"}, {\"+08:00\":\"+08:00\"}, {\"+08:45\":\"+08:45\"}, {\"+09:00\":\"+09:00\"}, {\"+09:30\":\"+09:30\"}, {\"+10:00\":\"+10:00\"}, {\"+10:30\":\"+10:30\"}, {\"+11:00\":\"+11:00\"}, {\"+12:00\":\"+12:00\"}, {\"+12:45\":\"+12:45\"}, {\"+13:00\":\"+13:00\"}, {\"+14:00\":\"+14:00\"}]}, {\"F\":\"service/time\",\"P\":\"464\",\"T\":\"S\",\"R\":\"1\",\"V\":\"time.windows.com\",\"S\":\"128\",\"H\":\"t-server\",\"M\":\"0\"}, {\"F\":\"service/time\",\"P\":\"593\",\"T\":\"S\",\"R\":\"1\",\"V\":\"time.google.com\",\"S\":\"128\",\"H\":\"t-server\",\"M\":\"0\"}, {\"F\":\"service/time\",\"P\":\"722\",\"T\":\"S\",\"R\":\"1\",\"V\":\"0.pool.ntp.org\",\"S\":\"128\",\"H\":\"t-server\",\"M\":\"0\"}, {\"F\":\"service/notification\",\"P\":\"1022\",\"T\":\"B\",\"R\":\"1\",\"V\":\"1\",\"H\":\"auto notif\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"service/notification\",\"P\":\"116\",\"T\":\"B\",\"R\":\"1\",\"V\":\"0\",\"H\":\"notification\",\"O\":[{\"none\":\"0\"}, {\"pushover\":\"1\"}, {\"email\":\"2\"}, {\"line\":\"3\"}, {\"telegram\":\"4\"}, {\"IFTTT\":\"5\"}]}, {\"F\":\"service/notification\",\"P\":\"332\",\"T\":\"S\",\"R\":\"1\",\"V\":\"********\",\"S\":\"63\",\"H\":\"t1\",\"M\":\"0\"}, {\"F\":\"service/notification\",\"P\":\"396\",\"T\":\"S\",\"R\":\"1\",\"V\":\"********\",\"S\":\"63\",\"H\":\"t2\",\"M\":\"0\"}, {\"F\":\"service/notification\",\"P\":\"856\",\"T\":\"S\",\"R\":\"1\",\"V\":\" \",\"S\":\"128\",\"H\":\"ts\",\"M\":\"0\"}, {\"F\":\"system/system\",\"P\":\"461\",\"T\":\"B\",\"V\":\"0\",\"H\":\"targetfw\",\"O\":[{\"repetier\":\"50\"}, {\"marlin\":\"20\"}, {\"smoothieware\":\"40\"}, {\"grbl\":\"10\"}, {\"unknown\":\"0\"}]}, {\"F\":\"system/system\",\"P\":\"112\",\"T\":\"I\",\"V\":\"115200\",\"H\":\"baud\",\"O\":[{\"9600\":\"9600\"}, {\"19200\":\"19200\"}, {\"38400\":\"38400\"}, {\"57600\":\"57600\"}, {\"74880\":\"74880\"}, {\"115200\":\"115200\"}, {\"230400\":\"230400\"}, {\"250000\":\"250000\"}, {\"500000\":\"500000\"}, {\"921600\":\"921600\"}, {\"1958400\":\"1958400\"}]}, {\"F\":\"system/boot\",\"P\":\"320\",\"T\":\"I\",\"V\":\"100\",\"H\":\"bootdelay\",\"S\":\"40000\",\"M\":\"0\"}, {\"F\":\"system/boot\",\"P\":\"1023\",\"T\":\"B\",\"V\":\"0\",\"H\":\"verbose\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"system/outputmsg\",\"P\":\"129\",\"T\":\"B\",\"V\":\"1\",\"H\":\"serial\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"system/outputmsg\",\"P\":\"851\",\"T\":\"B\",\"V\":\"1\",\"H\":\"M117\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}]}, {\"F\":\"system/outputmsg\",\"P\":\"1006\",\"T\":\"B\",\"V\":\"1\",\"H\":\"telnet\",\"O\":[{\"no\":\"0\"},{\"yes\":\"1\"}] }]}1 - key : Settings\n2 - value: array of data formated like this\n{“F”:“network/network”,“P”:“130”,“T”:“S”,“V”:“esp3d”,“H”:“hostname”,“S”:“32”,“M”:“1”}\nor\n{“F”:“service/notification”,“P”:“1004”,“T”:“B”,“V”:“1”,“H”:“auto notif”,“O”:[{“no”:“0”},{“yes”:“1”}]}\n- F: is filter formated as section/sub-section, if section is same as sub-section, it means no sub-section\r- P: is id (also position reference so it is unique)\r- T: is type of data which can be:\r- S: for string\r- I: for integer\r- B: for Byte\r- A: for IP address / Mask\r- F: for float (only grblHAL)\r- M: for bits mask (only grblHAL)\r- X: for exclusive bitsfield (only grblHAL)\r- V: is current value, if type is string and value is `********`, (8 stars) then it is a password\r- E: is integer for exactess / precision of float/double value (only grblHAL)\r- U: is text unit of value (only grblHAL)\r- H: is text label of value\r- S: is max size if type is string, and max possible value if value is number (byte, integer)\r- M: is min size if type is string, and min possible value if value is number (byte, integer)\r- MS: is additionnal min size if type is string (e.g for password can be 0 or 8, so need additional min size), M should be the more minimal value\rso MS value must be between M and S\r- O: is an array of {label:value} used for possible values in selection or bits labels list\r- R: need restart to be applied\rNote: if Type M and X use O entry to define the label / position, if O is [] then axis label are used according need X, Y, Z, A, B, C\nNote2 : the 2.1 Flag type is no more used, several entries are used instead grouped by sub-section\nIf no json the list is limited to a list of \u003chelp\u003e: \u003cvalue\u003e\nSettings: network/network/hostname: esp3d network/network/radio mode: 5 network/network/radio_boot: 1 network/sta/SSID: NETWORK_SSID network/sta/pwd: ******** network/sta/ip mode: 1 network/sta/ip: 192.168.0.254 network/sta/gw: 192.168.0.254 network/sta/msk: 255.255.255.0 network/sta/DNS: 192.168.0.254 network/sta/sta fallback mode: 5 network/ap/SSID: ESP3D network/ap/pwd: ******** network/ap/ip: 192.168.0.1 network/ap/channel: 11 service/time/i-time: 0 service/time/tzone: +00:00 service/time/t-server: time.windows.com service/time/t-server: time.google.com service/time/t-server: 0.pool.ntp.org service/notification/auto notif: 1 service/notification/notification: 0 service/notification/t1: service/notification/t2: service/notification/ts: system/system/targetfw: 0 system/system/baud: 115200 system/boot/bootdelay: 10000 system/boot/verbose: 0 ok",
    "description": "Get full ESP3D settings",
    "tags": [],
    "title": "[ESP400]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp400/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set ESP3D settings\nInput [ESP401]\u003cP=id\u003e \u003cT=type\u003e \u003cV=value\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nP\nP is the id or position in EEPROM of the setting to change T * T is the type of the setting to change * T can be: - S: for string - I: for integer - B: for Byte - A: for IP address / Mask - F: for float (only grblHAL) - M: for bits mask (only grblHAL) - X: for exclusive bitsfield (only grblHAL)\nV * V is the value to set if value has space add \\`` in front of space to not be seen as separator\re.g: [ESP401]P=1 T=S V=My\\ SSID json`\nOutput In json format { \"cmd\":\"401\", \"status\":\"ok\", \"data\":\"1\" } cmd Id of requested command, should be 401 status status of command, should be ok data content of response, here the id/position of the setting changed ",
    "description": "Set ESP3D settings",
    "tags": [],
    "title": "[ESP401]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp401/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set ESP3D settings\nInput [ESP401]\u003cP=id\u003e \u003cT=type\u003e \u003cV=value\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nP\nP is the id or position in EEPROM of the setting to change T * T is the type of the setting to change * T can be: - S: for string - I: for integer - B: for Byte - A: for IP address / Mask - F: for float (only grblHAL) - M: for bits mask (only grblHAL) - X: for exclusive bitsfield (only grblHAL)\nV * V is the value to set if value has space add \\`` in front of space to not be seen as separator\re.g: [ESP401]P=1 T=S V=My\\ SSID json`\nOutput In json format { \"cmd\":\"401\", \"status\":\"ok\", \"data\":\"1\" } cmd Id of requested command, should be 401 status status of command, should be ok data content of response, here the id/position of the setting changed ",
    "description": "Set ESP3D settings",
    "tags": [],
    "title": "[ESP401]",
    "uri": "/esp3d/v3.x/documentation/commands/esp401/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set ESP3D settings\nInput [ESP401]\u003cP=id\u003e \u003cT=type\u003e \u003cV=value\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nP\nP is the id or position in EEPROM of the setting to change T * T is the type of the setting to change * T can be: - S: for string - I: for integer - B: for Byte - A: for IP address / Mask - F: for float (only grblHAL) - M: for bits mask (only grblHAL) - X: for exclusive bitsfield (only grblHAL)\nV * V is the value to set if value has space add \\`` in front of space to not be seen as separator\re.g: [ESP401]P=1 T=S V=My\\ SSID json`\nOutput In json format { \"cmd\":\"401\", \"status\":\"ok\", \"data\":\"1\" } cmd Id of requested command, should be 401 status status of command, should be ok data content of response, here the id/position of the setting changed ",
    "description": "Set ESP3D settings",
    "tags": [],
    "title": "[ESP401]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp401/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set SD updater check at boot time\nInput [ESP402]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nstate\nif state is empty, it will display current state if state is not empty, it will set the state ON, OFF Output In json format { \"cmd\":\"402\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 402 status status of command, should be ok data content of response, here the state ",
    "description": "Get/Set SD updater check at boot time",
    "tags": [],
    "title": "[ESP402]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp402/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set SD updater check at boot time\nInput [ESP402]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nstate\nif state is empty, it will display current state if state is not empty, it will set the state ON, OFF Output In json format { \"cmd\":\"402\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 402 status status of command, should be ok data content of response, here the state ",
    "description": "Get/Set SD updater check at boot time",
    "tags": [],
    "title": "[ESP402]",
    "uri": "/esp3d/v3.x/documentation/commands/esp402/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set SD updater check at boot time\nInput [ESP402]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nstate\nif state is empty, it will display current state if state is not empty, it will set the state ON, OFF Output In json format { \"cmd\":\"402\", \"status\":\"ok\", \"data\":\"OFF\" } cmd Id of requested command, should be 402 status status of command, should be ok data content of response, here the state ",
    "description": "Get/Set SD updater check at boot time",
    "tags": [],
    "title": "[ESP402]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp402/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "List all AP detected around, if signal is too low, AP is not listed to avoid connection problems.\nInput [ESP410] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"410\", \"status\":\"ok\", \"data\":[ {\"SSID\":\"Luc-Lab\",\"SIGNAL\":\"100\",\"IS_PROTECTED\":\"1\"}, {\"SSID\":\"CHT0573(Mesh)\",\"SIGNAL\":\"100\",\"IS_PROTECTED\":\"1\"}, {\"SSID\":\"[LG_AirPurifier]\",\"SIGNAL\":\"48\",\"IS_PROTECTED\":\"1\"}, ] } cmd Id of requested command, should be 410 status status of command, should be ok data content of response, here the list of AP detected with signal strength and if protected or not plain text format Start Scan Luc-Lab 100% Secure CHT0573(Mesh) 100% Secure [LG_AirPurifier] 46% Secure End Scan",
    "description": "List all AP detected around",
    "tags": [],
    "title": "[ESP410]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp410/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "List all AP detected around, if signal is too low, AP is not listed to avoid connection problems.\nInput [ESP410] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"410\", \"status\":\"ok\", \"data\":[ {\"SSID\":\"Luc-Lab\",\"SIGNAL\":\"100\",\"IS_PROTECTED\":\"1\"}, {\"SSID\":\"CHT0573(Mesh)\",\"SIGNAL\":\"100\",\"IS_PROTECTED\":\"1\"}, {\"SSID\":\"[LG_AirPurifier]\",\"SIGNAL\":\"48\",\"IS_PROTECTED\":\"1\"}, ] } cmd Id of requested command, should be 410 status status of command, should be ok data content of response, here the list of AP detected with signal strength and if protected or not plain text format Start Scan Luc-Lab 100% Secure CHT0573(Mesh) 100% Secure [LG_AirPurifier] 46% Secure End Scan",
    "description": "List all AP detected around",
    "tags": [],
    "title": "[ESP410]",
    "uri": "/esp3d/v3.x/documentation/commands/esp410/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "List all AP detected around, if signal is too low, AP is not listed to avoid connection problems.\nInput [ESP410] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"410\", \"status\":\"ok\", \"data\":[ {\"SSID\":\"Luc-Lab\",\"SIGNAL\":\"100\",\"IS_PROTECTED\":\"1\"}, {\"SSID\":\"CHT0573(Mesh)\",\"SIGNAL\":\"100\",\"IS_PROTECTED\":\"1\"}, {\"SSID\":\"[LG_AirPurifier]\",\"SIGNAL\":\"48\",\"IS_PROTECTED\":\"1\"}, ] } cmd Id of requested command, should be 410 status status of command, should be ok data content of response, here the list of AP detected with signal strength and if protected or not plain text format Start Scan Luc-Lab 100% Secure CHT0573(Mesh) 100% Secure [LG_AirPurifier] 46% Secure End Scan",
    "description": "List all AP detected around",
    "tags": [],
    "title": "[ESP410]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp410/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get ESP3D current status\nInput [ESP420] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput { \"cmd\":\"420\", \"status\":\"ok\", \"data\":[ {\"id\":\"chip id\",\"value\":\"11111\"}, {\"id\":\"CPU Freq\",\"value\":\"240Mhz\"}, {\"id\":\"CPU Temp\",\"value\":\"72.8C\"}, {\"id\":\"free mem\",\"value\":\"232.43 KB\"}, {\"id\":\"SDK\",\"value\":\"v4.4.4\"}, {\"id\":\"flash size\",\"value\":\"4.00 MB\"}, {\"id\":\"FS type\",\"value\":\"LittleFS\"}, {\"id\":\"FS usage\",\"value\":\"112.00 KB/128.00 KB\"}, {\"id\":\"baud\",\"value\":\"115200\"}, {\"id\":\"sleep mode\",\"value\":\"none\"}, {\"id\":\"wifi\",\"value\":\"ON\"}, {\"id\":\"hostname\",\"value\":\"esp3d\"}, {\"id\":\"wifi mode\",\"value\":\"ap\"}, {\"id\":\"mac\",\"value\":\"D4:D4:D4:D4:D4:D4\"}, {\"id\":\"SSID\",\"value\":\"ESP3D\"}, {\"id\":\"visible\",\"value\":\"yes\"}, {\"id\":\"authentication\",\"value\":\"WPA2\"}, {\"id\":\"DHCP Server\",\"value\":\"ON\"}, {\"id\":\"ip\",\"value\":\"192.168.0.1\"}, {\"id\":\"gw\",\"value\":\"192.168.0.1\"}, {\"id\":\"msk\",\"value\":\"255.255.255.0\"}, {\"id\":\"clients\",\"value\":\"0\"},{\"id\":\"sta\",\"value\":\"OFF\"}, {\"id\":\"mac\",\"value\":\"D4:D4:D4:D4:D4:D4\"}, {\"id\":\"ntp\",\"value\":\"OFF\"}, {\"id\":\"serial\",\"value\":\"ON\"}, {\"id\":\"notification\",\"value\":\"ON (none)\"}, {\"id\":\"targetfw\",\"value\":\"unknown\"}, {\"id\":\"FW ver\",\"value\":\"3.0.0.a225\"}, {\"id\":\"FW arch\",\"value\":\"ESP32\"}]} cmd Id of requested command, should be 420 status status of command, should be ok data content of response, where each status is a key/value pair of id/value plain text format Configuration: chip id: 1010100 CPU Freq: 240Mhz CPU Temp: 72.8C free mem: 232.47 KB SDK: v4.4.4 flash size: 4.00 MB FS type: LittleFS FS usage: 112.00 KB/128.00 KB baud: 115200 sleep mode: none wifi: ON hostname: esp3d wifi mode: ap mac: D4:D4:D4:D4:D4:D4 SSID: ESP3D visible: yes authentication: WPA2 DHCP Server: ON ip: 192.168.0.1 gw: 192.168.0.1 msk: 255.255.255.0 clients: 0 sta: OFF mac: D4:D4:D4:D4:D4:D4 ntp: OFF serial: ON notification: ON (none) targetfw: unknown FW ver: 3.0.0.a225 FW arch: ESP32 ok",
    "description": "Get ESP3D current status",
    "tags": [],
    "title": "[ESP420]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp420/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get ESP3D current status\nInput [ESP420] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput { \"cmd\":\"420\", \"status\":\"ok\", \"data\":[ {\"id\":\"chip id\",\"value\":\"11111\"}, {\"id\":\"CPU Freq\",\"value\":\"240Mhz\"}, {\"id\":\"CPU Temp\",\"value\":\"72.8C\"}, {\"id\":\"free mem\",\"value\":\"232.43 KB\"}, {\"id\":\"SDK\",\"value\":\"v4.4.4\"}, {\"id\":\"flash size\",\"value\":\"4.00 MB\"}, {\"id\":\"FS type\",\"value\":\"LittleFS\"}, {\"id\":\"FS usage\",\"value\":\"112.00 KB/128.00 KB\"}, {\"id\":\"baud\",\"value\":\"115200\"}, {\"id\":\"sleep mode\",\"value\":\"none\"}, {\"id\":\"wifi\",\"value\":\"ON\"}, {\"id\":\"hostname\",\"value\":\"esp3d\"}, {\"id\":\"wifi mode\",\"value\":\"ap\"}, {\"id\":\"mac\",\"value\":\"D4:D4:D4:D4:D4:D4\"}, {\"id\":\"SSID\",\"value\":\"ESP3D\"}, {\"id\":\"visible\",\"value\":\"yes\"}, {\"id\":\"authentication\",\"value\":\"WPA2\"}, {\"id\":\"DHCP Server\",\"value\":\"ON\"}, {\"id\":\"ip\",\"value\":\"192.168.0.1\"}, {\"id\":\"gw\",\"value\":\"192.168.0.1\"}, {\"id\":\"msk\",\"value\":\"255.255.255.0\"}, {\"id\":\"clients\",\"value\":\"0\"},{\"id\":\"sta\",\"value\":\"OFF\"}, {\"id\":\"mac\",\"value\":\"D4:D4:D4:D4:D4:D4\"}, {\"id\":\"ntp\",\"value\":\"OFF\"}, {\"id\":\"serial\",\"value\":\"ON\"}, {\"id\":\"notification\",\"value\":\"ON (none)\"}, {\"id\":\"targetfw\",\"value\":\"unknown\"}, {\"id\":\"FW ver\",\"value\":\"3.0.0.a225\"}, {\"id\":\"FW arch\",\"value\":\"ESP32\"}]} cmd Id of requested command, should be 420 status status of command, should be ok data content of response, where each status is a key/value pair of id/value plain text format Configuration: chip id: 1010100 CPU Freq: 240Mhz CPU Temp: 72.8C free mem: 232.47 KB SDK: v4.4.4 flash size: 4.00 MB FS type: LittleFS FS usage: 112.00 KB/128.00 KB baud: 115200 sleep mode: none wifi: ON hostname: esp3d wifi mode: ap mac: D4:D4:D4:D4:D4:D4 SSID: ESP3D visible: yes authentication: WPA2 DHCP Server: ON ip: 192.168.0.1 gw: 192.168.0.1 msk: 255.255.255.0 clients: 0 sta: OFF mac: D4:D4:D4:D4:D4:D4 ntp: OFF serial: ON notification: ON (none) targetfw: unknown FW ver: 3.0.0.a225 FW arch: ESP32 ok",
    "description": "Get ESP3D current status",
    "tags": [],
    "title": "[ESP420]",
    "uri": "/esp3d/v3.x/documentation/commands/esp420/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get ESP3D current status\nInput [ESP420] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput { \"cmd\":\"420\", \"status\":\"ok\", \"data\":[ {\"id\":\"chip id\",\"value\":\"11111\"}, {\"id\":\"CPU Freq\",\"value\":\"240Mhz\"}, {\"id\":\"CPU Temp\",\"value\":\"72.8C\"}, {\"id\":\"free mem\",\"value\":\"232.43 KB\"}, {\"id\":\"SDK\",\"value\":\"v4.4.4\"}, {\"id\":\"flash size\",\"value\":\"4.00 MB\"}, {\"id\":\"FS type\",\"value\":\"LittleFS\"}, {\"id\":\"FS usage\",\"value\":\"112.00 KB/128.00 KB\"}, {\"id\":\"baud\",\"value\":\"115200\"}, {\"id\":\"sleep mode\",\"value\":\"none\"}, {\"id\":\"wifi\",\"value\":\"ON\"}, {\"id\":\"hostname\",\"value\":\"esp3d\"}, {\"id\":\"wifi mode\",\"value\":\"ap\"}, {\"id\":\"mac\",\"value\":\"D4:D4:D4:D4:D4:D4\"}, {\"id\":\"SSID\",\"value\":\"ESP3D\"}, {\"id\":\"visible\",\"value\":\"yes\"}, {\"id\":\"authentication\",\"value\":\"WPA2\"}, {\"id\":\"DHCP Server\",\"value\":\"ON\"}, {\"id\":\"ip\",\"value\":\"192.168.0.1\"}, {\"id\":\"gw\",\"value\":\"192.168.0.1\"}, {\"id\":\"msk\",\"value\":\"255.255.255.0\"}, {\"id\":\"clients\",\"value\":\"0\"},{\"id\":\"sta\",\"value\":\"OFF\"}, {\"id\":\"mac\",\"value\":\"D4:D4:D4:D4:D4:D4\"}, {\"id\":\"ntp\",\"value\":\"OFF\"}, {\"id\":\"serial\",\"value\":\"ON\"}, {\"id\":\"notification\",\"value\":\"ON (none)\"}, {\"id\":\"targetfw\",\"value\":\"unknown\"}, {\"id\":\"FW ver\",\"value\":\"3.0.0.a225\"}, {\"id\":\"FW arch\",\"value\":\"ESP32\"}]} cmd Id of requested command, should be 420 status status of command, should be ok data content of response, where each status is a key/value pair of id/value plain text format Configuration: chip id: 1010100 CPU Freq: 240Mhz CPU Temp: 72.8C free mem: 232.47 KB SDK: v4.4.4 flash size: 4.00 MB FS type: LittleFS FS usage: 112.00 KB/128.00 KB baud: 115200 sleep mode: none wifi: ON hostname: esp3d wifi mode: ap mac: D4:D4:D4:D4:D4:D4 SSID: ESP3D visible: yes authentication: WPA2 DHCP Server: ON ip: 192.168.0.1 gw: 192.168.0.1 msk: 255.255.255.0 clients: 0 sta: OFF mac: D4:D4:D4:D4:D4:D4 ntp: OFF serial: ON notification: ON (none) targetfw: unknown FW ver: 3.0.0.a225 FW arch: ESP32 ok",
    "description": "Get ESP3D current status",
    "tags": [],
    "title": "[ESP420]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp420/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set ESP3D state\nInput [ESP444]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nstate\nRESET to reset all settings to default RESTART to restart ESP3D Output In json format { \"cmd\":\"444\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 444 status status of command, should be ok data content of response, here ok ",
    "description": "Set ESP3D state",
    "tags": [],
    "title": "[ESP444]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp444/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set ESP3D state\nInput [ESP444]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nstate\nRESET to reset all settings to default RESTART to restart ESP3D Output In json format { \"cmd\":\"444\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 444 status status of command, should be ok data content of response, here ok ",
    "description": "Set ESP3D state",
    "tags": [],
    "title": "[ESP444]",
    "uri": "/esp3d/v3.x/documentation/commands/esp444/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set ESP3D state\nInput [ESP444]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nstate\nRESET to reset all settings to default RESTART to restart ESP3D Output In json format { \"cmd\":\"444\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 444 status status of command, should be ok data content of response, here ok ",
    "description": "Set ESP3D state",
    "tags": [],
    "title": "[ESP444]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp444/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "List available ESP3D modules/ ESP3D related devices around\nInput [ESP450] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"450\", \"status\":\"ok\", \"data\":[ { \"Hostname\":\"esp3d-tft\", \"IP\":\"192.168.1.108\", \"port\":\"80\", \"TxT\":[ {\"key\":\"version\",\"value\":\"1.0.0.a18\"}, {\"key\":\"firmware\",\"value\":\"ESP3D-TFT\"} ] } ] } cmd Id of requested command, should be 450 status status of command, should be ok data content of response, here the list of modules detected with hostname, IP, port and TXT record plain text format Start Scan esp3d-tft (192.168.1.108:80) version=1.0.0.a18,firmware=ESP3D-TFT End Scan",
    "description": "List available ESP3D modules/ ESP3D related devices around",
    "tags": [],
    "title": "[ESP450]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp450/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "List available ESP3D modules/ ESP3D related devices around\nInput [ESP450] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"450\", \"status\":\"ok\", \"data\":[ { \"Hostname\":\"esp3d-tft\", \"IP\":\"192.168.1.108\", \"port\":\"80\", \"TxT\":[ {\"key\":\"version\",\"value\":\"1.0.0.a18\"}, {\"key\":\"firmware\",\"value\":\"ESP3D-TFT\"} ] } ] } cmd Id of requested command, should be 450 status status of command, should be ok data content of response, here the list of modules detected with hostname, IP, port and TXT record plain text format Start Scan esp3d-tft (192.168.1.108:80) version=1.0.0.a18,firmware=ESP3D-TFT End Scan",
    "description": "List available ESP3D modules/ ESP3D related devices around",
    "tags": [],
    "title": "[ESP450]",
    "uri": "/esp3d/v3.x/documentation/commands/esp450/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "List available ESP3D modules/ ESP3D related devices around\nInput [ESP450] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"450\", \"status\":\"ok\", \"data\":[ { \"Hostname\":\"esp3d-tft\", \"IP\":\"192.168.1.108\", \"port\":\"80\", \"TxT\":[ {\"key\":\"version\",\"value\":\"1.0.0.a18\"}, {\"key\":\"firmware\",\"value\":\"ESP3D-TFT\"} ] } ] } cmd Id of requested command, should be 450 status status of command, should be ok data content of response, here the list of modules detected with hostname, IP, port and TXT record plain text format Start Scan esp3d-tft (192.168.1.108:80) version=1.0.0.a18,firmware=ESP3D-TFT End Scan",
    "description": "List available ESP3D modules/ ESP3D related devices around",
    "tags": [],
    "title": "[ESP450]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp450/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "List available ESP3D modules/ ESP3D related devices around\nInput [ESP460]DUMP json=\u003cno\u003e \u003cpwd=admin/user\u003e \u003clanguage code\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nDUMP\nif DUMP is not empty, it will display the complet language language reference language code\nif language code is not empty, it will set the language code if language code is not empty, it will display the current language code (default, fr, cn_tw, etc) the code will be used to build a filename ui_\u003clanguage code\u003e.lng which should contain the language reference translated Output In json format { \"cmd\":\"460\", \"status\":\"ok\", \"data\":\"fr\" } cmd Id of requested command, should be 460 status status of command, should be ok data content of response, here the language code fr ",
    "description": " Get/Set UI language",
    "tags": [],
    "title": "[ESP460]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp460/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get authentication status\nInput [ESP500] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"500\", \"status\":\"ok\", \"data\":\"admin\" } cmd Id of requested command, should be 500 status status of command, should be ok data content of response, here the current user authenticated plain text format admin",
    "description": "Get authentication status",
    "tags": [],
    "title": "[ESP500]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp500/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get authentication status\nInput [ESP500] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"500\", \"status\":\"ok\", \"data\":\"admin\" } cmd Id of requested command, should be 500 status status of command, should be ok data content of response, here the current user authenticated plain text format admin",
    "description": "Get authentication status",
    "tags": [],
    "title": "[ESP500]",
    "uri": "/esp3d/v3.x/documentation/commands/esp500/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get authentication status\nInput [ESP500] json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"500\", \"status\":\"ok\", \"data\":\"admin\" } cmd Id of requested command, should be 500 status status of command, should be ok data content of response, here the current user authenticated plain text format admin",
    "description": "Get authentication status",
    "tags": [],
    "title": "[ESP500]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp500/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set/display session time out\nInput [ESP510]\u003ctimeout\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\ntimeout\nif timeout is empty, it will display current timeout (0~255 minutes), 0 means disable timeout if timeout is not empty, it will set the timeout pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"510\", \"status\":\"ok\", \"data\":\"10\" } cmd Id of requested command, should be 510 status status of command, should be ok data content of response, here the current timeout plain text format 10",
    "description": "Set/Get session timeout",
    "tags": [],
    "title": "[ESP510]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp510/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set/display session time out\nInput [ESP510]\u003ctimeout\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\ntimeout\nif timeout is empty, it will display current timeout (0~255 minutes), 0 means disable timeout if timeout is not empty, it will set the timeout pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"510\", \"status\":\"ok\", \"data\":\"10\" } cmd Id of requested command, should be 510 status status of command, should be ok data content of response, here the current timeout plain text format 10",
    "description": "Set/Get session timeout",
    "tags": [],
    "title": "[ESP510]",
    "uri": "/esp3d/v3.x/documentation/commands/esp510/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set/display session time out\nInput [ESP510]\u003ctimeout\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\ntimeout\nif timeout is empty, it will display current timeout (0~255 minutes), 0 means disable timeout if timeout is not empty, it will set the timeout pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"510\", \"status\":\"ok\", \"data\":\"10\" } cmd Id of requested command, should be 510 status status of command, should be ok data content of response, here the current timeout plain text format 10",
    "description": "Set/Get session timeout",
    "tags": [],
    "title": "[ESP510]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp510/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set/Change admin password, only authenticated admin can change the password\nInput [ESP550]\u003cpassword\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\npassword for the admin limited to 20 characters\nOutput In json format { \"cmd\":\"550\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 550 status status of command, should be ok data content of response, here ok when password is changed ",
    "description": "Set/Change admin password",
    "tags": [],
    "title": "[ESP550]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp550/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set/Change admin password, only authenticated admin can change the password\nInput [ESP550]\u003cpassword\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\npassword for the admin limited to 20 characters\nOutput In json format { \"cmd\":\"550\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 550 status status of command, should be ok data content of response, here ok when password is changed ",
    "description": "Set/Change admin password",
    "tags": [],
    "title": "[ESP550]",
    "uri": "/esp3d/v3.x/documentation/commands/esp550/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set/Change admin password, only authenticated admin can change the password\nInput [ESP550]\u003cpassword\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\npassword for the admin limited to 20 characters\nOutput In json format { \"cmd\":\"550\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 550 status status of command, should be ok data content of response, here ok when password is changed ",
    "description": "Set/Change admin password",
    "tags": [],
    "title": "[ESP550]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp550/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set/Change user password, only authenticated admin/user can change the password\nInput [ESP555]\u003cpassword\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\npassword for the user limited to 20 characters\nOutput In json format { \"cmd\":\"555\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 555 status status of command, should be ok data content of response, here ok when password is changed ",
    "description": "Set/Change user password",
    "tags": [],
    "title": "[ESP555]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp555/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set/Change user password, only authenticated admin/user can change the password\nInput [ESP555]\u003cpassword\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\npassword for the user limited to 20 characters\nOutput In json format { \"cmd\":\"555\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 555 status status of command, should be ok data content of response, here ok when password is changed ",
    "description": "Set/Change user password",
    "tags": [],
    "title": "[ESP555]",
    "uri": "/esp3d/v3.x/documentation/commands/esp555/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set/Change user password, only authenticated admin/user can change the password\nInput [ESP555]\u003cpassword\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\npassword for the user limited to 20 characters\nOutput In json format { \"cmd\":\"555\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 555 status status of command, should be ok data content of response, here ok when password is changed ",
    "description": "Set/Change user password",
    "tags": [],
    "title": "[ESP555]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp555/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Send Notification using defined method, will also send notification to webui and eventually to any connected screen\nInput [ESP600]\u003cmessage\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmessage the message to send, limited to 128 characters. Message can contain some variables:\n%ESP_NAME% : ESP3D hostname %ESP_IP% : ESP3D local IP address Output In json format { \"cmd\":\"600\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 600 status status of command, should be ok data content of response, here ok when notification is sent ",
    "description": "Send Notification",
    "tags": [],
    "title": "[ESP600]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp600/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Send Notification using defined method, will also send notification to webui and eventually to any connected screen\nInput [ESP600]\u003cmessage\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmessage the message to send, limited to 128 characters. Message can contain some variables:\n%ESP_NAME% : ESP3D hostname %ESP_IP% : ESP3D local IP address Output In json format { \"cmd\":\"600\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 600 status status of command, should be ok data content of response, here ok when notification is sent ",
    "description": "Send Notification",
    "tags": [],
    "title": "[ESP600]",
    "uri": "/esp3d/v3.x/documentation/commands/esp600/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Send Notification using defined method, will also send notification to webui and eventually to any connected screen\nInput [ESP600]\u003cmessage\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nmessage the message to send, limited to 128 characters. Message can contain some variables:\n%ESP_NAME% : ESP3D hostname %ESP_IP% : ESP3D local IP address Output In json format { \"cmd\":\"600\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 600 status status of command, should be ok data content of response, here ok when notification is sent ",
    "description": "Send Notification",
    "tags": [],
    "title": "[ESP600]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp600/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set/Get Notification settings\nInput [ESP610]type=\u003cNONE/PUSHOVER/EMAIL/LINE/IFTTT\u003e T1=\u003ctoken1\u003e T2=\u003ctoken2\u003e TS=\u003cSettings\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\ntype\nif type is empty, it will display current type if type is not empty, it will set the type currently only these types are supported: NONE PUSHOVER EMAIL LINE TELEGRAM IFTTT (by webhook) T1\nif T1 is not empty, it will set the token1 which depend on type of notification T2\nif T2 is not empty, it will set the token2 which depend on type of notification TS if TS is not empty, it will set the setting token which depend on type of notification\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"610\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 610 status status of command, should be ok data content of response, here ok when notification is sent ",
    "description": "Set/Get Notification settings",
    "tags": [],
    "title": "[ESP610]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp610/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set/Get Notification settings\nInput [ESP610]type=\u003cNONE/PUSHOVER/EMAIL/LINE/IFTTT/HOMEASSISTANT\u003e T1=\u003ctoken1\u003e T2=\u003ctoken2\u003e TS=\u003cSettings\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\ntype\nif type is empty, it will display current type if type is not empty, it will set the type currently only these types are supported: NONE PUSHOVER EMAIL LINE TELEGRAM IFTTT (by webhook) HOMEASSISTANT (by webhook) T1\nif T1 is not empty, it will set the token1 which depend on type of notification T2\nif T2 is not empty, it will set the token2 which depend on type of notification TS if TS is not empty, it will set the setting token which depend on type of notification\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"610\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 610 status status of command, should be ok data content of response, here ok when notification is sent ",
    "description": "Set/Get Notification settings",
    "tags": [],
    "title": "[ESP610]",
    "uri": "/esp3d/v3.x/documentation/commands/esp610/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set/Get Notification settings\nInput [ESP610]type=\u003cNONE/PUSHOVER/EMAIL/LINE/IFTTT/HOMEASSISTANT\u003e T1=\u003ctoken1\u003e T2=\u003ctoken2\u003e TS=\u003cSettings\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\ntype\nif type is empty, it will display current type if type is not empty, it will set the type currently only these types are supported: NONE PUSHOVER EMAIL LINE TELEGRAM IFTTT (by webhook) HOMEASSISTANT (by webhook) T1\nif T1 is not empty, it will set the token1 which depend on type of notification T2\nif T2 is not empty, it will set the token2 which depend on type of notification TS if TS is not empty, it will set the setting token which depend on type of notification\npwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"610\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 610 status status of command, should be ok data content of response, here ok when notification is sent ",
    "description": "Set/Get Notification settings",
    "tags": [],
    "title": "[ESP610]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp610/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Send Notification using encodded URL\nInput [ESP620]\u003curl\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nurl the url to send, limited to 128 characters, must be encoded\nOutput In json format { \"cmd\":\"620\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 620 status status of command, should be ok data content of response, here ok when notification is sent ",
    "description": "Send Notification using encodded URL",
    "tags": [],
    "title": "[ESP620]",
    "uri": "/esp3d/v3.x/documentation/commands/esp620/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Send Notification using encodded URL\nInput [ESP620]\u003curl\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nurl the url to send, limited to 128 characters, must be encoded\nOutput In json format { \"cmd\":\"620\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 620 status status of command, should be ok data content of response, here ok when notification is sent ",
    "description": "Send Notification using encodded URL",
    "tags": [],
    "title": "[ESP620]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp620/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Process local file on /FS or /SD\nInput [ESP700]\u003cfilename\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nfilename the filename to process, must be a valid file on /FS or /SD\nOutput In json format { \"cmd\":\"700\", \"status\":\"ok\", \"data\":\"Processing \u003cfilename\u003e\" } cmd Id of requested command, should be 700 status status of command, should be ok data content of response, here Processing \u003cfilename\u003e when file is processing ",
    "description": "Process local file on /FS or /SD",
    "tags": [],
    "title": "[ESP700]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp700/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Process local file on /FS or /SD\nInput [ESP700]\u003cfilename\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nfilename the filename to process, must be a valid file on /FS or /SD\nOutput In json format { \"cmd\":\"700\", \"status\":\"ok\", \"data\":\"Processing \u003cfilename\u003e\" } cmd Id of requested command, should be 700 status status of command, should be ok data content of response, here Processing \u003cfilename\u003e when file is processing ",
    "description": "Process local file on /FS or /SD",
    "tags": [],
    "title": "[ESP700]",
    "uri": "/esp3d/v3.x/documentation/commands/esp700/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Process local file on /FS or /SD\nInput [ESP700]\u003cfilename\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nfilename the filename to process, must be a valid file on /FS or /SD\nOutput In json format { \"cmd\":\"700\", \"status\":\"ok\", \"data\":\"Processing \u003cfilename\u003e\" } cmd Id of requested command, should be 700 status status of command, should be ok data content of response, here Processing \u003cfilename\u003e when file is processing ",
    "description": "Process local file on /FS or /SD",
    "tags": [],
    "title": "[ESP700]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp700/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Query and Control ESP700 stream\nInput [ESP701]action=\u003caction\u003e \u003cCLEAR_ERROR\u003ejson=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\naction\nif action is empty, it will display current state if action is not empty, it will set the action currently only these actions are supported: ABORT PAUSE RESUME CLEAR_ERROR\nif CLEAR_ERROR is present, it will clear the current error state Output In json format { \"cmd\":\"701\", \"status\":\"ok\", \"data\":{ \"status\":\"processing\", \"total\":\"1000\", \"processed\":\"500\", \"type\":\"1\", \"name\":\"/SD/myfile.gco\" } } cmd Id of requested command, should be 701 status status of command, should be ok data content of response, here the current state of stream ",
    "description": "Query and Control ESP700 stream",
    "tags": [],
    "title": "[ESP701]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp701/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Query and Control ESP700 stream\nInput [ESP701]action=\u003caction\u003e \u003cCLEAR_ERROR\u003ejson=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\naction\nif action is empty, it will display current state if action is not empty, it will set the action currently only these actions are supported: ABORT PAUSE RESUME CLEAR_ERROR\nif CLEAR_ERROR is present, it will clear the current error state Output In json format { \"cmd\":\"701\", \"status\":\"ok\", \"data\":{ \"status\":\"processing\", \"total\":\"1000\", \"processed\":\"500\", \"type\":\"1\", \"name\":\"/SD/myfile.gco\" } } cmd Id of requested command, should be 701 status status of command, should be ok data content of response, here the current state of stream ",
    "description": "Query and Control ESP700 stream",
    "tags": [],
    "title": "[ESP701]",
    "uri": "/esp3d/v3.x/documentation/commands/esp701/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Query and Control ESP700 stream\nInput [ESP701]action=\u003caction\u003e \u003cCLEAR_ERROR\u003ejson=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\naction\nif action is empty, it will display current state if action is not empty, it will set the action currently only these actions are supported: ABORT PAUSE RESUME CLEAR_ERROR\nif CLEAR_ERROR is present, it will clear the current error state Output In json format { \"cmd\":\"701\", \"status\":\"ok\", \"data\":{ \"status\":\"processing\", \"total\":\"1000\", \"processed\":\"500\", \"type\":\"1\", \"name\":\"/SD/myfile.gco\" } } cmd Id of requested command, should be 701 status status of command, should be ok data content of response, here the current state of stream ",
    "description": "Query and Control ESP700 stream",
    "tags": [],
    "title": "[ESP701]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp701/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Define scripts used when stream is paused/aborted/resumed\nInput [ESP702]\u003cpause/stop/resume\u003e=\u003cscript\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\naction (pause/stop/resume) assign a script to the action\nOutput In json format { \"cmd\":\"702\", \"status\":\"ok\", \"data\":{ \"pause\":\"/fs/mypause.gco\", \"stop\":\"/fs/mystop.gco\", \"resume\":\"/fs/mystop.gco\" } } cmd Id of requested command, should be 702 status status of command, should be ok data content of response, here the current scripts for each action ",
    "description": "Define scripts used when stream is paused/aborted/resumed",
    "tags": [],
    "title": "[ESP702]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp702/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Format ESP Filesystem\nInput [ESP710]FORMATFS json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nFORMATFS\nif FORMATFS is present, it will format the local filesystem Output In json format { \"cmd\":\"710\", \"status\":\"ok\", \"data\":\"Starting formating...\" } cmd Id of requested command, should be 710 status status of command, should be ok data content of response, here Starting formating... when filesystem is starting an new message is sent when formating is done\n{ \"cmd\":\"710\", \"status\":\"ok\", \"data\":\"Formating done\" } cmd Id of requested command, should be 710 status status of command, should be ok data content of response, here Formating done when filesystem is done ",
    "description": "Format ESP Filesystem",
    "tags": [],
    "title": "[ESP710]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp710/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Format ESP Filesystem\nInput [ESP710]FORMATFS json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nFORMATFS\nif FORMATFS is present, it will format the local filesystem Output In json format { \"cmd\":\"710\", \"status\":\"ok\", \"data\":\"Starting formating...\" } cmd Id of requested command, should be 710 status status of command, should be ok data content of response, here Starting formating... when filesystem is starting an new message is sent when formating is done\n{ \"cmd\":\"710\", \"status\":\"ok\", \"data\":\"Formating done\" } cmd Id of requested command, should be 710 status status of command, should be ok data content of response, here Formating done when filesystem is done ",
    "description": "Format ESP Filesystem",
    "tags": [],
    "title": "[ESP710]",
    "uri": "/esp3d/v3.x/documentation/commands/esp710/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Format ESP Filesystem\nInput [ESP710]FORMATFS json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nFORMATFS\nif FORMATFS is present, it will format the local filesystem Output In json format { \"cmd\":\"710\", \"status\":\"ok\", \"data\":\"Starting formating...\" } cmd Id of requested command, should be 710 status status of command, should be ok data content of response, here Starting formating... when filesystem is starting an new message is sent when formating is done\n{ \"cmd\":\"710\", \"status\":\"ok\", \"data\":\"Formating done\" } cmd Id of requested command, should be 710 status status of command, should be ok data content of response, here Formating done when filesystem is done ",
    "description": "Format ESP Filesystem",
    "tags": [],
    "title": "[ESP710]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp710/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Format SD Card, this depend on SD card format defined in configuration.h\nInput [ESP715]FORMATSD json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nFORMATSD\nif FORMATSD is present, it will format the SD card Output In json format { \"cmd\":\"715\", \"status\":\"ok\", \"data\":\"Starting formating...\" } cmd Id of requested command, should be 715 status status of command, should be ok data content of response, here Starting formating... when SD card is starting an new message is sent when formating is done\n{ \"cmd\":\"715\", \"status\":\"ok\", \"data\":\"Formating done\" } cmd Id of requested command, should be 715 status status of command, should be ok data content of response, here Formating done when SD card is done ",
    "description": "Format SD Card",
    "tags": [],
    "title": "[ESP715]",
    "uri": "/esp3d/v3.x/documentation/commands/esp715/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Format SD Card, this depend on SD card format defined in configuration.h\nInput [ESP715]FORMATSD json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nFORMATSD\nif FORMATSD is present, it will format the SD card Output In json format { \"cmd\":\"715\", \"status\":\"ok\", \"data\":\"Starting formating...\" } cmd Id of requested command, should be 715 status status of command, should be ok data content of response, here Starting formating... when SD card is starting an new message is sent when formating is done\n{ \"cmd\":\"715\", \"status\":\"ok\", \"data\":\"Formating done\" } cmd Id of requested command, should be 715 status status of command, should be ok data content of response, here Formating done when SD card is done ",
    "description": "Format SD Card",
    "tags": [],
    "title": "[ESP715]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp715/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "List files on /FS or defined repository\nInput [ESP720]\u003cRoot\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nRoot\nif Root is empty, it will list files on /FS if Root is not empty, it will list files on defined repository Output json { \"cmd\":\"720\", \"status\":\"ok\", \"data\":{ \"path\":\"/\", \"files\":[ {\"name\":\"index.html.gz\",\"size\":\"88.67 KB\",\"time\":\"2023-11-05 11:57:57\"} ], \"total\":\"128.00 KB\", \"used\":\"100.00 KB\", \"occupation\":\"78\" } } cmd Id of requested command, should be 720\nstatus status of command, should be ok\ndata content of response, here the list of files on /FS or defined repository\nText\nDirectory on Flash : / index.html.gz 88.67 KB 2023-11-05 11:57:57 Files: 1, Dirs :0 Total: 128.00 KB, Used: 100.00 KB, Available: 28.00 KB",
    "description": "List files on /FS or defined repository",
    "tags": [],
    "title": "[ESP720]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp720/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "List files on /FS or defined repository\nInput [ESP720]\u003cRoot\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nRoot\nif Root is empty, it will list files on /FS if Root is not empty, it will list files on defined repository Output json { \"cmd\":\"720\", \"status\":\"ok\", \"data\":{ \"path\":\"/\", \"files\":[ {\"name\":\"index.html.gz\",\"size\":\"88.67 KB\",\"time\":\"2023-11-05 11:57:57\"} ], \"total\":\"128.00 KB\", \"used\":\"100.00 KB\", \"occupation\":\"78\" } } cmd Id of requested command, should be 720\nstatus status of command, should be ok\ndata content of response, here the list of files on /FS or defined repository\nText\nDirectory on Flash : / index.html.gz 88.67 KB 2023-11-05 11:57:57 Files: 1, Dirs :0 Total: 128.00 KB, Used: 100.00 KB, Available: 28.00 KB",
    "description": "List files on /FS or defined repository",
    "tags": [],
    "title": "[ESP720]",
    "uri": "/esp3d/v3.x/documentation/commands/esp720/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "List files on /FS or defined repository\nInput [ESP720]\u003cRoot\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nRoot\nif Root is empty, it will list files on /FS if Root is not empty, it will list files on defined repository Output json { \"cmd\":\"720\", \"status\":\"ok\", \"data\":{ \"path\":\"/\", \"files\":[ {\"name\":\"index.html.gz\",\"size\":\"88.67 KB\",\"time\":\"2023-11-05 11:57:57\"} ], \"total\":\"128.00 KB\", \"used\":\"100.00 KB\", \"occupation\":\"78\" } } cmd Id of requested command, should be 720\nstatus status of command, should be ok\ndata content of response, here the list of files on /FS or defined repository\nText\nDirectory on Flash : / index.html.gz 88.67 KB 2023-11-05 11:57:57 Files: 1, Dirs :0 Total: 128.00 KB, Used: 100.00 KB, Available: 28.00 KB",
    "description": "List files on /FS or defined repository",
    "tags": [],
    "title": "[ESP720]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp720/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Do some actions on ESP Filesystem: rmdir / remove / mkdir / exists / create\nInput [ESP730]\u003caction\u003e=\u003cpath\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\naction\nif action is not empty, it will set the action currently only these actions are supported: RMDIR (dir) REMOVE (file) MKDIR (dir) EXISTS (file/dir) CREATE (file) path the path to process, must be a valid file or directory on /FS\nOutput In json format { \"cmd\":\"730\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 730 status status of command, should be ok data content of response, here ok when action is done ",
    "description": "Do some actions on ESP Filesystem:  rmdir / remove / mkdir / exists / create",
    "tags": [],
    "title": "[ESP730]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp730/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Do some actions on ESP Filesystem: rmdir / remove / mkdir / exists / create\nInput [ESP730]\u003caction\u003e=\u003cpath\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\naction\nif action is not empty, it will set the action currently only these actions are supported: RMDIR (dir) REMOVE (file) MKDIR (dir) EXISTS (file/dir) CREATE (file) path the path to process, must be a valid file or directory on /FS\nOutput In json format { \"cmd\":\"730\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 730 status status of command, should be ok data content of response, here ok when action is done ",
    "description": "Do some actions on ESP Filesystem:  rmdir / remove / mkdir / exists / create",
    "tags": [],
    "title": "[ESP730]",
    "uri": "/esp3d/v3.x/documentation/commands/esp730/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Do some actions on ESP Filesystem: rmdir / remove / mkdir / exists / create\nInput [ESP730]\u003caction\u003e=\u003cpath\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\naction\nif action is not empty, it will set the action currently only these actions are supported: RMDIR (dir) REMOVE (file) MKDIR (dir) EXISTS (file/dir) CREATE (file) path the path to process, must be a valid file or directory on /FS\nOutput In json format { \"cmd\":\"730\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 730 status status of command, should be ok data content of response, here ok when action is done ",
    "description": "Do some actions on ESP Filesystem:  rmdir / remove / mkdir / exists / create",
    "tags": [],
    "title": "[ESP730]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp730/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "List files on /SD or defined repository\nInput [ESP740]\u003cRoot\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nRoot\nif Root is empty, it will list files on /SD if Root is not empty, it will list files on defined repository Output json { \"cmd\":\"720\", \"status\":\"ok\", \"data\":{ \"path\":\"/\", \"files\":[ {\"name\":\"System Volume Information\",\"size\":\"-1\"}, {\"name\":\"src\",\"size\":\"-1\"}, {\"name\":\"testdir\",\"size\":\"-1\"}, {\"name\":\"Newfolder2\",\"size\":\"-1\"}, {\"name\":\"conventions\",\"size\":\"-1\"}, {\"name\":\"extensions\",\"size\":\"-1\"}, {\"name\":\"fileupload\",\"size\":\"-1\"}, {\"name\":\"realtimecmd\",\"size\":\"-1\"}, {\"name\":\"variableslist\",\"size\":\"-1\"}, {\"name\":\"webhandlers\",\"size\":\"-1\"}, {\"name\":\"websockets\",\"size\":\"-1\"}, {\"name\":\"main\",\"size\":\"-1\"}, {\"name\":\"mks_pft70.sys\",\"size\":\"5 B\"}, {\"name\":\"index.html\",\"size\":\"57.47 KB\"}, {\"name\":\"index.xml\",\"size\":\"7.53 KB\"}, {\"name\":\"index.print.html\",\"size\":\"77.74 KB\"} ], \"total\":\"7.20 GB\", \"used\":\"52.06 MB\", \"occupation\":\"1\" } } cmd Id of requested command, should be 740\nstatus status of command, should be ok\ndata content of response, here the list of files on /SD or defined repository\ntext\nDirectory on SD : / [DIR] System Volume Information [DIR] src [DIR] testdir [DIR] New%20folder2 [DIR] conventions [DIR] extensions [DIR] fileupload [DIR] realtimecmd [DIR] variableslist [DIR] webhandlers [DIR] websockets [DIR] main mks_pft70.sys 5 B index.html 57.47 KB index.xml 7.53 KB index.print.html 77.74 KB Files: 4, Dirs :12 Total: 7.20 GB, Used: 52.06 MB, Available: 7.15 GB",
    "description": "List files on /SD or defined repository",
    "tags": [],
    "title": "[ESP740]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp740/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "List files on /SD or defined repository\nInput [ESP740]\u003cRoot\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nRoot\nif Root is empty, it will list files on /SD if Root is not empty, it will list files on defined repository Output json { \"cmd\":\"720\", \"status\":\"ok\", \"data\":{ \"path\":\"/\", \"files\":[ {\"name\":\"System Volume Information\",\"size\":\"-1\"}, {\"name\":\"src\",\"size\":\"-1\"}, {\"name\":\"testdir\",\"size\":\"-1\"}, {\"name\":\"Newfolder2\",\"size\":\"-1\"}, {\"name\":\"conventions\",\"size\":\"-1\"}, {\"name\":\"extensions\",\"size\":\"-1\"}, {\"name\":\"fileupload\",\"size\":\"-1\"}, {\"name\":\"realtimecmd\",\"size\":\"-1\"}, {\"name\":\"variableslist\",\"size\":\"-1\"}, {\"name\":\"webhandlers\",\"size\":\"-1\"}, {\"name\":\"websockets\",\"size\":\"-1\"}, {\"name\":\"main\",\"size\":\"-1\"}, {\"name\":\"mks_pft70.sys\",\"size\":\"5 B\"}, {\"name\":\"index.html\",\"size\":\"57.47 KB\"}, {\"name\":\"index.xml\",\"size\":\"7.53 KB\"}, {\"name\":\"index.print.html\",\"size\":\"77.74 KB\"} ], \"total\":\"7.20 GB\", \"used\":\"52.06 MB\", \"occupation\":\"1\" } } cmd Id of requested command, should be 740\nstatus status of command, should be ok\ndata content of response, here the list of files on /SD or defined repository\ntext\nDirectory on SD : / [DIR] System Volume Information [DIR] src [DIR] testdir [DIR] New%20folder2 [DIR] conventions [DIR] extensions [DIR] fileupload [DIR] realtimecmd [DIR] variableslist [DIR] webhandlers [DIR] websockets [DIR] main mks_pft70.sys 5 B index.html 57.47 KB index.xml 7.53 KB index.print.html 77.74 KB Files: 4, Dirs :12 Total: 7.20 GB, Used: 52.06 MB, Available: 7.15 GB",
    "description": "List files on /SD or defined repository",
    "tags": [],
    "title": "[ESP740]",
    "uri": "/esp3d/v3.x/documentation/commands/esp740/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "List files on /SD or defined repository\nInput [ESP740]\u003cRoot\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nRoot\nif Root is empty, it will list files on /SD if Root is not empty, it will list files on defined repository Output json { \"cmd\":\"720\", \"status\":\"ok\", \"data\":{ \"path\":\"/\", \"files\":[ {\"name\":\"System Volume Information\",\"size\":\"-1\"}, {\"name\":\"src\",\"size\":\"-1\"}, {\"name\":\"testdir\",\"size\":\"-1\"}, {\"name\":\"Newfolder2\",\"size\":\"-1\"}, {\"name\":\"conventions\",\"size\":\"-1\"}, {\"name\":\"extensions\",\"size\":\"-1\"}, {\"name\":\"fileupload\",\"size\":\"-1\"}, {\"name\":\"realtimecmd\",\"size\":\"-1\"}, {\"name\":\"variableslist\",\"size\":\"-1\"}, {\"name\":\"webhandlers\",\"size\":\"-1\"}, {\"name\":\"websockets\",\"size\":\"-1\"}, {\"name\":\"main\",\"size\":\"-1\"}, {\"name\":\"mks_pft70.sys\",\"size\":\"5 B\"}, {\"name\":\"index.html\",\"size\":\"57.47 KB\"}, {\"name\":\"index.xml\",\"size\":\"7.53 KB\"}, {\"name\":\"index.print.html\",\"size\":\"77.74 KB\"} ], \"total\":\"7.20 GB\", \"used\":\"52.06 MB\", \"occupation\":\"1\" } } cmd Id of requested command, should be 740\nstatus status of command, should be ok\ndata content of response, here the list of files on /SD or defined repository\ntext\nDirectory on SD : / [DIR] System Volume Information [DIR] src [DIR] testdir [DIR] New%20folder2 [DIR] conventions [DIR] extensions [DIR] fileupload [DIR] realtimecmd [DIR] variableslist [DIR] webhandlers [DIR] websockets [DIR] main mks_pft70.sys 5 B index.html 57.47 KB index.xml 7.53 KB index.print.html 77.74 KB Files: 4, Dirs :12 Total: 7.20 GB, Used: 52.06 MB, Available: 7.15 GB",
    "description": "List files on /SD or defined repository",
    "tags": [],
    "title": "[ESP740]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp740/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Do some actions on SD Card: rmdir / remove / mkdir / exists / create\nInput [ESP750]\u003caction\u003e=\u003cpath\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\naction\nif action is not empty, it will set the action currently only these actions are supported: RMDIR (dir) REMOVE (file) MKDIR (dir) EXISTS (file/dir) CREATE (file) path the path to process, must be a valid file or directory on /SD\nOutput In json format { \"cmd\":\"750\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 750 status status of command, should be ok data content of response, here ok when action is done ",
    "description": "Do some actions on SD Card:  rmdir / remove / mkdir / exists / create",
    "tags": [],
    "title": "[ESP750]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp750/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Do some actions on SD Card: rmdir / remove / mkdir / exists / create\nInput [ESP750]\u003caction\u003e=\u003cpath\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\naction\nif action is not empty, it will set the action currently only these actions are supported: RMDIR (dir) REMOVE (file) MKDIR (dir) EXISTS (file/dir) CREATE (file) path the path to process, must be a valid file or directory on /SD\nOutput In json format { \"cmd\":\"750\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 750 status status of command, should be ok data content of response, here ok when action is done ",
    "description": "Do some actions on SD Card:  rmdir / remove / mkdir / exists / create",
    "tags": [],
    "title": "[ESP750]",
    "uri": "/esp3d/v3.x/documentation/commands/esp750/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Do some actions on SD Card: rmdir / remove / mkdir / exists / create\nInput [ESP750]\u003caction\u003e=\u003cpath\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\naction\nif action is not empty, it will set the action currently only these actions are supported: RMDIR (dir) REMOVE (file) MKDIR (dir) EXISTS (file/dir) CREATE (file) path the path to process, must be a valid file or directory on /SD\nOutput In json format { \"cmd\":\"750\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 750 status status of command, should be ok data content of response, here ok when action is done ",
    "description": "Do some actions on SD Card:  rmdir / remove / mkdir / exists / create",
    "tags": [],
    "title": "[ESP750]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp750/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "List Global Filesystem\nInput [ESP780]\u003cRoot\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nRoot\nif Root is empty, it will list files on /FS if Root is not empty, it will list files on defined repository Output json { \"cmd\":\"780\", \"status\":\"ok\", \"data\":{ \"path\":\"/\", \"files\":[ {\"name\":\"FS\",\"size\":\"-1\"}, {\"name\":\"SD\",\"size\":\"-1\"} ], \"total\":\"0 B\", \"used\":\"0 B\", \"occupation\":\"0\" } } cmd Id of requested command, should be 780\nstatus status of command, should be ok\ndata content of response, here the list of files on /FS or defined repository\ntext\nDirectory on Global FS : / [DIR] FS [DIR] SD Files: 0, Dirs :2 Total: 0 B, Used: 0 B, Available: 0 B",
    "description": "List Global Filesystem",
    "tags": [],
    "title": "[ESP780]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp780/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "List Global Filesystem\nInput [ESP780]\u003cRoot\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nRoot\nif Root is empty, it will list files on /FS if Root is not empty, it will list files on defined repository Output json { \"cmd\":\"780\", \"status\":\"ok\", \"data\":{ \"path\":\"/\", \"files\":[ {\"name\":\"FS\",\"size\":\"-1\"}, {\"name\":\"SD\",\"size\":\"-1\"} ], \"total\":\"0 B\", \"used\":\"0 B\", \"occupation\":\"0\" } } cmd Id of requested command, should be 780\nstatus status of command, should be ok\ndata content of response, here the list of files on /FS or defined repository\ntext\nDirectory on Global FS : / [DIR] FS [DIR] SD Files: 0, Dirs :2 Total: 0 B, Used: 0 B, Available: 0 B",
    "description": "List Global Filesystem",
    "tags": [],
    "title": "[ESP780]",
    "uri": "/esp3d/v3.x/documentation/commands/esp780/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "List Global Filesystem\nInput [ESP780]\u003cRoot\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nRoot\nif Root is empty, it will list files on /FS if Root is not empty, it will list files on defined repository Output json { \"cmd\":\"780\", \"status\":\"ok\", \"data\":{ \"path\":\"/\", \"files\":[ {\"name\":\"FS\",\"size\":\"-1\"}, {\"name\":\"SD\",\"size\":\"-1\"} ], \"total\":\"0 B\", \"used\":\"0 B\", \"occupation\":\"0\" } } cmd Id of requested command, should be 780\nstatus status of command, should be ok\ndata content of response, here the list of files on /FS or defined repository\ntext\nDirectory on Global FS : / [DIR] FS [DIR] SD Files: 0, Dirs :2 Total: 0 B, Used: 0 B, Available: 0 B",
    "description": "List Global Filesystem",
    "tags": [],
    "title": "[ESP780]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp780/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Do some actions on Global Filesystem: rmdir / remove / mkdir / exists / create\nInput [ESP790]\u003caction\u003e=\u003cpath\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\naction\nif action is not empty, it will set the action currently only these actions are supported: RMDIR (dir) REMOVE (file) MKDIR (dir) EXISTS (file/dir) CREATE (file) path the path to process, must be a valid file or directory on /FS or /SD\nOutput In json format { \"cmd\":\"790\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 790 status status of command, should be ok data content of response, here ok when action is done ",
    "description": "Do some actions on Global Filesystem:  rmdir / remove / mkdir / exists / create",
    "tags": [],
    "title": "[ESP790]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp790/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Do some actions on Global Filesystem: rmdir / remove / mkdir / exists / create\nInput [ESP790]\u003caction\u003e=\u003cpath\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\naction\nif action is not empty, it will set the action currently only these actions are supported: RMDIR (dir) REMOVE (file) MKDIR (dir) EXISTS (file/dir) CREATE (file) path the path to process, must be a valid file or directory on /FS or /SD\nOutput In json format { \"cmd\":\"790\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 790 status status of command, should be ok data content of response, here ok when action is done ",
    "description": "Do some actions on Global Filesystem:  rmdir / remove / mkdir / exists / create",
    "tags": [],
    "title": "[ESP790]",
    "uri": "/esp3d/v3.x/documentation/commands/esp790/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Do some actions on Global Filesystem: rmdir / remove / mkdir / exists / create\nInput [ESP790]\u003caction\u003e=\u003cpath\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\naction\nif action is not empty, it will set the action currently only these actions are supported: RMDIR (dir) REMOVE (file) MKDIR (dir) EXISTS (file/dir) CREATE (file) path the path to process, must be a valid file or directory on /FS or /SD\nOutput In json format { \"cmd\":\"790\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 790 status status of command, should be ok data content of response, here ok when action is done ",
    "description": "Do some actions on Global Filesystem:  rmdir / remove / mkdir / exists / create",
    "tags": [],
    "title": "[ESP790]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp790/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get fw capabilities eventually set time with pc time and set setup state\nInput [ESP800]\u003ctime=YYYY-MM-DDTHH:mm:ss\u003e \u003cversion=3.0.0-a11\u003e \u003csetup=0/1\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\n* json=yes\rthe output format\r* time=\rto set ESP3D time using ISO 8601 format : `YYYY`-`MM`-`DD`T`HH`:`minutes`:`seconds`\r* tz=+08:00 (optional)\rto set ESP3D time zone using ISO 8601 format : `+`/`-` `HH`-`minutes`\r* version\rversion of webUI\r* setup flag\rEnable / Disable the setup flag\rOutput In json format { \"cmd\":\"800\", \"status\":\"ok\", \"data\":{ \"FWVersion\":\"bugfix-2.0.x-3.0.0.a200\", \"FWTarget\":\"marlin\", \"FWTargetID\":\"30\", \"Setup\":\"Enabled\", \"SDConnection\":\"shared\", \"SerialProtocol\":\"Socket\", \"Authentication\":\"Disabled\", \"WebCommunication\":\"Synchronous\", \"WebSocketIP\":\"192.168.2.117\", \"WebSocketPort\":\"81\", \"Hostname\":\"esp3d\", \"WiFiMode\":\"STA\", \"WebUpdate\":\"Enabled\", \"FlashFileSystem\":\"LittleFS\", \"HostPath\":\"www\", \"Time\":\"none\", \"Screen\":\"ESP32S3_HMI43V3\" } } cmd Id of requested command, should be 800\nstatus status of command, should be ok\ndata content of response:\nFWVersion Version of ESP3D firmware or targeted FW (Marlin with ESP3DLib / grblHal)\nFWTarget name of targeted Firmware\nFWTargetID numerical ID of targeted FW as same name can have several Ids\nSetup Should be Enabled or Disabled according flag in EEPROM/Preferences, this allows to WedUI to start wizard automaticaly (or not)\nSDConnection This is SD capability, SD can be\nshared ESP does share access to SD card reader with main board or Firmware (Marlin with ESP3Dlib, ESP3D with hardware SD share solution) direct ESP does have direct access to SD card reader (e.g: ESP3D, grblHal) none ESP does not have direct access to SD card reader, (e.g: ESP3D with only serial connection) SerialProtocol It define how ESP3D FW communicate with main FW\nSocket ESP and main FW use same FW (e.g: Marlin with ESP3DLib, grblHal) Raw Classic serial connection MKS Serial connection using MKS protocol Authentication Can be Enabled or Disabled\nWebCommunication currently only Synchronous, because Asychronous has been put in hold\nWebSocketIP Ip address for the websocket terminal 192.168.2.117\nWebSocketPort Port for the web socket terminal 81\nHostname Hostname of ESP3D or main Baord esp3d\nWiFiMode Current wiFi mode in use can be AP or STA\nWebUpdate Inform webUI the feature is available or not, can be Enabled or Disabled\nFlashFileSystem (currently FileSystem, to be updated soon ) The file system used by ESP board can be LittleFS, SPIFFS, Fat, none\nHostPath Path where the preferences.json and index.html.gz are stored and can be updated (e.g: www)\nTime Type of time support\nnone Time is not supported Auto Board use internet to sync time and it is successful Failed to set Board use internet to sync time and it is failed Manual Board use time of ESP800 to set the time and it is successful Not set Board use time of ESP800 to set the time and command did not sent it (time may have been set by previous command) CameraID if ESP has camera it contain the camera ID\nCameraName if ESP has camera it contain the camera name\nAxisletters Currently only used for grbHAL can be :\nXYZABC XYZUVZ (supported soon) XYZABCUVZ (supported soon) Screen Screen type used by ESP3D-TFT e.g: ESP32S3_HMI43V3",
    "description": "Get ESP3D fw capabilities",
    "tags": [],
    "title": "[ESP800]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp800/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get fw capabilities eventually set time with pc time and set setup state\nInput [ESP800]\u003ctime=YYYY-MM-DDTHH:mm:ss\u003e \u003cversion=3.0.0-a11\u003e \u003csetup=0/1\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\n* json=yes\rthe output format\r* time=\rto set ESP3D time using ISO 8601 format : `YYYY`-`MM`-`DD`T`HH`:`minutes`:`seconds`\r* tz=+08:00 (optional)\rto set ESP3D time zone using ISO 8601 format : `+`/`-` `HH`-`minutes`\r* version\rversion of webUI\r* setup flag\rEnable / Disable the setup flag\rOutput In json format { \"cmd\":\"800\", \"status\":\"ok\", \"data\":{ \"FWVersion\":\"bugfix-2.0.x-3.0.0.a200\", \"FWTarget\":\"marlin\", \"FWTargetID\":\"30\", \"Setup\":\"Enabled\", \"SDConnection\":\"shared\", \"SerialProtocol\":\"Socket\", \"Authentication\":\"Disabled\", \"WebCommunication\":\"Synchronous\", \"WebSocketIP\":\"192.168.2.117\", \"WebSocketPort\":\"81\", \"Hostname\":\"esp3d\", \"WiFiMode\":\"STA\", \"WebUpdate\":\"Enabled\", \"FlashFileSystem\":\"LittleFS\", \"HostPath\":\"www\", \"Time\":\"none\" } } cmd Id of requested command, should be 800\nstatus status of command, should be ok\ndata content of response:\nFWVersion Version of ESP3D firmware or targeted FW (Marlin with ESP3DLib / grblHal)\nFWTarget name of targeted Firmware\nFWTargetID numerical ID of targeted FW as same name can have several Ids\nSetup Should be Enabled or Disabled according flag in EEPROM/Preferences, this allows to WedUI to start wizard automaticaly (or not)\nSDConnection This is SD capability, SD can be\nshared ESP does share access to SD card reader with main board or Firmware (Marlin with ESP3Dlib, ESP3D with hardware SD share solution) direct ESP does have direct access to SD card reader (e.g: ESP3D, grblHal) none ESP does not have direct access to SD card reader, (e.g: ESP3D with only serial connection) SerialProtocol It define how ESP3D FW communicate with main FW\nSocket ESP and main FW use same FW (e.g: Marlin with ESP3DLib, grblHal) Raw Classic serial connection MKS Serial connection using MKS protocol Authentication Can be Enabled or Disabled\nWebCommunication currently only Synchronous, because Asychronous has been put in hold\nWebSocketIP Ip address for the websocket terminal 192.168.2.117\nWebSocketPort Port for the web socket terminal 81\nHostname Hostname of ESP3D or main Baord esp3d\nWiFiMode Current wiFi mode in use can be AP or STA\nWebUpdate Inform webUI the feature is available or not, can be Enabled or Disabled\nFlashFileSystem (currently FileSystem, to be updated soon ) The file system used by ESP board can be LittleFS, SPIFFS, Fat, none\nHostPath Path where the preferences.json and index.html.gz are stored and can be updated (e.g: www)\nTime Type of time support\nnone Time is not supported Auto Board use internet to sync time and it is successful Failed to set Board use internet to sync time and it is failed Manual Board use time of ESP800 to set the time and it is successful Not set Board use time of ESP800 to set the time and command did not sent it (time may have been set by previous command) CameraID if ESP has camera it contain the camera ID\nCameraName if ESP has camera it contain the camera name\nAxisletters Currently only used for grbHAL can be :\nXYZABC XYZUVZ (supported soon) XYZABCUVZ (supported soon) ",
    "description": "Get ESP3D fw capabilities",
    "tags": [],
    "title": "[ESP800]",
    "uri": "/esp3d/v3.x/documentation/commands/esp800/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get fw capabilities eventually set time with pc time and set setup state\nInput [ESP800]\u003ctime=YYYY-MM-DDTHH:mm:ss\u003e \u003cversion=3.0.0-a11\u003e \u003csetup=0/1\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\n* json=yes\rthe output format\r* time=\rto set ESP3D time using ISO 8601 format : `YYYY`-`MM`-`DD`T`HH`:`minutes`:`seconds`\r* tz=+08:00 (optional)\rto set ESP3D time zone using ISO 8601 format : `+`/`-` `HH`-`minutes`\r* version\rversion of webUI\r* setup flag\rEnable / Disable the setup flag\rOutput In json format { \"cmd\":\"800\", \"status\":\"ok\", \"data\":{ \"FWVersion\":\"bugfix-2.0.x-3.0.0.a200\", \"FWTarget\":\"marlin\", \"FWTargetID\":\"30\", \"Setup\":\"Enabled\", \"SDConnection\":\"shared\", \"SerialProtocol\":\"Socket\", \"Authentication\":\"Disabled\", \"WebCommunication\":\"Synchronous\", \"WebSocketIP\":\"192.168.2.117\", \"WebSocketPort\":\"81\", \"Hostname\":\"esp3d\", \"WiFiMode\":\"STA\", \"WebUpdate\":\"Enabled\", \"FlashFileSystem\":\"LittleFS\", \"HostPath\":\"www\", \"Time\":\"none\" } } cmd Id of requested command, should be 800\nstatus status of command, should be ok\ndata content of response:\nFWVersion Version of ESP3D firmware or targeted FW (Marlin with ESP3DLib / grblHal)\nFWTarget name of targeted Firmware\nFWTargetID numerical ID of targeted FW as same name can have several Ids\nSetup Should be Enabled or Disabled according flag in EEPROM/Preferences, this allows to WedUI to start wizard automaticaly (or not)\nSDConnection This is SD capability, SD can be\nshared ESP does share access to SD card reader with main board or Firmware (Marlin with ESP3Dlib, ESP3D with hardware SD share solution) direct ESP does have direct access to SD card reader (e.g: ESP3D, grblHal) none ESP does not have direct access to SD card reader, (e.g: ESP3D with only serial connection) SerialProtocol It define how ESP3D FW communicate with main FW\nSocket ESP and main FW use same FW (e.g: Marlin with ESP3DLib, grblHal) Raw Classic serial connection MKS Serial connection using MKS protocol Authentication Can be Enabled or Disabled\nWebCommunication currently only Synchronous, because Asychronous has been put in hold\nWebSocketIP Ip address for the websocket terminal 192.168.2.117\nWebSocketPort Port for the web socket terminal 81\nHostname Hostname of ESP3D or main Baord esp3d\nWiFiMode Current wiFi mode in use can be AP or STA\nWebUpdate Inform webUI the feature is available or not, can be Enabled or Disabled\nFlashFileSystem (currently FileSystem, to be updated soon ) The file system used by ESP board can be LittleFS, SPIFFS, Fat, none\nHostPath Path where the preferences.json and index.html.gz are stored and can be updated (e.g: www)\nTime Type of time support\nnone Time is not supported Auto Board use internet to sync time and it is successful Failed to set Board use internet to sync time and it is failed Manual Board use time of ESP800 to set the time and it is successful Not set Board use time of ESP800 to set the time and command did not sent it (time may have been set by previous command) CameraID if ESP has camera it contain the camera ID\nCameraName if ESP has camera it contain the camera name\nAxisletters Currently only used for grbHAL can be :\nXYZABC XYZUVZ (supported soon) XYZABCUVZ (supported soon) ",
    "description": "Get ESP3D fw capabilities",
    "tags": [],
    "title": "[ESP800]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp800/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get state / Set Serial Communication\nInput [ESP900]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\nstate\nif state is empty, it will display current state if state is not empty, it will set the state currently only these states are supported: ENABLE DISABLE pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"900\", \"status\":\"ok\", \"data\":\"ENABLED\" } cmd Id of requested command, should be 900 status status of command, should be ok data content of response, here the current state -Text\nENABLED",
    "description": "Get / Set state  for main  serial communication",
    "tags": [],
    "title": "[ESP900]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp900/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get state / Set Serial Communication\nInput [ESP900]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\nstate\nif state is empty, it will display current state if state is not empty, it will set the state currently only these states are supported: ENABLE DISABLE pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"900\", \"status\":\"ok\", \"data\":\"ENABLED\" } cmd Id of requested command, should be 900 status status of command, should be ok data content of response, here the current state -Text\nENABLED",
    "description": "Get / Set state  for main  serial communication",
    "tags": [],
    "title": "[ESP900]",
    "uri": "/esp3d/v3.x/documentation/commands/esp900/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get state / Set Serial Communication\nInput [ESP900]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\nstate\nif state is empty, it will display current state if state is not empty, it will set the state currently only these states are supported: ENABLE DISABLE pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"900\", \"status\":\"ok\", \"data\":\"ENABLED\" } cmd Id of requested command, should be 900 status status of command, should be ok data content of response, here the current state -Text\nENABLED",
    "description": "Get / Set state  for main  serial communication",
    "tags": [],
    "title": "[ESP900]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp900/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Serial baudrate for main serial communication\nInput [ESP901]\u003cbaudrate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\nbaudrate\nif baudrate is empty, it will display current baudrate if baudrate is not empty, it will set the baudrate currently only these baudrates are supported: 9600 19200 38400 57600 74880 115200 230400 250000 500000 921600 1958400 pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"901\", \"status\":\"ok\", \"data\":\"115200\" } cmd Id of requested command, should be 901 status status of command, should be ok data content of response, here the current baudrate plain text format 115200",
    "description": "Set Serial baudrate for main serial communication",
    "tags": [],
    "title": "[ESP901]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp901/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Serial baudrate for main serial communication\nInput [ESP901]\u003cbaudrate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\nbaudrate\nif baudrate is empty, it will display current baudrate if baudrate is not empty, it will set the baudrate currently only these baudrates are supported: 9600 19200 38400 57600 74880 115200 230400 250000 500000 921600 1958400 pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"901\", \"status\":\"ok\", \"data\":\"115200\" } cmd Id of requested command, should be 901 status status of command, should be ok data content of response, here the current baudrate plain text format 115200",
    "description": "Set Serial baudrate for main serial communication",
    "tags": [],
    "title": "[ESP901]",
    "uri": "/esp3d/v3.x/documentation/commands/esp901/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Serial baudrate for main serial communication\nInput [ESP901]\u003cbaudrate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\nbaudrate\nif baudrate is empty, it will display current baudrate if baudrate is not empty, it will set the baudrate currently only these baudrates are supported: 9600 19200 38400 57600 74880 115200 230400 250000 500000 921600 1958400 pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"901\", \"status\":\"ok\", \"data\":\"115200\" } cmd Id of requested command, should be 901 status status of command, should be ok data content of response, here the current baudrate plain text format 115200",
    "description": "Set Serial baudrate for main serial communication",
    "tags": [],
    "title": "[ESP901]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp901/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get/Set USB Serial baudrate\nInput [ESP902]\u003cbaudrate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\nbaudrate\nif baudrate is empty, it will display current baudrate if baudrate is not empty, it will set the baudrate currently only these baudrates are supported: 9600 19200 38400 57600 74880 115200 230400 250000 500000 921600 1958400 pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"902\", \"status\":\"ok\", \"data\":\"115200\" } cmd Id of requested command, should be 902 status status of command, should be ok data content of response, here the current baudrate plain text format 115200",
    "description": "Get/Set USB Serial baudrate",
    "tags": [],
    "title": "[ESP902]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp902/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get state / Set Enable / Disable buzzer\nInput [ESP910]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\nstate\nif state is empty, it will display current state if state is not empty, it will set the state currently only these states are supported: ENABLE DISABLE pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"910\", \"status\":\"ok\", \"data\":\"ENABLED\" } cmd Id of requested command, should be 910 status status of command, should be ok data content of response, here the current state plain text format ENABLED",
    "description": "Get / Set state for buzzer",
    "tags": [],
    "title": "[ESP910]",
    "uri": "/esp3d/v3.x/documentation/commands/esp910/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get state / Set Enable / Disable buzzer\nInput [ESP910]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\nstate\nif state is empty, it will display current state if state is not empty, it will set the state currently only these states are supported: ENABLE DISABLE pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"910\", \"status\":\"ok\", \"data\":\"ENABLED\" } cmd Id of requested command, should be 910 status status of command, should be ok data content of response, here the current state plain text format ENABLED",
    "description": "Get / Set state for buzzer",
    "tags": [],
    "title": "[ESP910]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp910/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Serial Bridge state which can be ON, OFF, CLOSE\nInput [ESP930]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format\nstate\nif state is empty, it will display current state if state is not empty, it will set the state currently only these states are supported: ENABLE DISABLE CLOSE pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"930\", \"status\":\"ok\", \"data\":\"ENABLED\" } cmd Id of requested command, should be 930 status status of command, should be ok data content of response, here the current state plain text format ENABLED",
    "description": "Get / Set state for Serial Bridge",
    "tags": [],
    "title": "[ESP930]",
    "uri": "/esp3d/v3.x/documentation/commands/esp930/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Serial Bridge state which can be ON, OFF, CLOSE\nInput [ESP930]\u003cstate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format\nstate\nif state is empty, it will display current state if state is not empty, it will set the state currently only these states are supported: ENABLE DISABLE CLOSE pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"930\", \"status\":\"ok\", \"data\":\"ENABLED\" } cmd Id of requested command, should be 930 status status of command, should be ok data content of response, here the current state plain text format ENABLED",
    "description": "Get / Set state for Serial Bridge",
    "tags": [],
    "title": "[ESP930]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp930/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Serial Bridge baudrate\nInput [ESP931]\u003cbaudrate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format\nbaudrate\nif baudrate is empty, it will display current baudrate if baudrate is not empty, it will set the baudrate currently only these baudrates are supported: 9600 19200 38400 57600 74880 115200 230400 250000 500000 921600 1958400 pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"931\", \"status\":\"ok\", \"data\":\"115200\" } cmd Id of requested command, should be 931 status status of command, should be ok data content of response, here the current baudrate plain text format 115200",
    "description": "Get / Set baudrate for Serial Bridge",
    "tags": [],
    "title": "[ESP931]",
    "uri": "/esp3d/v3.x/documentation/commands/esp931/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set Serial Bridge baudrate\nInput [ESP931]\u003cbaudrate\u003e json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format\nbaudrate\nif baudrate is empty, it will display current baudrate if baudrate is not empty, it will set the baudrate currently only these baudrates are supported: 9600 19200 38400 57600 74880 115200 230400 250000 500000 921600 1958400 pwd= the admin password if authentication is enabled\nOutput In json format { \"cmd\":\"931\", \"status\":\"ok\", \"data\":\"115200\" } cmd Id of requested command, should be 931 status status of command, should be ok data content of response, here the current baudrate plain text format 115200",
    "description": "Get / Set baudrate for Serial Bridge",
    "tags": [],
    "title": "[ESP931]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp931/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D-TFT \u003e Version 1.X \u003e Documentation \u003e ESP3D commands",
    "content": "Get / Set commands output, only used with board having the usb-serial feature\nInput [ESP950]\u003cSERIAL/USB\u003e j json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format can be in JSON or plain text\npwd= the admin password if authentication is enabled\nSERIAL/USB the serial port to use, can be SERIAL or USB\nOutput In json format { \"cmd\":\"950\", \"status\":\"ok\", \"data\":\"USB\" } cmd Id of requested command, should be 950 status status of command, should be ok data content of response, the method used to ommunicate with printer /cnc, here: USB ",
    "description": "Get / Set commands output",
    "tags": [],
    "title": "[ESP950]",
    "uri": "/esp3d-tft/v1.x/documentation/commands/esp950/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3D \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set quiet boot if strapping pin is High, can only be done once and cannot be reverted\nNote\rThis command is only available if ESP32-S3, ESP32-C3 or ESP32-S2 is used\nInput [ESP999]QUIETBOOT json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format\npwd= the admin password if authentication is enabled\nQUIETBOOT\nif QUIETBOOT is present, it will set the quiet boot flag Output In json format { \"cmd\":\"999\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 999 status status of command, should be ok data content of response, here ok when quiet boot is set plain text format ok",
    "description": "Set quiet boot",
    "tags": [],
    "title": "[ESP999]",
    "uri": "/esp3d/v3.x/documentation/commands/esp999/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem \u003e ESP3DLib \u003e Version 3.X \u003e Documentation \u003e ESP3D commands",
    "content": "Set quiet boot if strapping pin is High, can only be done once and cannot be reverted\nNote\rThis command is only available if ESP32-S3, ESP32-C3 or ESP32-S2 is used\nInput [ESP999]QUIETBOOT json=\u003cno\u003e pwd=\u003cadmin password\u003e\njson=no the output format\npwd= the admin password if authentication is enabled\nQUIETBOOT\nif QUIETBOOT is present, it will set the quiet boot flag Output In json format { \"cmd\":\"999\", \"status\":\"ok\", \"data\":\"ok\" } cmd Id of requested command, should be 999 status status of command, should be ok data content of response, here ok when quiet boot is set plain text format ok",
    "description": "Set quiet boot",
    "tags": [],
    "title": "[ESP999]",
    "uri": "/esp3dlib/v3.x/documentation/commands/esp999/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Categories",
    "uri": "/categories/index.html"
  },
  {
    "breadcrumb": "ESP3D Ecosystem",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tags",
    "uri": "/tags/index.html"
  }
]
